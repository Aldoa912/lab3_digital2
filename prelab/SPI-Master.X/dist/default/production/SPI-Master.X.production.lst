

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 02 22:43:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 04/07/2022 GMT
    27                           ; 
    28                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     008F                     	;# 
   261     0090                     	;# 
   262     0091                     	;# 
   263     0092                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0094                     	;# 
   268     0095                     	;# 
   269     0096                     	;# 
   270     0097                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009A                     	;# 
   274     009B                     	;# 
   275     009C                     	;# 
   276     009D                     	;# 
   277     009E                     	;# 
   278     009F                     	;# 
   279     0105                     	;# 
   280     0107                     	;# 
   281     0108                     	;# 
   282     0109                     	;# 
   283     010C                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     0185                     	;# 
   289     0187                     	;# 
   290     0188                     	;# 
   291     0189                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     000E                     	;# 
   310     000F                     	;# 
   311     0010                     	;# 
   312     0011                     	;# 
   313     0012                     	;# 
   314     0013                     	;# 
   315     0014                     	;# 
   316     0015                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0017                     	;# 
   320     0018                     	;# 
   321     0019                     	;# 
   322     001A                     	;# 
   323     001B                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001D                     	;# 
   327     001E                     	;# 
   328     001F                     	;# 
   329     0081                     	;# 
   330     0085                     	;# 
   331     0086                     	;# 
   332     0087                     	;# 
   333     0088                     	;# 
   334     0089                     	;# 
   335     008C                     	;# 
   336     008D                     	;# 
   337     008E                     	;# 
   338     008F                     	;# 
   339     0090                     	;# 
   340     0091                     	;# 
   341     0092                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0094                     	;# 
   346     0095                     	;# 
   347     0096                     	;# 
   348     0097                     	;# 
   349     0098                     	;# 
   350     0099                     	;# 
   351     009A                     	;# 
   352     009B                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     0105                     	;# 
   358     0107                     	;# 
   359     0108                     	;# 
   360     0109                     	;# 
   361     010C                     	;# 
   362     010C                     	;# 
   363     010D                     	;# 
   364     010E                     	;# 
   365     010F                     	;# 
   366     0185                     	;# 
   367     0187                     	;# 
   368     0188                     	;# 
   369     0189                     	;# 
   370     018C                     	;# 
   371     018D                     	;# 
   372     0000                     	;# 
   373     0001                     	;# 
   374     0002                     	;# 
   375     0003                     	;# 
   376     0004                     	;# 
   377     0005                     	;# 
   378     0006                     	;# 
   379     0007                     	;# 
   380     0008                     	;# 
   381     0009                     	;# 
   382     000A                     	;# 
   383     000B                     	;# 
   384     000C                     	;# 
   385     000D                     	;# 
   386     000E                     	;# 
   387     000E                     	;# 
   388     000F                     	;# 
   389     0010                     	;# 
   390     0011                     	;# 
   391     0012                     	;# 
   392     0013                     	;# 
   393     0014                     	;# 
   394     0015                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0017                     	;# 
   398     0018                     	;# 
   399     0019                     	;# 
   400     001A                     	;# 
   401     001B                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     001D                     	;# 
   405     001E                     	;# 
   406     001F                     	;# 
   407     0081                     	;# 
   408     0085                     	;# 
   409     0086                     	;# 
   410     0087                     	;# 
   411     0088                     	;# 
   412     0089                     	;# 
   413     008C                     	;# 
   414     008D                     	;# 
   415     008E                     	;# 
   416     008F                     	;# 
   417     0090                     	;# 
   418     0091                     	;# 
   419     0092                     	;# 
   420     0093                     	;# 
   421     0093                     	;# 
   422     0093                     	;# 
   423     0094                     	;# 
   424     0095                     	;# 
   425     0096                     	;# 
   426     0097                     	;# 
   427     0098                     	;# 
   428     0099                     	;# 
   429     009A                     	;# 
   430     009B                     	;# 
   431     009C                     	;# 
   432     009D                     	;# 
   433     009E                     	;# 
   434     009F                     	;# 
   435     0105                     	;# 
   436     0107                     	;# 
   437     0108                     	;# 
   438     0109                     	;# 
   439     010C                     	;# 
   440     010C                     	;# 
   441     010D                     	;# 
   442     010E                     	;# 
   443     010F                     	;# 
   444     0185                     	;# 
   445     0187                     	;# 
   446     0188                     	;# 
   447     0189                     	;# 
   448     018C                     	;# 
   449     018D                     	;# 
   450     0008                     _PORTDbits	set	8
   451     001F                     _ADCON0	set	31
   452     001E                     _ADRESH	set	30
   453     001F                     _ADCON0bits	set	31
   454     0013                     _SSPBUF	set	19
   455     0014                     _SSPCON	set	20
   456     0008                     _PORTD	set	8
   457     0006                     _PORTB	set	6
   458     0007                     _PORTCbits	set	7
   459     0043                     _RD3	set	67
   460     0047                     _RD7	set	71
   461     0046                     _RD6	set	70
   462     0045                     _RD5	set	69
   463     0044                     _RD4	set	68
   464     009F                     _ADCON1bits	set	159
   465     009E                     _ADRESL	set	158
   466     0094                     _SSPSTATbits	set	148
   467     0094                     _SSPSTAT	set	148
   468     008F                     _OSCCONbits	set	143
   469     0088                     _TRISD	set	136
   470     0086                     _TRISB	set	134
   471     043B                     _TRISC3	set	1083
   472     043D                     _TRISC5	set	1085
   473     043A                     _TRISC2	set	1082
   474     0189                     _ANSELH	set	393
   475     0188                     _ANSEL	set	392
   476                           
   477                           	psect	strings
   478     0003                     __pstrings:
   479     0003                     stringtab:
   480     0003                     __stringtab:
   481                           
   482                           ;	String table - string pointers are 1 byte each
   483     0003  1BFF               	btfsc	btemp+1,7
   484     0004  280D               	ljmp	stringcode
   485     0005  1383               	bcf	3,7
   486     0006  187F               	btfsc	btemp+1,0
   487     0007  1783               	bsf	3,7
   488     0008  0800               	movf	0,w
   489     0009  0A84               	incf	4,f
   490     000A  1903               	skipnz
   491     000B  0AFF               	incf	btemp+1,f
   492     000C  0008               	return
   493     000D                     stringcode:
   494     000D                     stringdir:
   495     000D  3000               	movlw	high stringdir
   496     000E  008A               	movwf	10
   497     000F  0804               	movf	4,w
   498     0010  0A84               	incf	4,f
   499     0011  0782               	addwf	2,f
   500     0012                     __stringbase:
   501     0012  3400               	retlw	0
   502     0013                     __end_of__stringtab:
   503     0013                     STR_2:
   504     0013  3441               	retlw	65	;'A'
   505     0014  3444               	retlw	68	;'D'
   506     0015  3443               	retlw	67	;'C'
   507     0016  3400               	retlw	0
   508     0017                     STR_1:
   509     0017  3425               	retlw	37	;'%'
   510     0018  342E               	retlw	46	;'.'
   511     0019  3444               	retlw	68	;'D'
   512     001A  3400               	retlw	0
   513                           
   514                           	psect	cinit
   515     07FA                     start_initialization:	
   516                           ; #config settings
   517                           
   518     07FA                     __initialization:
   519                           
   520                           ; Clear objects allocated to COMMON
   521     07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   522     07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   523     07FC                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526     07FC                     __end_of__initialization:
   527     07FC  0183               	clrf	3
   528     07FD  120A  118A  2F9A   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	bssCOMMON
   531     007C                     __pbssCOMMON:
   532     007C                     _valor:
   533     007C                     	ds	1
   534     007D                     _ADC:
   535     007D                     	ds	1
   536                           
   537                           	psect	cstackCOMMON
   538     0070                     __pcstackCOMMON:
   539     0070                     ?_setup:
   540     0070                     ?_Lcd_Init:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_spiRead:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ??_spiRead:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_Lcd_Clear:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_spiInit:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_spiReceiveWait:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ??_spiReceiveWait:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_Lcd_Port:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ??_Lcd_Port:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_Lcd_Cmd:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_Lcd_Write_Char:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_sprintf:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     spiInit@sDataSample:	
   580                           ; 2 bytes @ 0x0
   581                           
   582     0070                     Lcd_Port@a:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     sprintf@sp:	
   586                           ; 1 bytes @ 0x0
   587                           
   588                           
   589                           ; 2 bytes @ 0x0
   590     0070                     	ds	1
   591     0071                     ??_Lcd_Cmd:
   592     0071                     ??_Lcd_Write_Char:	
   593                           ; 1 bytes @ 0x1
   594                           
   595     0071                     spiInit@sClockIdle:	
   596                           ; 1 bytes @ 0x1
   597                           
   598                           
   599                           ; 1 bytes @ 0x1
   600     0071                     	ds	1
   601     0072                     spiInit@sTransmitEdge:
   602     0072                     Lcd_Write_Char@temp:	
   603                           ; 1 bytes @ 0x2
   604                           
   605     0072                     sprintf@f:	
   606                           ; 1 bytes @ 0x2
   607                           
   608                           
   609                           ; 1 bytes @ 0x2
   610     0072                     	ds	1
   611     0073                     ??_spiInit:
   612     0073                     spiInit@sType:	
   613                           ; 1 bytes @ 0x3
   614                           
   615     0073                     Lcd_Cmd@a:	
   616                           ; 1 bytes @ 0x3
   617                           
   618     0073                     Lcd_Write_Char@y:	
   619                           ; 1 bytes @ 0x3
   620                           
   621                           
   622                           ; 1 bytes @ 0x3
   623     0073                     	ds	1
   624     0074                     ??_setup:
   625     0074                     ??_Lcd_Init:	
   626                           ; 1 bytes @ 0x4
   627                           
   628     0074                     ??_Lcd_Clear:	
   629                           ; 1 bytes @ 0x4
   630                           
   631     0074                     ?_Lcd_Set_Cursor:	
   632                           ; 1 bytes @ 0x4
   633                           
   634     0074                     Lcd_Set_Cursor@b:	
   635                           ; 1 bytes @ 0x4
   636                           
   637     0074                     Lcd_Write_Char@a:	
   638                           ; 1 bytes @ 0x4
   639                           
   640                           
   641                           ; 1 bytes @ 0x4
   642     0074                     	ds	1
   643     0075                     ??_sprintf:
   644     0075                     ??_Lcd_Set_Cursor:	
   645                           ; 1 bytes @ 0x5
   646                           
   647     0075                     ?_Lcd_Write_String:	
   648                           ; 1 bytes @ 0x5
   649                           
   650     0075                     sprintf@ap:	
   651                           ; 1 bytes @ 0x5
   652                           
   653     0075                     Lcd_Write_String@a:	
   654                           ; 1 bytes @ 0x5
   655                           
   656                           
   657                           ; 2 bytes @ 0x5
   658     0075                     	ds	1
   659     0076                     Lcd_Set_Cursor@a:
   660     0076                     sprintf@c:	
   661                           ; 1 bytes @ 0x6
   662                           
   663                           
   664                           ; 1 bytes @ 0x6
   665     0076                     	ds	1
   666     0077                     ??_Lcd_Write_String:
   667     0077                     Lcd_Set_Cursor@z:	
   668                           ; 1 bytes @ 0x7
   669                           
   670     0077                     Lcd_Write_String@i:	
   671                           ; 1 bytes @ 0x7
   672                           
   673                           
   674                           ; 2 bytes @ 0x7
   675     0077                     	ds	1
   676     0078                     Lcd_Set_Cursor@y:
   677                           
   678                           ; 1 bytes @ 0x8
   679     0078                     	ds	1
   680     0079                     Lcd_Set_Cursor@temp:
   681                           
   682                           ; 1 bytes @ 0x9
   683     0079                     	ds	1
   684     007A                     ??_main:
   685                           
   686                           ; 1 bytes @ 0xA
   687     007A                     	ds	2
   688                           
   689                           	psect	maintext
   690     079A                     __pmaintext:	
   691 ;;
   692 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   693 ;;
   694 ;; *************** function _main *****************
   695 ;; Defined at:
   696 ;;		line 61 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : B00/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          2       0       0       0       0
   713 ;;      Totals:         2       0       0       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels required when called: 3
   716 ;; This function calls:
   717 ;;		_Lcd_Clear
   718 ;;		_Lcd_Init
   719 ;;		_Lcd_Set_Cursor
   720 ;;		_Lcd_Write_String
   721 ;;		_setup
   722 ;;		_spiRead
   723 ;;		_sprintf
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729     079A                     _main:	
   730                           ;psect for function _main
   731                           
   732     079A                     l1005:	
   733                           ;incstack = 0
   734                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   735                           
   736                           
   737                           ;main.c: 62:     setup();
   738     079A  120A  118A  262C  120A  118A  	fcall	_setup
   739                           
   740                           ;main.c: 63:     Lcd_Init();
   741     079F  120A  118A  273D  120A  118A  	fcall	_Lcd_Init
   742     07A4                     l1007:
   743                           
   744                           ;main.c: 68:         PORTCbits.RC2 = 0;
   745     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   746     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   747     07A6  1107               	bcf	7,2	;volatile
   748     07A7                     l1009:
   749                           
   750                           ;main.c: 69:         _delay((unsigned long)((1)*(4000000/4000.0)));
   751     07A7  30C7               	movlw	199
   752     07A8  00FA               	movwf	??_main
   753     07A9                     u227:
   754     07A9  2FAA               	nop2
   755     07AA  0BFA               	decfsz	??_main,f
   756     07AB  2FA9               	goto	u227
   757     07AC  2FAD               	nop2
   758     07AD  2FAE               	nop2
   759     07AE                     l1011:
   760                           
   761                           ;main.c: 72:         ADC = spiRead();
   762     07AE  120A  118A  25E6  120A  118A  	fcall	_spiRead
   763     07B3  00FD               	movwf	_ADC
   764                           
   765                           ;main.c: 74:         _delay((unsigned long)((1)*(4000000/4000.0)));
   766     07B4  30C7               	movlw	199
   767     07B5  00FA               	movwf	??_main
   768     07B6                     u237:
   769     07B6  2FB7               	nop2
   770     07B7  0BFA               	decfsz	??_main,f
   771     07B8  2FB6               	goto	u237
   772     07B9  2FBA               	nop2
   773     07BA  2FBB               	nop2
   774     07BB                     l1013:
   775                           
   776                           ;main.c: 75:         PORTCbits.RC2 = 1;
   777     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   778     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   779     07BD  1507               	bsf	7,2	;volatile
   780     07BE                     l1015:
   781                           
   782                           ;main.c: 77:         sprintf(ADC, "%.D", valor);
   783     07BE  087D               	movf	_ADC,w
   784     07BF  00FA               	movwf	??_main
   785     07C0  01FB               	clrf	??_main+1
   786     07C1  087A               	movf	??_main,w
   787     07C2  00F0               	movwf	sprintf@sp
   788     07C3  087B               	movf	??_main+1,w
   789     07C4  00F1               	movwf	sprintf@sp+1
   790     07C5  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   791     07C6  00F2               	movwf	sprintf@f
   792     07C7  3000               	movlw	0
   793     07C8  00F3               	movwf	?_sprintf+3
   794     07C9  00F4               	movwf	?_sprintf+4
   795     07CA  120A  118A  266D  120A  118A  	fcall	_sprintf
   796     07CF                     l1017:
   797                           
   798                           ;main.c: 78:         Lcd_Clear();
   799     07CF  120A  118A  25EF  120A  118A  	fcall	_Lcd_Clear
   800     07D4                     l1019:
   801                           
   802                           ;main.c: 79:         Lcd_Set_Cursor(1,1);
   803     07D4  01F4               	clrf	Lcd_Set_Cursor@b
   804     07D5  0AF4               	incf	Lcd_Set_Cursor@b,f
   805     07D6  3001               	movlw	1
   806     07D7  120A  118A  26F7  120A  118A  	fcall	_Lcd_Set_Cursor
   807     07DC                     l1021:
   808                           
   809                           ;main.c: 80:         Lcd_Write_String("ADC");
   810     07DC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   811     07DD  00F5               	movwf	Lcd_Write_String@a
   812     07DE  3080               	movlw	128
   813     07DF  00F6               	movwf	Lcd_Write_String@a+1
   814     07E0  120A  118A  2694  120A  118A  	fcall	_Lcd_Write_String
   815     07E5                     l1023:
   816                           
   817                           ;main.c: 81:         Lcd_Set_Cursor(2,1);
   818     07E5  01F4               	clrf	Lcd_Set_Cursor@b
   819     07E6  0AF4               	incf	Lcd_Set_Cursor@b,f
   820     07E7  3002               	movlw	2
   821     07E8  120A  118A  26F7  120A  118A  	fcall	_Lcd_Set_Cursor
   822     07ED                     l1025:
   823                           
   824                           ;main.c: 82:         Lcd_Write_String(valor);
   825     07ED  3000               	movlw	0
   826     07EE  00F5               	movwf	Lcd_Write_String@a
   827     07EF  3000               	movlw	0
   828     07F0  00F6               	movwf	Lcd_Write_String@a+1
   829     07F1  120A  118A  2694  120A  118A  	fcall	_Lcd_Write_String
   830     07F6  2FA4               	goto	l1007
   831     07F7  120A  118A  2800   	ljmp	start
   832     07FA                     __end_of_main:
   833                           
   834                           	psect	text1
   835     066D                     __ptext1:	
   836 ;; *************** function _sprintf *****************
   837 ;; Defined at:
   838 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  sp              2    0[COMMON] PTR unsigned char 
   841 ;;		 -> RAM(512), 
   842 ;;  f               1    2[COMMON] PTR const unsigned char 
   843 ;;		 -> STR_1(4), 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  tmpval          4    0        struct .
   846 ;;  cp              2    0        PTR const unsigned char 
   847 ;;  len             2    0        unsigned int 
   848 ;;  val             2    0        unsigned int 
   849 ;;  c               1    6[COMMON] unsigned char 
   850 ;;  ap              1    5[COMMON] PTR void [1]
   851 ;;		 -> ?_sprintf(2), 
   852 ;;  flag            1    0        unsigned char 
   853 ;;  prec            1    0        char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  2    0[COMMON] int 
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         5       0       0       0       0
   864 ;;      Locals:         2       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         7       0       0       0       0
   867 ;;Total ram usage:        7 bytes
   868 ;; Hardware stack levels used: 2
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876     066D                     _sprintf:	
   877                           ;psect for function _sprintf
   878                           
   879     066D                     l965:	
   880                           ;incstack = 0
   881                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath]
   882                           
   883                           
   884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   885     066D  3073               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
   886     066E  00F5               	movwf	sprintf@ap
   887                           
   888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   889     066F  2E7D               	goto	l971
   890     0670                     l967:
   891                           
   892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   893     0670  0870               	movf	sprintf@sp,w
   894     0671  0084               	movwf	4
   895     0672  1783               	bsf	3,7
   896     0673  1C71               	btfss	sprintf@sp+1,0
   897     0674  1383               	bcf	3,7
   898     0675  0876               	movf	sprintf@c,w
   899     0676  0080               	movwf	0
   900     0677                     l969:
   901     0677  3001               	movlw	1
   902     0678  07F0               	addwf	sprintf@sp,f
   903     0679  1803               	skipnc
   904     067A  0AF1               	incf	sprintf@sp+1,f
   905     067B  3000               	movlw	0
   906     067C  07F1               	addwf	sprintf@sp+1,f
   907     067D                     l971:	
   908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   909                           
   910                           
   911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   912     067D  3001               	movlw	1
   913     067E  07F2               	addwf	sprintf@f,f
   914     067F  30FF               	movlw	-1
   915     0680  0772               	addwf	sprintf@f,w
   916     0681  0084               	movwf	4
   917     0682  120A  118A  200D  120A  118A  	fcall	stringdir
   918     0687  00F6               	movwf	sprintf@c
   919     0688  0876               	movf	sprintf@c,w
   920     0689  1D03               	btfss	3,2
   921     068A  2E8C               	goto	u161
   922     068B  2E8D               	goto	u160
   923     068C                     u161:
   924     068C  2E70               	goto	l967
   925     068D                     u160:
   926     068D                     l973:
   927                           
   928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
   929     068D  0870               	movf	sprintf@sp,w
   930     068E  0084               	movwf	4
   931     068F  1783               	bsf	3,7
   932     0690  1C71               	btfss	sprintf@sp+1,0
   933     0691  1383               	bcf	3,7
   934     0692  0180               	clrf	0
   935     0693                     l253:
   936     0693  0008               	return
   937     0694                     __end_of_sprintf:
   938                           
   939                           	psect	text2
   940     05E6                     __ptext2:	
   941 ;; *************** function _spiRead *****************
   942 ;; Defined at:
   943 ;;		line 47 in file "SPI.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      unsigned char 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, pclath, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 1
   964 ;; This function calls:
   965 ;;		_spiReceiveWait
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971     05E6                     _spiRead:	
   972                           ;psect for function _spiRead
   973                           
   974     05E6                     l837:	
   975                           ;incstack = 0
   976                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   977                           
   978                           
   979                           ;SPI.c: 49:     spiReceiveWait();
   980     05E6  120A  118A  25DF  120A  118A  	fcall	_spiReceiveWait
   981     05EB                     l839:
   982                           
   983                           ;SPI.c: 50:     return(SSPBUF);
   984     05EB  1283               	bcf	3,5	;RP0=0, select bank0
   985     05EC  1303               	bcf	3,6	;RP1=0, select bank0
   986     05ED  0813               	movf	19,w	;volatile
   987     05EE                     l85:
   988     05EE  0008               	return
   989     05EF                     __end_of_spiRead:
   990                           
   991                           	psect	text3
   992     05DF                     __ptext3:	
   993 ;; *************** function _spiReceiveWait *****************
   994 ;; Defined at:
   995 ;;		line 29 in file "SPI.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		None
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_spiRead
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022     05DF                     _spiReceiveWait:	
  1023                           ;psect for function _spiReceiveWait
  1024                           
  1025     05DF                     l783:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _spiReceiveWait: []
  1028                           
  1029     05DF                     l71:	
  1030                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1031                           
  1032     05DF  1683               	bsf	3,5	;RP0=1, select bank1
  1033     05E0  1303               	bcf	3,6	;RP1=0, select bank1
  1034     05E1  1C14               	btfss	20,0	;volatile
  1035     05E2  2DE4               	goto	u61
  1036     05E3  2DE5               	goto	u60
  1037     05E4                     u61:
  1038     05E4  2DDF               	goto	l71
  1039     05E5                     u60:
  1040     05E5                     l74:
  1041     05E5  0008               	return
  1042     05E6                     __end_of_spiReceiveWait:
  1043                           
  1044                           	psect	text4
  1045     062C                     __ptext4:	
  1046 ;; *************** function _setup *****************
  1047 ;; Defined at:
  1048 ;;		line 89 in file "main.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 1
  1069 ;; This function calls:
  1070 ;;		_spiInit
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076     062C                     _setup:	
  1077                           ;psect for function _setup
  1078                           
  1079     062C                     l953:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1082                           
  1083                           
  1084                           ;main.c: 90:     ANSEL = 0;
  1085     062C  1683               	bsf	3,5	;RP0=1, select bank3
  1086     062D  1703               	bsf	3,6	;RP1=1, select bank3
  1087     062E  0188               	clrf	8	;volatile
  1088                           
  1089                           ;main.c: 91:     ANSELH = 0;
  1090     062F  0189               	clrf	9	;volatile
  1091     0630                     l955:
  1092                           
  1093                           ;main.c: 92:     TRISC2 = 0;
  1094     0630  1683               	bsf	3,5	;RP0=1, select bank1
  1095     0631  1303               	bcf	3,6	;RP1=0, select bank1
  1096     0632  1107               	bcf	7,2	;volatile
  1097                           
  1098                           ;main.c: 93:     TRISB = 0;
  1099     0633  0186               	clrf	6	;volatile
  1100                           
  1101                           ;main.c: 94:     TRISD = 0;
  1102     0634  0188               	clrf	8	;volatile
  1103                           
  1104                           ;main.c: 95:     PORTB = 0;
  1105     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1106     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1107     0637  0186               	clrf	6	;volatile
  1108                           
  1109                           ;main.c: 96:     PORTD = 0;
  1110     0638  0188               	clrf	8	;volatile
  1111     0639                     l957:
  1112                           
  1113                           ;main.c: 97:     PORTCbits.RC2 = 1;
  1114     0639  1507               	bsf	7,2	;volatile
  1115     063A                     l959:
  1116                           
  1117                           ;main.c: 98:     OSCCONbits.IRCF = 0b110;
  1118     063A  1683               	bsf	3,5	;RP0=1, select bank1
  1119     063B  1303               	bcf	3,6	;RP1=0, select bank1
  1120     063C  080F               	movf	15,w	;volatile
  1121     063D  398F               	andlw	-113
  1122     063E  3860               	iorlw	96
  1123     063F  008F               	movwf	15	;volatile
  1124     0640                     l961:
  1125                           
  1126                           ;main.c: 99:     OSCCONbits.SCS = 1;
  1127     0640  140F               	bsf	15,0	;volatile
  1128     0641                     l963:
  1129                           
  1130                           ;main.c: 100:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1131     0641  01F0               	clrf	spiInit@sDataSample
  1132     0642  01F1               	clrf	spiInit@sClockIdle
  1133     0643  01F2               	clrf	spiInit@sTransmitEdge
  1134     0644  3020               	movlw	32
  1135     0645  120A  118A  25FC  120A  118A  	fcall	_spiInit
  1136     064A                     l51:
  1137     064A  0008               	return
  1138     064B                     __end_of_setup:
  1139                           
  1140                           	psect	text5
  1141     05FC                     __ptext5:	
  1142 ;; *************** function _spiInit *****************
  1143 ;; Defined at:
  1144 ;;		line 12 in file "SPI.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  sType           1    wreg     enum E1292
  1147 ;;  sDataSample     1    0[COMMON] enum E1300
  1148 ;;  sClockIdle      1    1[COMMON] enum E1304
  1149 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  sType           1    3[COMMON] enum E1292
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         3       0       0       0       0
  1162 ;;      Locals:         1       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0
  1164 ;;      Totals:         4       0       0       0       0
  1165 ;;Total ram usage:        4 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_setup
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174     05FC                     _spiInit:	
  1175                           ;psect for function _spiInit
  1176                           
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1180                           ;spiInit@sType stored from wreg
  1181     05FC  00F3               	movwf	spiInit@sType
  1182     05FD                     l943:
  1183                           
  1184                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1185     05FD  1683               	bsf	3,5	;RP0=1, select bank1
  1186     05FE  1303               	bcf	3,6	;RP1=0, select bank1
  1187     05FF  1287               	bcf	7,5	;volatile
  1188                           
  1189                           ;SPI.c: 15:     if(sType & 0b00000100)
  1190     0600  1D73               	btfss	spiInit@sType,2
  1191     0601  2E03               	goto	u151
  1192     0602  2E04               	goto	u150
  1193     0603                     u151:
  1194     0603  2E08               	goto	l949
  1195     0604                     u150:
  1196     0604                     l945:
  1197                           
  1198                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1199     0604  0872               	movf	spiInit@sTransmitEdge,w
  1200     0605  0094               	movwf	20	;volatile
  1201     0606                     l947:
  1202                           
  1203                           ;SPI.c: 18:         TRISC3 = 1;
  1204     0606  1587               	bsf	7,3	;volatile
  1205                           
  1206                           ;SPI.c: 19:     }
  1207     0607  2E0C               	goto	l67
  1208     0608                     l949:
  1209                           
  1210                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1211     0608  0870               	movf	spiInit@sDataSample,w
  1212     0609  0472               	iorwf	spiInit@sTransmitEdge,w
  1213     060A  0094               	movwf	20	;volatile
  1214     060B                     l951:
  1215                           
  1216                           ;SPI.c: 23:         TRISC3 = 0;
  1217     060B  1187               	bcf	7,3	;volatile
  1218     060C                     l67:	
  1219                           ;SPI.c: 24:     }
  1220                           
  1221                           
  1222                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1223     060C  0873               	movf	spiInit@sType,w
  1224     060D  0471               	iorwf	spiInit@sClockIdle,w
  1225     060E  1283               	bcf	3,5	;RP0=0, select bank0
  1226     060F  1303               	bcf	3,6	;RP1=0, select bank0
  1227     0610  0094               	movwf	20	;volatile
  1228     0611                     l68:
  1229     0611  0008               	return
  1230     0612                     __end_of_spiInit:
  1231                           
  1232                           	psect	text6
  1233     0694                     __ptext6:	
  1234 ;; *************** function _Lcd_Write_String *****************
  1235 ;; Defined at:
  1236 ;;		line 88 in file "LCD.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  a               2    5[COMMON] PTR unsigned char 
  1239 ;;		 -> NULL(0), STR_2(4), RAM(512), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  i               2    7[COMMON] int 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         2       0       0       0       0
  1252 ;;      Locals:         2       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0
  1254 ;;      Totals:         4       0       0       0       0
  1255 ;;Total ram usage:        4 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 2
  1258 ;; This function calls:
  1259 ;;		_Lcd_Write_Char
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265     0694                     _Lcd_Write_String:	
  1266                           ;psect for function _Lcd_Write_String
  1267                           
  1268     0694                     l997:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1271                           
  1272                           
  1273                           ;LCD.c: 89:     int i;;LCD.c: 90:     for (i = 0; a[i] != '\0'; i++)
  1274     0694  01F7               	clrf	Lcd_Write_String@i
  1275     0695  01F8               	clrf	Lcd_Write_String@i+1
  1276     0696  2EAF               	goto	l1003
  1277     0697                     l999:
  1278                           
  1279                           ;LCD.c: 91:         Lcd_Write_Char(a[i]);
  1280     0697  0877               	movf	Lcd_Write_String@i,w
  1281     0698  0775               	addwf	Lcd_Write_String@a,w
  1282     0699  0084               	movwf	4
  1283     069A  0878               	movf	Lcd_Write_String@i+1,w
  1284     069B  1803               	skipnc
  1285     069C  0A78               	incf	Lcd_Write_String@i+1,w
  1286     069D  0776               	addwf	Lcd_Write_String@a+1,w
  1287     069E  00FF               	movwf	btemp+1
  1288     069F  120A  118A  2003  120A  118A  	fcall	stringtab
  1289     06A4  120A  118A  26C4  120A  118A  	fcall	_Lcd_Write_Char
  1290     06A9                     l1001:
  1291     06A9  3001               	movlw	1
  1292     06AA  07F7               	addwf	Lcd_Write_String@i,f
  1293     06AB  1803               	skipnc
  1294     06AC  0AF8               	incf	Lcd_Write_String@i+1,f
  1295     06AD  3000               	movlw	0
  1296     06AE  07F8               	addwf	Lcd_Write_String@i+1,f
  1297     06AF                     l1003:
  1298     06AF  0877               	movf	Lcd_Write_String@i,w
  1299     06B0  0775               	addwf	Lcd_Write_String@a,w
  1300     06B1  0084               	movwf	4
  1301     06B2  0878               	movf	Lcd_Write_String@i+1,w
  1302     06B3  1803               	skipnc
  1303     06B4  0A78               	incf	Lcd_Write_String@i+1,w
  1304     06B5  0776               	addwf	Lcd_Write_String@a+1,w
  1305     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1306     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1307     06B8  00FF               	movwf	btemp+1
  1308     06B9  120A  118A  2003  120A  118A  	fcall	stringtab
  1309     06BE  3A00               	xorlw	0
  1310     06BF  1D03               	skipz
  1311     06C0  2EC2               	goto	u211
  1312     06C1  2EC3               	goto	u210
  1313     06C2                     u211:
  1314     06C2  2E97               	goto	l999
  1315     06C3                     u210:
  1316     06C3                     l157:
  1317     06C3  0008               	return
  1318     06C4                     __end_of_Lcd_Write_String:
  1319                           
  1320                           	psect	text7
  1321     06C4                     __ptext7:	
  1322 ;; *************** function _Lcd_Write_Char *****************
  1323 ;; Defined at:
  1324 ;;		line 73 in file "LCD.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  a               1    wreg     unsigned char 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  a               1    4[COMMON] unsigned char 
  1329 ;;  y               1    3[COMMON] unsigned char 
  1330 ;;  temp            1    2[COMMON] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         3       0       0       0       0
  1342 ;;      Temps:          1       0       0       0       0
  1343 ;;      Totals:         4       0       0       0       0
  1344 ;;Total ram usage:        4 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 1
  1347 ;; This function calls:
  1348 ;;		_Lcd_Port
  1349 ;; This function is called by:
  1350 ;;		_Lcd_Write_String
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354     06C4                     _Lcd_Write_Char:	
  1355                           ;psect for function _Lcd_Write_Char
  1356                           
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1360                           ;Lcd_Write_Char@a stored from wreg
  1361     06C4  00F4               	movwf	Lcd_Write_Char@a
  1362     06C5                     l795:
  1363                           
  1364                           ;LCD.c: 74:     char temp, y;;LCD.c: 75:     temp = a & 0x0F;
  1365     06C5  0874               	movf	Lcd_Write_Char@a,w
  1366     06C6  390F               	andlw	15
  1367     06C7  00F2               	movwf	Lcd_Write_Char@temp
  1368                           
  1369                           ;LCD.c: 76:     y = a & 0xF0;
  1370     06C8  0874               	movf	Lcd_Write_Char@a,w
  1371     06C9  39F0               	andlw	240
  1372     06CA  00F3               	movwf	Lcd_Write_Char@y
  1373     06CB                     l797:
  1374                           
  1375                           ;LCD.c: 77:     PORTDbits.RD2 = 1;
  1376     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1377     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1378     06CD  1508               	bsf	8,2	;volatile
  1379     06CE                     l799:
  1380                           
  1381                           ;LCD.c: 78:     Lcd_Port(y >> 4);
  1382     06CE  0873               	movf	Lcd_Write_Char@y,w
  1383     06CF  00F1               	movwf	??_Lcd_Write_Char
  1384     06D0  3004               	movlw	4
  1385     06D1                     u75:
  1386     06D1  1003               	clrc
  1387     06D2  0CF1               	rrf	??_Lcd_Write_Char,f
  1388     06D3  3EFF               	addlw	-1
  1389     06D4  1D03               	skipz
  1390     06D5  2ED1               	goto	u75
  1391     06D6  0871               	movf	??_Lcd_Write_Char,w
  1392     06D7  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  1393     06DC                     l801:
  1394                           
  1395                           ;LCD.c: 79:     RD3 = 1;
  1396     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1397     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1398     06DE  1588               	bsf	8,3	;volatile
  1399     06DF                     l803:
  1400                           
  1401                           ;LCD.c: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1402     06DF  300D               	movlw	13
  1403     06E0  00F1               	movwf	??_Lcd_Write_Char
  1404     06E1                     u247:
  1405     06E1  0BF1               	decfsz	??_Lcd_Write_Char,f
  1406     06E2  2EE1               	goto	u247
  1407     06E3                     l805:
  1408                           
  1409                           ;LCD.c: 81:     RD3 = 0;
  1410     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1411     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1412     06E5  1188               	bcf	8,3	;volatile
  1413     06E6                     l807:
  1414                           
  1415                           ;LCD.c: 82:     Lcd_Port(temp);
  1416     06E6  0872               	movf	Lcd_Write_Char@temp,w
  1417     06E7  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  1418     06EC                     l809:
  1419                           
  1420                           ;LCD.c: 83:     RD3 = 1;
  1421     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1422     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1423     06EE  1588               	bsf	8,3	;volatile
  1424     06EF                     l811:
  1425                           
  1426                           ;LCD.c: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1427     06EF  300D               	movlw	13
  1428     06F0  00F1               	movwf	??_Lcd_Write_Char
  1429     06F1                     u257:
  1430     06F1  0BF1               	decfsz	??_Lcd_Write_Char,f
  1431     06F2  2EF1               	goto	u257
  1432     06F3                     l813:
  1433                           
  1434                           ;LCD.c: 85:     RD3 = 0;
  1435     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1436     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1437     06F5  1188               	bcf	8,3	;volatile
  1438     06F6                     l151:
  1439     06F6  0008               	return
  1440     06F7                     __end_of_Lcd_Write_Char:
  1441                           
  1442                           	psect	text8
  1443     06F7                     __ptext8:	
  1444 ;; *************** function _Lcd_Set_Cursor *****************
  1445 ;; Defined at:
  1446 ;;		line 38 in file "LCD.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  a               1    wreg     unsigned char 
  1449 ;;  b               1    4[COMMON] unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  a               1    6[COMMON] unsigned char 
  1452 ;;  temp            1    9[COMMON] unsigned char 
  1453 ;;  y               1    8[COMMON] unsigned char 
  1454 ;;  z               1    7[COMMON] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, pclath, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         1       0       0       0       0
  1465 ;;      Locals:         4       0       0       0       0
  1466 ;;      Temps:          1       0       0       0       0
  1467 ;;      Totals:         6       0       0       0       0
  1468 ;;Total ram usage:        6 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 2
  1471 ;; This function calls:
  1472 ;;		_Lcd_Cmd
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478     06F7                     _Lcd_Set_Cursor:	
  1479                           ;psect for function _Lcd_Set_Cursor
  1480                           
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1484                           ;Lcd_Set_Cursor@a stored from wreg
  1485     06F7  00F6               	movwf	Lcd_Set_Cursor@a
  1486     06F8                     l977:
  1487                           
  1488                           ;LCD.c: 39:     char temp, z, y;;LCD.c: 40:     if (a == 1) {
  1489     06F8  0376               	decf	Lcd_Set_Cursor@a,w
  1490     06F9  1D03               	btfss	3,2
  1491     06FA  2EFC               	goto	u171
  1492     06FB  2EFD               	goto	u170
  1493     06FC                     u171:
  1494     06FC  2F1A               	goto	l987
  1495     06FD                     u170:
  1496     06FD                     l979:
  1497                           
  1498                           ;LCD.c: 41:         temp = 0x80 + b - 1;
  1499     06FD  0874               	movf	Lcd_Set_Cursor@b,w
  1500     06FE  3E7F               	addlw	127
  1501     06FF  00F9               	movwf	Lcd_Set_Cursor@temp
  1502                           
  1503                           ;LCD.c: 42:         z = temp >> 4;
  1504     0700  0879               	movf	Lcd_Set_Cursor@temp,w
  1505     0701  00F5               	movwf	??_Lcd_Set_Cursor
  1506     0702  3004               	movlw	4
  1507     0703                     u185:
  1508     0703  1003               	clrc
  1509     0704  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1510     0705  3EFF               	addlw	-1
  1511     0706  1D03               	skipz
  1512     0707  2F03               	goto	u185
  1513     0708  0875               	movf	??_Lcd_Set_Cursor,w
  1514     0709  00F7               	movwf	Lcd_Set_Cursor@z
  1515     070A                     l981:
  1516                           
  1517                           ;LCD.c: 43:         y = temp & 0x0F;
  1518     070A  0879               	movf	Lcd_Set_Cursor@temp,w
  1519     070B  390F               	andlw	15
  1520     070C  00F8               	movwf	Lcd_Set_Cursor@y
  1521     070D                     l983:
  1522                           
  1523                           ;LCD.c: 44:         Lcd_Cmd(z);
  1524     070D  0877               	movf	Lcd_Set_Cursor@z,w
  1525     070E  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1526     0713                     l985:
  1527                           
  1528                           ;LCD.c: 45:         Lcd_Cmd(y);
  1529     0713  0878               	movf	Lcd_Set_Cursor@y,w
  1530     0714  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1531                           
  1532                           ;LCD.c: 46:     } else if (a == 2) {
  1533     0719  2F3C               	goto	l145
  1534     071A                     l987:
  1535     071A  3002               	movlw	2
  1536     071B  0676               	xorwf	Lcd_Set_Cursor@a,w
  1537     071C  1D03               	btfss	3,2
  1538     071D  2F1F               	goto	u191
  1539     071E  2F20               	goto	u190
  1540     071F                     u191:
  1541     071F  2F3C               	goto	l145
  1542     0720                     u190:
  1543     0720                     l989:
  1544                           
  1545                           ;LCD.c: 47:         temp = 0xC0 + b - 1;
  1546     0720  0874               	movf	Lcd_Set_Cursor@b,w
  1547     0721  3EBF               	addlw	191
  1548     0722  00F9               	movwf	Lcd_Set_Cursor@temp
  1549                           
  1550                           ;LCD.c: 48:         z = temp >> 4;
  1551     0723  0879               	movf	Lcd_Set_Cursor@temp,w
  1552     0724  00F5               	movwf	??_Lcd_Set_Cursor
  1553     0725  3004               	movlw	4
  1554     0726                     u205:
  1555     0726  1003               	clrc
  1556     0727  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1557     0728  3EFF               	addlw	-1
  1558     0729  1D03               	skipz
  1559     072A  2F26               	goto	u205
  1560     072B  0875               	movf	??_Lcd_Set_Cursor,w
  1561     072C  00F7               	movwf	Lcd_Set_Cursor@z
  1562     072D                     l991:
  1563                           
  1564                           ;LCD.c: 49:         y = temp & 0x0F;
  1565     072D  0879               	movf	Lcd_Set_Cursor@temp,w
  1566     072E  390F               	andlw	15
  1567     072F  00F8               	movwf	Lcd_Set_Cursor@y
  1568     0730                     l993:
  1569                           
  1570                           ;LCD.c: 50:         Lcd_Cmd(z);
  1571     0730  0877               	movf	Lcd_Set_Cursor@z,w
  1572     0731  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1573     0736                     l995:
  1574                           
  1575                           ;LCD.c: 51:         Lcd_Cmd(y);
  1576     0736  0878               	movf	Lcd_Set_Cursor@y,w
  1577     0737  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1578     073C                     l145:
  1579     073C  0008               	return
  1580     073D                     __end_of_Lcd_Set_Cursor:
  1581                           
  1582                           	psect	text9
  1583     073D                     __ptext9:	
  1584 ;; *************** function _Lcd_Init *****************
  1585 ;; Defined at:
  1586 ;;		line 55 in file "LCD.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0
  1603 ;;      Totals:         2       0       0       0       0
  1604 ;;Total ram usage:        2 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 2
  1607 ;; This function calls:
  1608 ;;		_Lcd_Cmd
  1609 ;;		_Lcd_Port
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615     073D                     _Lcd_Init:	
  1616                           ;psect for function _Lcd_Init
  1617                           
  1618     073D                     l827:	
  1619                           ;incstack = 0
  1620                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1621                           
  1622                           
  1623                           ;LCD.c: 56:     Lcd_Port(0x00);
  1624     073D  3000               	movlw	0
  1625     073E  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  1626     0743                     l829:
  1627                           
  1628                           ;LCD.c: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1629     0743  301A               	movlw	26
  1630     0744  00F5               	movwf	??_Lcd_Init+1
  1631     0745  30F8               	movlw	248
  1632     0746  00F4               	movwf	??_Lcd_Init
  1633     0747                     u267:
  1634     0747  0BF4               	decfsz	??_Lcd_Init,f
  1635     0748  2F47               	goto	u267
  1636     0749  0BF5               	decfsz	??_Lcd_Init+1,f
  1637     074A  2F47               	goto	u267
  1638     074B  0000               	nop
  1639     074C                     l831:
  1640                           
  1641                           ;LCD.c: 58:     Lcd_Cmd(0x03);
  1642     074C  3003               	movlw	3
  1643     074D  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1644                           
  1645                           ;LCD.c: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1646     0752  3007               	movlw	7
  1647     0753  00F5               	movwf	??_Lcd_Init+1
  1648     0754  307D               	movlw	125
  1649     0755  00F4               	movwf	??_Lcd_Init
  1650     0756                     u277:
  1651     0756  0BF4               	decfsz	??_Lcd_Init,f
  1652     0757  2F56               	goto	u277
  1653     0758  0BF5               	decfsz	??_Lcd_Init+1,f
  1654     0759  2F56               	goto	u277
  1655     075A                     l833:
  1656                           
  1657                           ;LCD.c: 60:     Lcd_Cmd(0x03);
  1658     075A  3003               	movlw	3
  1659     075B  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1660     0760                     l835:
  1661                           
  1662                           ;LCD.c: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1663     0760  300F               	movlw	15
  1664     0761  00F5               	movwf	??_Lcd_Init+1
  1665     0762  3047               	movlw	71
  1666     0763  00F4               	movwf	??_Lcd_Init
  1667     0764                     u287:
  1668     0764  0BF4               	decfsz	??_Lcd_Init,f
  1669     0765  2F64               	goto	u287
  1670     0766  0BF5               	decfsz	??_Lcd_Init+1,f
  1671     0767  2F64               	goto	u287
  1672     0768  2F69               	nop2
  1673                           
  1674                           ;LCD.c: 62:     Lcd_Cmd(0x03);
  1675     0769  3003               	movlw	3
  1676     076A  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1677                           
  1678                           ;LCD.c: 64:     Lcd_Cmd(0x02);
  1679     076F  3002               	movlw	2
  1680     0770  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1681                           
  1682                           ;LCD.c: 65:     Lcd_Cmd(0x02);
  1683     0775  3002               	movlw	2
  1684     0776  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1685                           
  1686                           ;LCD.c: 66:     Lcd_Cmd(0x08);
  1687     077B  3008               	movlw	8
  1688     077C  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1689                           
  1690                           ;LCD.c: 67:     Lcd_Cmd(0x00);
  1691     0781  3000               	movlw	0
  1692     0782  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1693                           
  1694                           ;LCD.c: 68:     Lcd_Cmd(0x0C);
  1695     0787  300C               	movlw	12
  1696     0788  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1697                           
  1698                           ;LCD.c: 69:     Lcd_Cmd(0x00);
  1699     078D  3000               	movlw	0
  1700     078E  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1701                           
  1702                           ;LCD.c: 70:     Lcd_Cmd(0x06);
  1703     0793  3006               	movlw	6
  1704     0794  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1705     0799                     l148:
  1706     0799  0008               	return
  1707     079A                     __end_of_Lcd_Init:
  1708                           
  1709                           	psect	text10
  1710     05EF                     __ptext10:	
  1711 ;; *************** function _Lcd_Clear *****************
  1712 ;; Defined at:
  1713 ;;		line 33 in file "LCD.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 2
  1734 ;; This function calls:
  1735 ;;		_Lcd_Cmd
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741     05EF                     _Lcd_Clear:	
  1742                           ;psect for function _Lcd_Clear
  1743                           
  1744     05EF                     l855:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1747                           
  1748                           
  1749                           ;LCD.c: 34:     Lcd_Cmd(0);
  1750     05EF  3000               	movlw	0
  1751     05F0  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1752                           
  1753                           ;LCD.c: 35:     Lcd_Cmd(1);
  1754     05F5  3001               	movlw	1
  1755     05F6  120A  118A  2612  120A  118A  	fcall	_Lcd_Cmd
  1756     05FB                     l139:
  1757     05FB  0008               	return
  1758     05FC                     __end_of_Lcd_Clear:
  1759                           
  1760                           	psect	text11
  1761     0612                     __ptext11:	
  1762 ;; *************** function _Lcd_Cmd *****************
  1763 ;; Defined at:
  1764 ;;		line 25 in file "LCD.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  a               1    wreg     unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  a               1    3[COMMON] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0
  1780 ;;      Temps:          2       0       0       0       0
  1781 ;;      Totals:         3       0       0       0       0
  1782 ;;Total ram usage:        3 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 1
  1785 ;; This function calls:
  1786 ;;		_Lcd_Port
  1787 ;; This function is called by:
  1788 ;;		_Lcd_Clear
  1789 ;;		_Lcd_Set_Cursor
  1790 ;;		_Lcd_Init
  1791 ;;		_Lcd_Shift_Right
  1792 ;;		_Lcd_Shift_Left
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796     0612                     _Lcd_Cmd:	
  1797                           ;psect for function _Lcd_Cmd
  1798                           
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1802                           ;Lcd_Cmd@a stored from wreg
  1803     0612  00F3               	movwf	Lcd_Cmd@a
  1804     0613                     l785:
  1805                           
  1806                           ;LCD.c: 26:     PORTDbits.RD2 = 0;
  1807     0613  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0614  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0615  1108               	bcf	8,2	;volatile
  1810     0616                     l787:
  1811                           
  1812                           ;LCD.c: 27:     Lcd_Port(a);
  1813     0616  0873               	movf	Lcd_Cmd@a,w
  1814     0617  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  1815     061C                     l789:
  1816                           
  1817                           ;LCD.c: 28:     RD3 = 1;
  1818     061C  1283               	bcf	3,5	;RP0=0, select bank0
  1819     061D  1303               	bcf	3,6	;RP1=0, select bank0
  1820     061E  1588               	bsf	8,3	;volatile
  1821     061F                     l791:
  1822                           
  1823                           ;LCD.c: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1824     061F  3006               	movlw	6
  1825     0620  00F2               	movwf	??_Lcd_Cmd+1
  1826     0621  3030               	movlw	48
  1827     0622  00F1               	movwf	??_Lcd_Cmd
  1828     0623                     u297:
  1829     0623  0BF1               	decfsz	??_Lcd_Cmd,f
  1830     0624  2E23               	goto	u297
  1831     0625  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1832     0626  2E23               	goto	u297
  1833     0627  0000               	nop
  1834     0628                     l793:
  1835                           
  1836                           ;LCD.c: 30:     RD3 = 0;
  1837     0628  1283               	bcf	3,5	;RP0=0, select bank0
  1838     0629  1303               	bcf	3,6	;RP1=0, select bank0
  1839     062A  1188               	bcf	8,3	;volatile
  1840     062B                     l136:
  1841     062B  0008               	return
  1842     062C                     __end_of_Lcd_Cmd:
  1843                           
  1844                           	psect	text12
  1845     064B                     __ptext12:	
  1846 ;; *************** function _Lcd_Port *****************
  1847 ;; Defined at:
  1848 ;;		line 3 in file "LCD.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  a               1    wreg     unsigned char 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  a               1    0[COMMON] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         0       0       0       0       0
  1863 ;;      Locals:         1       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0
  1865 ;;      Totals:         1       0       0       0       0
  1866 ;;Total ram usage:        1 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_Lcd_Cmd
  1872 ;;		_Lcd_Init
  1873 ;;		_Lcd_Write_Char
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877     064B                     _Lcd_Port:	
  1878                           ;psect for function _Lcd_Port
  1879                           
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _Lcd_Port: [wreg]
  1883                           ;Lcd_Port@a stored from wreg
  1884     064B  00F0               	movwf	Lcd_Port@a
  1885     064C                     l763:
  1886                           
  1887                           ;LCD.c: 4:     if (a & 1)
  1888     064C  1C70               	btfss	Lcd_Port@a,0
  1889     064D  2E4F               	goto	u11
  1890     064E  2E50               	goto	u10
  1891     064F                     u11:
  1892     064F  2E54               	goto	l125
  1893     0650                     u10:
  1894     0650                     l765:
  1895                           
  1896                           ;LCD.c: 5:         RD4 = 1;
  1897     0650  1283               	bcf	3,5	;RP0=0, select bank0
  1898     0651  1303               	bcf	3,6	;RP1=0, select bank0
  1899     0652  1608               	bsf	8,4	;volatile
  1900     0653  2E57               	goto	l126
  1901     0654                     l125:	
  1902                           ;LCD.c: 6:     else
  1903                           
  1904                           
  1905                           ;LCD.c: 7:         RD4 = 0;
  1906     0654  1283               	bcf	3,5	;RP0=0, select bank0
  1907     0655  1303               	bcf	3,6	;RP1=0, select bank0
  1908     0656  1208               	bcf	8,4	;volatile
  1909     0657                     l126:
  1910                           
  1911                           ;LCD.c: 9:     if (a & 2)
  1912     0657  1CF0               	btfss	Lcd_Port@a,1
  1913     0658  2E5A               	goto	u21
  1914     0659  2E5B               	goto	u20
  1915     065A                     u21:
  1916     065A  2E5D               	goto	l127
  1917     065B                     u20:
  1918     065B                     l767:
  1919                           
  1920                           ;LCD.c: 10:         RD5 = 1;
  1921     065B  1688               	bsf	8,5	;volatile
  1922     065C  2E5E               	goto	l128
  1923     065D                     l127:	
  1924                           ;LCD.c: 11:     else
  1925                           
  1926                           
  1927                           ;LCD.c: 12:         RD5 = 0;
  1928     065D  1288               	bcf	8,5	;volatile
  1929     065E                     l128:
  1930                           
  1931                           ;LCD.c: 14:     if (a & 4)
  1932     065E  1D70               	btfss	Lcd_Port@a,2
  1933     065F  2E61               	goto	u31
  1934     0660  2E62               	goto	u30
  1935     0661                     u31:
  1936     0661  2E64               	goto	l129
  1937     0662                     u30:
  1938     0662                     l769:
  1939                           
  1940                           ;LCD.c: 15:         RD6 = 1;
  1941     0662  1708               	bsf	8,6	;volatile
  1942     0663  2E65               	goto	l130
  1943     0664                     l129:	
  1944                           ;LCD.c: 16:     else
  1945                           
  1946                           
  1947                           ;LCD.c: 17:         RD6 = 0;
  1948     0664  1308               	bcf	8,6	;volatile
  1949     0665                     l130:
  1950                           
  1951                           ;LCD.c: 19:     if (a & 8)
  1952     0665  1DF0               	btfss	Lcd_Port@a,3
  1953     0666  2E68               	goto	u41
  1954     0667  2E69               	goto	u40
  1955     0668                     u41:
  1956     0668  2E6B               	goto	l131
  1957     0669                     u40:
  1958     0669                     l771:
  1959                           
  1960                           ;LCD.c: 20:         RD7 = 1;
  1961     0669  1788               	bsf	8,7	;volatile
  1962     066A  2E6C               	goto	l133
  1963     066B                     l131:	
  1964                           ;LCD.c: 21:     else
  1965                           
  1966                           
  1967                           ;LCD.c: 22:         RD7 = 0;
  1968     066B  1388               	bcf	8,7	;volatile
  1969     066C                     l133:
  1970     066C  0008               	return
  1971     066D                     __end_of_Lcd_Port:
  1972     007E                     btemp	set	126	;btemp
  1973     007E                     wtemp0	set	126
  1974                           
  1975                           	psect	idloc
  1976                           
  1977                           ;Config register IDLOC0 @ 0x2000
  1978                           ;	unspecified, using default values
  1979     2000                     	org	8192
  1980     2000  3FFF               	dw	16383
  1981                           
  1982                           ;Config register IDLOC1 @ 0x2001
  1983                           ;	unspecified, using default values
  1984     2001                     	org	8193
  1985     2001  3FFF               	dw	16383
  1986                           
  1987                           ;Config register IDLOC2 @ 0x2002
  1988                           ;	unspecified, using default values
  1989     2002                     	org	8194
  1990     2002  3FFF               	dw	16383
  1991                           
  1992                           ;Config register IDLOC3 @ 0x2003
  1993                           ;	unspecified, using default values
  1994     2003                     	org	8195
  1995     2003  3FFF               	dw	16383
  1996                           
  1997                           	psect	config
  1998                           
  1999                           ;Config register CONFIG1 @ 0x2007
  2000                           ;	Oscillator Selection bits
  2001                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2002                           ;	Watchdog Timer Enable bit
  2003                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2004                           ;	Power-up Timer Enable bit
  2005                           ;	PWRTE = OFF, PWRT disabled
  2006                           ;	RE3/MCLR pin function select bit
  2007                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2008                           ;	Code Protection bit
  2009                           ;	CP = OFF, Program memory code protection is disabled
  2010                           ;	Data Code Protection bit
  2011                           ;	CPD = OFF, Data memory code protection is disabled
  2012                           ;	Brown Out Reset Selection bits
  2013                           ;	BOREN = OFF, BOR disabled
  2014                           ;	Internal External Switchover bit
  2015                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2016                           ;	Fail-Safe Clock Monitor Enabled bit
  2017                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2018                           ;	Low Voltage Programming Enable bit
  2019                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2020                           ;	In-Circuit Debugger Mode bit
  2021                           ;	DEBUG = 0x1, unprogrammed default
  2022     2007                     	org	8199
  2023     2007  20D6               	dw	8406
  2024                           
  2025                           ;Config register CONFIG2 @ 0x2008
  2026                           ;	Brown-out Reset Selection bit
  2027                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2028                           ;	Flash Program Memory Self Write Enable bits
  2029                           ;	WRT = OFF, Write protection off
  2030     2008                     	org	8200
  2031     2008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), STR_2(CODE[4]), RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1672
                                             10 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    14      5     243
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     362
                                              5 COMMON     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     497
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 02 22:43:58 2023

                       pc 0002               _SSPSTATbits 0094                        l51 064A  
                      l71 05DF                        l74 05E5                        l67 060C  
                      l68 0611                        l85 05EE                        u10 0650  
                      u11 064F                        u20 065B                        u21 065A  
                      u30 0662                        u31 0661                        u40 0669  
                      u41 0668                        u60 05E5                        u61 05E4  
                      u75 06D1                        fsr 0004                       l130 0665  
                     l131 066B                       l133 066C                       l125 0654  
                     l126 0657                       l127 065D                       l151 06F6  
                     l128 065E                       l136 062B                       l129 0664  
                     l145 073C                       l139 05FB                       l148 0799  
                     l157 06C3                       l253 0693                       _ADC 007D  
                     l801 06DC                       l811 06EF                       l803 06DF  
                     l813 06F3                       l805 06E3                       l831 074C  
                     l807 06E6                       l833 075A                       l809 06EC  
                     l771 0669                       l763 064C                       l835 0760  
                     l827 073D                       l765 0650                       l829 0743  
                     l837 05E6                       l767 065B                       l791 061F  
                     l855 05EF                       l951 060B                       l943 05FD  
                     l783 05DF                       l839 05EB                       l769 0662  
                     l793 0628                       l785 0613                       l945 0604  
                     l961 0640                       l953 062C                       l787 0616  
                     l795 06C5                       l947 0606                       l963 0641  
                     l955 0630                       l971 067D                       l789 061C  
                     l981 070A                       l797 06CB                       l949 0608  
                     l957 0639                       l973 068D                       l965 066D  
                     l991 072D                       l983 070D                       l799 06CE  
                     l959 063A                       l967 0670                       l993 0730  
                     l985 0713                       l977 06F8                       l969 0677  
                     l995 0736                       l979 06FD                       l987 071A  
                     l989 0720                       l997 0694                       l999 0697  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u210 06C3  
                     u211 06C2                       u205 0726                       u150 0604  
                     u151 0603                       u160 068D                       u161 068C  
                     u170 06FD                       u171 06FC                       u227 07A9  
                     u237 07B6                       u190 0720                       u191 071F  
                     u247 06E1                       u185 0703                       u257 06F1  
                     u267 0747                       u277 0756                       u287 0764  
                     u297 0623                       fsr0 0004                       indf 0000  
                    l1001 06A9                      l1003 06AF                      l1011 07AE  
                    l1021 07DC                      l1013 07BB                      l1005 079A  
                    l1023 07E5                      l1015 07BE                      l1007 07A4  
                    l1025 07ED                      l1017 07CF                      l1009 07A7  
                    l1019 07D4                      STR_1 0017                      STR_2 0013  
       ?_Lcd_Write_String 0075                      _main 079A                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 062C  
                   ?_main 0070                     _ANSEL 0188                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
                   _valor 007C                     _setup 062C                     pclath 000A  
         __end_of_spiInit 0612           __end_of_spiRead 05EF                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0694          __end_of_Lcd_Init 079A  
        __end_of_Lcd_Port 066D           __initialization 07FA              __end_of_main 07FA  
                  ??_main 007A                    _ADCON0 001F                    _ADRESH 001E  
                  _ADRESL 009E                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
               ??_spiInit 0073                 ??_spiRead 0070                 ??_sprintf 0075  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 05FC  
          __pcstackCOMMON 0070             __end_of_setup 064B            _Lcd_Set_Cursor 06F7  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0074  
              __pmaintext 079A    __end_of_Lcd_Set_Cursor 073D                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 06C4                   _Lcd_Cmd 0612           ?_Lcd_Set_Cursor 0074  
                 __ptext1 066D                   __ptext2 05E6                   __ptext3 05DF  
                 __ptext4 062C                   __ptext5 05FC                   __ptext6 0694  
                 __ptext7 06C4                   __ptext8 06F7                   __ptext9 073D  
                 _spiInit 05FC                   _spiRead 05E6                   _sprintf 066D  
  __end_of_Lcd_Write_Char 06F7      end_of_initialization 07FC                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _PORTDbits 0008           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 0077                 _Lcd_Clear 05EF  
          _spiReceiveWait 05DF          _Lcd_Write_String 0694       start_initialization 07FA  
  __end_of_spiReceiveWait 05E6                ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073               __pbssCOMMON 007C                 ___latbits 0002  
                ?_Lcd_Cmd 0070           ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0075  
               __pstrings 0003                  ?_spiInit 0070                  ?_spiRead 0070  
                ?_sprintf 0070      spiInit@sTransmitEdge 0072        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074                _ADCON0bits 001F  
             __stringbase 0012                _ADCON1bits 009F          ??_Lcd_Write_Char 0071  
                _Lcd_Init 073D                  _Lcd_Port 064B  __end_of_Lcd_Write_String 06C4  
      __end_of__stringtab 0013                  __ptext10 05EF                  __ptext11 0612  
                __ptext12 064B              spiInit@sType 0073         spiInit@sClockIdle 0071  
      Lcd_Write_Char@temp 0072                 sprintf@ap 0075                 sprintf@sp 0070  
        ??_spiReceiveWait 0070                 stringcode 000D                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079                  sprintf@c 0076                  sprintf@f 0072  
                stringdir 000D                  stringtab 0003  
