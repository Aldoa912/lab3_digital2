

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 23:07:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     008F                     	;# 
   108     0090                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0095                     	;# 
   116     0096                     	;# 
   117     0097                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     0105                     	;# 
   127     0107                     	;# 
   128     0108                     	;# 
   129     0109                     	;# 
   130     010C                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0185                     	;# 
   136     0187                     	;# 
   137     0188                     	;# 
   138     0189                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     008F                     	;# 
   186     0090                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0095                     	;# 
   194     0096                     	;# 
   195     0097                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009A                     	;# 
   199     009B                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009E                     	;# 
   203     009F                     	;# 
   204     0105                     	;# 
   205     0107                     	;# 
   206     0108                     	;# 
   207     0109                     	;# 
   208     010C                     	;# 
   209     010C                     	;# 
   210     010D                     	;# 
   211     010E                     	;# 
   212     010F                     	;# 
   213     0185                     	;# 
   214     0187                     	;# 
   215     0188                     	;# 
   216     0189                     	;# 
   217     018C                     	;# 
   218     018D                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     000E                     	;# 
   234     000E                     	;# 
   235     000F                     	;# 
   236     0010                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0015                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001B                     	;# 
   250     001C                     	;# 
   251     001D                     	;# 
   252     001E                     	;# 
   253     001F                     	;# 
   254     0081                     	;# 
   255     0085                     	;# 
   256     0086                     	;# 
   257     0087                     	;# 
   258     0088                     	;# 
   259     0089                     	;# 
   260     008C                     	;# 
   261     008D                     	;# 
   262     008E                     	;# 
   263     008F                     	;# 
   264     0090                     	;# 
   265     0091                     	;# 
   266     0092                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0095                     	;# 
   272     0096                     	;# 
   273     0097                     	;# 
   274     0098                     	;# 
   275     0099                     	;# 
   276     009A                     	;# 
   277     009B                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     0105                     	;# 
   283     0107                     	;# 
   284     0108                     	;# 
   285     0109                     	;# 
   286     010C                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     0185                     	;# 
   292     0187                     	;# 
   293     0188                     	;# 
   294     0189                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297     0000                     	;# 
   298     0001                     	;# 
   299     0002                     	;# 
   300     0003                     	;# 
   301     0004                     	;# 
   302     0005                     	;# 
   303     0006                     	;# 
   304     0007                     	;# 
   305     0008                     	;# 
   306     0009                     	;# 
   307     000A                     	;# 
   308     000B                     	;# 
   309     000C                     	;# 
   310     000D                     	;# 
   311     000E                     	;# 
   312     000E                     	;# 
   313     000F                     	;# 
   314     0010                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0013                     	;# 
   318     0014                     	;# 
   319     0015                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0017                     	;# 
   323     0018                     	;# 
   324     0019                     	;# 
   325     001A                     	;# 
   326     001B                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001D                     	;# 
   330     001E                     	;# 
   331     001F                     	;# 
   332     0081                     	;# 
   333     0085                     	;# 
   334     0086                     	;# 
   335     0087                     	;# 
   336     0088                     	;# 
   337     0089                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     008F                     	;# 
   342     0090                     	;# 
   343     0091                     	;# 
   344     0092                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0094                     	;# 
   349     0095                     	;# 
   350     0096                     	;# 
   351     0097                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009A                     	;# 
   355     009B                     	;# 
   356     009C                     	;# 
   357     009D                     	;# 
   358     009E                     	;# 
   359     009F                     	;# 
   360     0105                     	;# 
   361     0107                     	;# 
   362     0108                     	;# 
   363     0109                     	;# 
   364     010C                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     010E                     	;# 
   368     010F                     	;# 
   369     0185                     	;# 
   370     0187                     	;# 
   371     0188                     	;# 
   372     0189                     	;# 
   373     018C                     	;# 
   374     018D                     	;# 
   375     0013                     _SSPBUF	set	19
   376     0014                     _SSPCON	set	20
   377     0008                     _PORTDbits	set	8
   378     0006                     _PORTB	set	6
   379     0008                     _PORTD	set	8
   380     0007                     _PORTCbits	set	7
   381     0043                     _RD3	set	67
   382     0047                     _RD7	set	71
   383     0046                     _RD6	set	70
   384     0045                     _RD5	set	69
   385     0044                     _RD4	set	68
   386     0094                     _SSPSTATbits	set	148
   387     0094                     _SSPSTAT	set	148
   388     008F                     _OSCCONbits	set	143
   389     0087                     _TRISCbits	set	135
   390     0088                     _TRISD	set	136
   391     0086                     _TRISB	set	134
   392     043B                     _TRISC3	set	1083
   393     043D                     _TRISC5	set	1085
   394     0189                     _ANSELH	set	393
   395     0188                     _ANSEL	set	392
   396                           
   397                           	psect	strings
   398     0003                     __pstrings:
   399     0003                     stringtab:
   400     0003                     __stringtab:
   401     0003                     stringcode:	
   402                           ;	String table - string pointers are 1 byte each
   403                           
   404     0003                     stringdir:
   405     0003  3000               	movlw	high stringdir
   406     0004  008A               	movwf	10
   407     0005  0804               	movf	4,w
   408     0006  0A84               	incf	4,f
   409     0007  0782               	addwf	2,f
   410     0008                     __stringbase:
   411     0008  3400               	retlw	0
   412     0009                     __end_of__stringtab:
   413     0009                     STR_1:
   414     0009  3441               	retlw	65	;'A'
   415     000A  3444               	retlw	68	;'D'
   416     000B  3443               	retlw	67	;'C'
   417     000C  3420               	retlw	32	;' '
   418     000D  3420               	retlw	32	;' '
   419     000E  3420               	retlw	32	;' '
   420     000F  3441               	retlw	65	;'A'
   421     0010  3444               	retlw	68	;'D'
   422     0011  3443               	retlw	67	;'C'
   423     0012  3432               	retlw	50	;'2'
   424     0013  3420               	retlw	32	;' '
   425     0014  3420               	retlw	32	;' '
   426     0015  3420               	retlw	32	;' '
   427     0016  3443               	retlw	67	;'C'
   428     0017  344F               	retlw	79	;'O'
   429     0018  344E               	retlw	78	;'N'
   430     0019  3454               	retlw	84	;'T'
   431     001A  3400               	retlw	0
   432                           
   433                           	psect	cinit
   434     07EC                     start_initialization:	
   435                           ; #config settings
   436                           
   437     07EC                     __initialization:
   438                           
   439                           ; Clear objects allocated to BANK0
   440     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   441     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   442     07EE  01A0               	clrf	__pbssBANK0& (0+127)
   443     07EF  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   444     07F0  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   445     07F1  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   446     07F2  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   447     07F3  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   448     07F4  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   449     07F5  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   450     07F6  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   451     07F7  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   452     07F8  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   453     07F9  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   454     07FA  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   455     07FB  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   456     07FC                     end_of_initialization:	
   457                           ;End of C runtime variable initialization code
   458                           
   459     07FC                     __end_of__initialization:
   460     07FC  0183               	clrf	3
   461     07FD  120A  118A  2E0E   	ljmp	_main	;jump to C main() function
   462                           
   463                           	psect	bssBANK0
   464     0020                     __pbssBANK0:
   465     0020                     _unidad2:
   466     0020                     	ds	1
   467     0021                     _decenas2:
   468     0021                     	ds	1
   469     0022                     _centenas2:
   470     0022                     	ds	1
   471     0023                     _unidad1:
   472     0023                     	ds	1
   473     0024                     _decenas1:
   474     0024                     	ds	1
   475     0025                     _centenas1:
   476     0025                     	ds	1
   477     0026                     _unidad:
   478     0026                     	ds	1
   479     0027                     _decenas:
   480     0027                     	ds	1
   481     0028                     _centenas:
   482     0028                     	ds	1
   483     0029                     _valor:
   484     0029                     	ds	1
   485     002A                     _verificacion:
   486     002A                     	ds	1
   487     002B                     _contador:
   488     002B                     	ds	1
   489     002C                     _ADC1:
   490     002C                     	ds	1
   491     002D                     _ADC:
   492     002D                     	ds	1
   493                           
   494                           	psect	cstackCOMMON
   495     0070                     __pcstackCOMMON:
   496     0070                     ?_setup:
   497     0070                     ?_Lcd_Init:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_Lcd_Clear:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_Lcd_Write_String:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_spiWrite:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ??_spiWrite:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_spiRead:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ??_spiRead:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_Lcd_Write_Char:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_spiInit:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_Lcd_Port:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ??_Lcd_Port:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_Lcd_Cmd:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_spiReceiveWait:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ??_spiReceiveWait:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?___awdiv:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     Lcd_Port@a:	
   546                           ; 2 bytes @ 0x0
   547                           
   548     0070                     spiInit@sDataSample:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     spiWrite@dat:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ___awdiv@divisor:	
   555                           ; 1 bytes @ 0x0
   556                           
   557                           
   558                           ; 2 bytes @ 0x0
   559     0070                     	ds	1
   560     0071                     ??_Lcd_Write_Char:
   561     0071                     ??_Lcd_Cmd:	
   562                           ; 1 bytes @ 0x1
   563                           
   564     0071                     spiInit@sClockIdle:	
   565                           ; 1 bytes @ 0x1
   566                           
   567                           
   568                           ; 1 bytes @ 0x1
   569     0071                     	ds	1
   570     0072                     Lcd_Write_Char@temp:
   571     0072                     spiInit@sTransmitEdge:	
   572                           ; 1 bytes @ 0x2
   573                           
   574     0072                     ___awdiv@dividend:	
   575                           ; 1 bytes @ 0x2
   576                           
   577                           
   578                           ; 2 bytes @ 0x2
   579     0072                     	ds	1
   580     0073                     ??_spiInit:
   581     0073                     Lcd_Cmd@a:	
   582                           ; 1 bytes @ 0x3
   583                           
   584     0073                     Lcd_Write_Char@y:	
   585                           ; 1 bytes @ 0x3
   586                           
   587     0073                     spiInit@sType:	
   588                           ; 1 bytes @ 0x3
   589                           
   590                           
   591                           ; 1 bytes @ 0x3
   592     0073                     	ds	1
   593     0074                     ??_setup:
   594     0074                     ??_Lcd_Init:	
   595                           ; 1 bytes @ 0x4
   596                           
   597     0074                     ??_Lcd_Clear:	
   598                           ; 1 bytes @ 0x4
   599                           
   600     0074                     ?_Lcd_Set_Cursor:	
   601                           ; 1 bytes @ 0x4
   602                           
   603     0074                     ??___awdiv:	
   604                           ; 1 bytes @ 0x4
   605                           
   606     0074                     Lcd_Set_Cursor@b:	
   607                           ; 1 bytes @ 0x4
   608                           
   609     0074                     Lcd_Write_Char@a:	
   610                           ; 1 bytes @ 0x4
   611                           
   612                           
   613                           ; 1 bytes @ 0x4
   614     0074                     	ds	1
   615     0075                     ??_Lcd_Set_Cursor:
   616     0075                     ??_Lcd_Write_String:	
   617                           ; 1 bytes @ 0x5
   618                           
   619     0075                     ___awdiv@counter:	
   620                           ; 1 bytes @ 0x5
   621                           
   622     0075                     Lcd_Write_String@i:	
   623                           ; 1 bytes @ 0x5
   624                           
   625                           
   626                           ; 2 bytes @ 0x5
   627     0075                     	ds	1
   628     0076                     Lcd_Set_Cursor@a:
   629     0076                     ___awdiv@sign:	
   630                           ; 1 bytes @ 0x6
   631                           
   632                           
   633                           ; 1 bytes @ 0x6
   634     0076                     	ds	1
   635     0077                     Lcd_Set_Cursor@z:
   636     0077                     Lcd_Write_String@a:	
   637                           ; 1 bytes @ 0x7
   638                           
   639     0077                     ___awdiv@quotient:	
   640                           ; 1 bytes @ 0x7
   641                           
   642                           
   643                           ; 2 bytes @ 0x7
   644     0077                     	ds	1
   645     0078                     Lcd_Set_Cursor@y:
   646                           
   647                           ; 1 bytes @ 0x8
   648     0078                     	ds	1
   649     0079                     ?___awmod:
   650     0079                     Lcd_Set_Cursor@temp:	
   651                           ; 2 bytes @ 0x9
   652                           
   653     0079                     ___awmod@divisor:	
   654                           ; 1 bytes @ 0x9
   655                           
   656                           
   657                           ; 2 bytes @ 0x9
   658     0079                     	ds	2
   659     007B                     ___awmod@dividend:
   660                           
   661                           ; 2 bytes @ 0xB
   662     007B                     	ds	2
   663     007D                     ??___awmod:
   664                           
   665                           ; 1 bytes @ 0xD
   666     007D                     	ds	1
   667                           
   668                           	psect	cstackBANK0
   669     002E                     __pcstackBANK0:
   670     002E                     ___awmod@counter:
   671                           
   672                           ; 1 bytes @ 0x0
   673     002E                     	ds	1
   674     002F                     ___awmod@sign:
   675                           
   676                           ; 1 bytes @ 0x1
   677     002F                     	ds	1
   678     0030                     ??_main:
   679                           
   680                           ; 1 bytes @ 0x2
   681     0030                     	ds	2
   682                           
   683                           	psect	maintext
   684     060E                     __pmaintext:	
   685 ;;
   686 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   687 ;;
   688 ;; *************** function _main *****************
   689 ;; Defined at:
   690 ;;		line 71 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : B00/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0
   706 ;;      Temps:          0       2       0       0       0
   707 ;;      Totals:         0       2       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels required when called: 3
   710 ;; This function calls:
   711 ;;		_Lcd_Clear
   712 ;;		_Lcd_Init
   713 ;;		_Lcd_Set_Cursor
   714 ;;		_Lcd_Write_Char
   715 ;;		_Lcd_Write_String
   716 ;;		___awdiv
   717 ;;		___awmod
   718 ;;		_setup
   719 ;;		_spiRead
   720 ;;		_spiWrite
   721 ;; This function is called by:
   722 ;;		Startup code after reset
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726     060E                     _main:	
   727                           ;psect for function _main
   728                           
   729     060E                     l1215:	
   730                           ;incstack = 0
   731                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   732                           
   733                           
   734                           ;main.c: 72:     setup();
   735     060E  120A  118A  242D  120A  118A  	fcall	_setup
   736                           
   737                           ;main.c: 73:     Lcd_Init();
   738     0613  120A  118A  254A  120A  118A  	fcall	_Lcd_Init
   739                           
   740                           ;main.c: 74:     Lcd_Clear();
   741     0618  120A  118A  23CE  120A  118A  	fcall	_Lcd_Clear
   742                           
   743                           ;main.c: 75:     Lcd_Set_Cursor(1,1);
   744     061D  01F4               	clrf	Lcd_Set_Cursor@b
   745     061E  0AF4               	incf	Lcd_Set_Cursor@b,f
   746     061F  3001               	movlw	1
   747     0620  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
   748     0625                     l1217:
   749                           
   750                           ;main.c: 76:     Lcd_Write_String("ADC   ADC2   CONT");
   751     0625  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   752     0626  120A  118A  2451  120A  118A  	fcall	_Lcd_Write_String
   753     062B                     l1219:
   754                           
   755                           ;main.c: 81:         PORTCbits.RC2 = 0;
   756     062B  1283               	bcf	3,5	;RP0=0, select bank0
   757     062C  1303               	bcf	3,6	;RP1=0, select bank0
   758     062D  1107               	bcf	7,2	;volatile
   759     062E                     l1221:
   760                           
   761                           ;main.c: 82:         _delay((unsigned long)((1)*(4000000/4000.0)));
   762     062E  30C7               	movlw	199
   763     062F  1283               	bcf	3,5	;RP0=0, select bank0
   764     0630  1303               	bcf	3,6	;RP1=0, select bank0
   765     0631  00B0               	movwf	??_main
   766     0632                     u677:
   767     0632  2E33               	nop2
   768     0633  0BB0               	decfsz	??_main,f
   769     0634  2E32               	goto	u677
   770     0635  2E36               	nop2
   771     0636                     l1223:
   772                           
   773                           ;main.c: 84:        spiWrite(PORTD);
   774     0636  1283               	bcf	3,5	;RP0=0, select bank0
   775     0637  1303               	bcf	3,6	;RP1=0, select bank0
   776     0638  0808               	movf	8,w	;volatile
   777     0639  120A  118A  23B8  120A  118A  	fcall	_spiWrite
   778     063E                     l1225:
   779                           
   780                           ;main.c: 85:        ADC = spiRead();
   781     063E  120A  118A  23C5  120A  118A  	fcall	_spiRead
   782     0643  1283               	bcf	3,5	;RP0=0, select bank0
   783     0644  1303               	bcf	3,6	;RP1=0, select bank0
   784     0645  00AD               	movwf	_ADC
   785     0646                     l1227:
   786                           
   787                           ;main.c: 87:         _delay((unsigned long)((1)*(4000000/4000.0)));
   788     0646  30C7               	movlw	199
   789     0647  1283               	bcf	3,5	;RP0=0, select bank0
   790     0648  1303               	bcf	3,6	;RP1=0, select bank0
   791     0649  00B0               	movwf	??_main
   792     064A                     u687:
   793     064A  2E4B               	nop2
   794     064B  0BB0               	decfsz	??_main,f
   795     064C  2E4A               	goto	u687
   796     064D  2E4E               	nop2
   797     064E                     l1229:
   798                           
   799                           ;main.c: 88:         PORTCbits.RC2 = 1;
   800     064E  1283               	bcf	3,5	;RP0=0, select bank0
   801     064F  1303               	bcf	3,6	;RP1=0, select bank0
   802     0650  1507               	bsf	7,2	;volatile
   803     0651                     l1231:
   804                           
   805                           ;main.c: 90:         centenas = (ADC/100);
   806     0651  3064               	movlw	100
   807     0652  00F0               	movwf	___awdiv@divisor
   808     0653  3000               	movlw	0
   809     0654  00F1               	movwf	___awdiv@divisor+1
   810     0655  082D               	movf	_ADC,w
   811     0656  00B0               	movwf	??_main
   812     0657  01B1               	clrf	??_main+1
   813     0658  0830               	movf	??_main,w
   814     0659  00F2               	movwf	___awdiv@dividend
   815     065A  0831               	movf	??_main+1,w
   816     065B  00F3               	movwf	___awdiv@dividend+1
   817     065C  120A  118A  25A7  120A  118A  	fcall	___awdiv
   818     0661  0870               	movf	?___awdiv,w
   819     0662  1283               	bcf	3,5	;RP0=0, select bank0
   820     0663  1303               	bcf	3,6	;RP1=0, select bank0
   821     0664  00A8               	movwf	_centenas
   822     0665                     l1233:
   823                           
   824                           ;main.c: 91:         decenas = (ADC/10)%10;
   825     0665  300A               	movlw	10
   826     0666  00F9               	movwf	___awmod@divisor
   827     0667  3000               	movlw	0
   828     0668  00FA               	movwf	___awmod@divisor+1
   829     0669  300A               	movlw	10
   830     066A  00F0               	movwf	___awdiv@divisor
   831     066B  3000               	movlw	0
   832     066C  00F1               	movwf	___awdiv@divisor+1
   833     066D  082D               	movf	_ADC,w
   834     066E  00B0               	movwf	??_main
   835     066F  01B1               	clrf	??_main+1
   836     0670  0830               	movf	??_main,w
   837     0671  00F2               	movwf	___awdiv@dividend
   838     0672  0831               	movf	??_main+1,w
   839     0673  00F3               	movwf	___awdiv@dividend+1
   840     0674  120A  118A  25A7  120A  118A  	fcall	___awdiv
   841     0679  0871               	movf	?___awdiv+1,w
   842     067A  00FC               	movwf	___awmod@dividend+1
   843     067B  0870               	movf	?___awdiv,w
   844     067C  00FB               	movwf	___awmod@dividend
   845     067D  120A  118A  24EF  120A  118A  	fcall	___awmod
   846     0682  0879               	movf	?___awmod,w
   847     0683  1283               	bcf	3,5	;RP0=0, select bank0
   848     0684  1303               	bcf	3,6	;RP1=0, select bank0
   849     0685  00A7               	movwf	_decenas
   850     0686                     l1235:
   851                           
   852                           ;main.c: 92:         unidad = ADC%10;
   853     0686  300A               	movlw	10
   854     0687  00F9               	movwf	___awmod@divisor
   855     0688  3000               	movlw	0
   856     0689  00FA               	movwf	___awmod@divisor+1
   857     068A  082D               	movf	_ADC,w
   858     068B  00B0               	movwf	??_main
   859     068C  01B1               	clrf	??_main+1
   860     068D  0830               	movf	??_main,w
   861     068E  00FB               	movwf	___awmod@dividend
   862     068F  0831               	movf	??_main+1,w
   863     0690  00FC               	movwf	___awmod@dividend+1
   864     0691  120A  118A  24EF  120A  118A  	fcall	___awmod
   865     0696  0879               	movf	?___awmod,w
   866     0697  1283               	bcf	3,5	;RP0=0, select bank0
   867     0698  1303               	bcf	3,6	;RP1=0, select bank0
   868     0699  00A6               	movwf	_unidad
   869     069A                     l1237:
   870                           
   871                           ;main.c: 94:         Lcd_Set_Cursor(2,1);
   872     069A  01F4               	clrf	Lcd_Set_Cursor@b
   873     069B  0AF4               	incf	Lcd_Set_Cursor@b,f
   874     069C  3002               	movlw	2
   875     069D  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
   876     06A2                     l1239:
   877                           
   878                           ;main.c: 95:         Lcd_Write_Char(centenas + 48);
   879     06A2  1283               	bcf	3,5	;RP0=0, select bank0
   880     06A3  1303               	bcf	3,6	;RP1=0, select bank0
   881     06A4  0828               	movf	_centenas,w
   882     06A5  3E30               	addlw	48
   883     06A6  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
   884     06AB                     l1241:
   885                           
   886                           ;main.c: 96:         Lcd_Write_Char(decenas + 48);
   887     06AB  1283               	bcf	3,5	;RP0=0, select bank0
   888     06AC  1303               	bcf	3,6	;RP1=0, select bank0
   889     06AD  0827               	movf	_decenas,w
   890     06AE  3E30               	addlw	48
   891     06AF  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
   892     06B4                     l1243:
   893                           
   894                           ;main.c: 97:         Lcd_Write_Char(unidad + 48);
   895     06B4  1283               	bcf	3,5	;RP0=0, select bank0
   896     06B5  1303               	bcf	3,6	;RP1=0, select bank0
   897     06B6  0826               	movf	_unidad,w
   898     06B7  3E30               	addlw	48
   899     06B8  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
   900     06BD                     l1245:
   901                           
   902                           ;main.c: 100:         PORTCbits.RC1 = 0;
   903     06BD  1283               	bcf	3,5	;RP0=0, select bank0
   904     06BE  1303               	bcf	3,6	;RP1=0, select bank0
   905     06BF  1087               	bcf	7,1	;volatile
   906     06C0                     l1247:
   907                           
   908                           ;main.c: 101:         _delay((unsigned long)((1)*(4000000/4000.0)));
   909     06C0  30C7               	movlw	199
   910     06C1  1283               	bcf	3,5	;RP0=0, select bank0
   911     06C2  1303               	bcf	3,6	;RP1=0, select bank0
   912     06C3  00B0               	movwf	??_main
   913     06C4                     u697:
   914     06C4  2EC5               	nop2
   915     06C5  0BB0               	decfsz	??_main,f
   916     06C6  2EC4               	goto	u697
   917     06C7  2EC8               	nop2
   918     06C8                     l1249:
   919                           
   920                           ;main.c: 103:        spiWrite(PORTD);
   921     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   922     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   923     06CA  0808               	movf	8,w	;volatile
   924     06CB  120A  118A  23B8  120A  118A  	fcall	_spiWrite
   925     06D0                     l1251:
   926                           
   927                           ;main.c: 104:        verificacion = spiRead();
   928     06D0  120A  118A  23C5  120A  118A  	fcall	_spiRead
   929     06D5  1283               	bcf	3,5	;RP0=0, select bank0
   930     06D6  1303               	bcf	3,6	;RP1=0, select bank0
   931     06D7  00AA               	movwf	_verificacion
   932     06D8                     l1253:
   933                           
   934                           ;main.c: 106:        if (verificacion == 's'){
   935     06D8  3073               	movlw	115
   936     06D9  062A               	xorwf	_verificacion,w
   937     06DA  1D03               	btfss	3,2
   938     06DB  2EDD               	goto	u651
   939     06DC  2EDE               	goto	u650
   940     06DD                     u651:
   941     06DD  2EED               	goto	l1257
   942     06DE                     u650:
   943     06DE                     l1255:
   944                           
   945                           ;main.c: 107:            spiWrite(PORTD);
   946     06DE  0808               	movf	8,w	;volatile
   947     06DF  120A  118A  23B8  120A  118A  	fcall	_spiWrite
   948                           
   949                           ;main.c: 108:            ADC1 = spiRead();
   950     06E4  120A  118A  23C5  120A  118A  	fcall	_spiRead
   951     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   952     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   953     06EB  00AC               	movwf	_ADC1
   954                           
   955                           ;main.c: 109:        }
   956     06EC  2F01               	goto	l1261
   957     06ED                     l1257:
   958     06ED  306E               	movlw	110
   959     06EE  062A               	xorwf	_verificacion,w
   960     06EF  1D03               	btfss	3,2
   961     06F0  2EF2               	goto	u661
   962     06F1  2EF3               	goto	u660
   963     06F2                     u661:
   964     06F2  2F01               	goto	l1261
   965     06F3                     u660:
   966     06F3                     l1259:
   967                           
   968                           ;main.c: 112:            spiWrite(PORTD);
   969     06F3  0808               	movf	8,w	;volatile
   970     06F4  120A  118A  23B8  120A  118A  	fcall	_spiWrite
   971                           
   972                           ;main.c: 113:            contador = spiRead();
   973     06F9  120A  118A  23C5  120A  118A  	fcall	_spiRead
   974     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   975     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   976     0700  00AB               	movwf	_contador
   977     0701                     l1261:
   978                           
   979                           ;main.c: 116:         _delay((unsigned long)((1)*(4000000/4000.0)));
   980     0701  30C7               	movlw	199
   981     0702  1283               	bcf	3,5	;RP0=0, select bank0
   982     0703  1303               	bcf	3,6	;RP1=0, select bank0
   983     0704  00B0               	movwf	??_main
   984     0705                     u707:
   985     0705  2F06               	nop2
   986     0706  0BB0               	decfsz	??_main,f
   987     0707  2F05               	goto	u707
   988     0708  2F09               	nop2
   989     0709                     l1263:
   990                           
   991                           ;main.c: 117:         PORTCbits.RC1 = 1;
   992     0709  1283               	bcf	3,5	;RP0=0, select bank0
   993     070A  1303               	bcf	3,6	;RP1=0, select bank0
   994     070B  1487               	bsf	7,1	;volatile
   995     070C                     l1265:
   996                           
   997                           ;main.c: 119:         PORTB = ADC;
   998     070C  082D               	movf	_ADC,w
   999     070D  0086               	movwf	6	;volatile
  1000                           
  1001                           ;main.c: 123:         centenas1 = (ADC1/100);
  1002     070E  3064               	movlw	100
  1003     070F  00F0               	movwf	___awdiv@divisor
  1004     0710  3000               	movlw	0
  1005     0711  00F1               	movwf	___awdiv@divisor+1
  1006     0712  082C               	movf	_ADC1,w
  1007     0713  00B0               	movwf	??_main
  1008     0714  01B1               	clrf	??_main+1
  1009     0715  0830               	movf	??_main,w
  1010     0716  00F2               	movwf	___awdiv@dividend
  1011     0717  0831               	movf	??_main+1,w
  1012     0718  00F3               	movwf	___awdiv@dividend+1
  1013     0719  120A  118A  25A7  120A  118A  	fcall	___awdiv
  1014     071E  0870               	movf	?___awdiv,w
  1015     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1016     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1017     0721  00A5               	movwf	_centenas1
  1018                           
  1019                           ;main.c: 124:         decenas1 = (ADC1/10)%10;
  1020     0722  300A               	movlw	10
  1021     0723  00F9               	movwf	___awmod@divisor
  1022     0724  3000               	movlw	0
  1023     0725  00FA               	movwf	___awmod@divisor+1
  1024     0726  300A               	movlw	10
  1025     0727  00F0               	movwf	___awdiv@divisor
  1026     0728  3000               	movlw	0
  1027     0729  00F1               	movwf	___awdiv@divisor+1
  1028     072A  082C               	movf	_ADC1,w
  1029     072B  00B0               	movwf	??_main
  1030     072C  01B1               	clrf	??_main+1
  1031     072D  0830               	movf	??_main,w
  1032     072E  00F2               	movwf	___awdiv@dividend
  1033     072F  0831               	movf	??_main+1,w
  1034     0730  00F3               	movwf	___awdiv@dividend+1
  1035     0731  120A  118A  25A7  120A  118A  	fcall	___awdiv
  1036     0736  0871               	movf	?___awdiv+1,w
  1037     0737  00FC               	movwf	___awmod@dividend+1
  1038     0738  0870               	movf	?___awdiv,w
  1039     0739  00FB               	movwf	___awmod@dividend
  1040     073A  120A  118A  24EF  120A  118A  	fcall	___awmod
  1041     073F  0879               	movf	?___awmod,w
  1042     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1043     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1044     0742  00A4               	movwf	_decenas1
  1045                           
  1046                           ;main.c: 125:         unidad1 = ADC1%10;
  1047     0743  300A               	movlw	10
  1048     0744  00F9               	movwf	___awmod@divisor
  1049     0745  3000               	movlw	0
  1050     0746  00FA               	movwf	___awmod@divisor+1
  1051     0747  082C               	movf	_ADC1,w
  1052     0748  00B0               	movwf	??_main
  1053     0749  01B1               	clrf	??_main+1
  1054     074A  0830               	movf	??_main,w
  1055     074B  00FB               	movwf	___awmod@dividend
  1056     074C  0831               	movf	??_main+1,w
  1057     074D  00FC               	movwf	___awmod@dividend+1
  1058     074E  120A  118A  24EF  120A  118A  	fcall	___awmod
  1059     0753  0879               	movf	?___awmod,w
  1060     0754  1283               	bcf	3,5	;RP0=0, select bank0
  1061     0755  1303               	bcf	3,6	;RP1=0, select bank0
  1062     0756  00A3               	movwf	_unidad1
  1063                           
  1064                           ;main.c: 127:         Lcd_Set_Cursor(2,7);
  1065     0757  3007               	movlw	7
  1066     0758  00F4               	movwf	Lcd_Set_Cursor@b
  1067     0759  3002               	movlw	2
  1068     075A  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
  1069                           
  1070                           ;main.c: 128:         Lcd_Write_Char(centenas1 + 48);
  1071     075F  1283               	bcf	3,5	;RP0=0, select bank0
  1072     0760  1303               	bcf	3,6	;RP1=0, select bank0
  1073     0761  0825               	movf	_centenas1,w
  1074     0762  3E30               	addlw	48
  1075     0763  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
  1076                           
  1077                           ;main.c: 129:         Lcd_Write_Char(decenas1 + 48);
  1078     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1079     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1080     076A  0824               	movf	_decenas1,w
  1081     076B  3E30               	addlw	48
  1082     076C  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
  1083                           
  1084                           ;main.c: 130:         Lcd_Write_Char(unidad1 + 48);
  1085     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1086     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1087     0773  0823               	movf	_unidad1,w
  1088     0774  3E30               	addlw	48
  1089     0775  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
  1090                           
  1091                           ;main.c: 132:         centenas2 = (contador/100);
  1092     077A  3064               	movlw	100
  1093     077B  00F0               	movwf	___awdiv@divisor
  1094     077C  3000               	movlw	0
  1095     077D  00F1               	movwf	___awdiv@divisor+1
  1096     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1097     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1098     0780  082B               	movf	_contador,w
  1099     0781  00B0               	movwf	??_main
  1100     0782  01B1               	clrf	??_main+1
  1101     0783  0830               	movf	??_main,w
  1102     0784  00F2               	movwf	___awdiv@dividend
  1103     0785  0831               	movf	??_main+1,w
  1104     0786  00F3               	movwf	___awdiv@dividend+1
  1105     0787  120A  118A  25A7  120A  118A  	fcall	___awdiv
  1106     078C  0870               	movf	?___awdiv,w
  1107     078D  1283               	bcf	3,5	;RP0=0, select bank0
  1108     078E  1303               	bcf	3,6	;RP1=0, select bank0
  1109     078F  00A2               	movwf	_centenas2
  1110                           
  1111                           ;main.c: 133:         decenas2 = (contador/10)%10;
  1112     0790  300A               	movlw	10
  1113     0791  00F9               	movwf	___awmod@divisor
  1114     0792  3000               	movlw	0
  1115     0793  00FA               	movwf	___awmod@divisor+1
  1116     0794  300A               	movlw	10
  1117     0795  00F0               	movwf	___awdiv@divisor
  1118     0796  3000               	movlw	0
  1119     0797  00F1               	movwf	___awdiv@divisor+1
  1120     0798  082B               	movf	_contador,w
  1121     0799  00B0               	movwf	??_main
  1122     079A  01B1               	clrf	??_main+1
  1123     079B  0830               	movf	??_main,w
  1124     079C  00F2               	movwf	___awdiv@dividend
  1125     079D  0831               	movf	??_main+1,w
  1126     079E  00F3               	movwf	___awdiv@dividend+1
  1127     079F  120A  118A  25A7  120A  118A  	fcall	___awdiv
  1128     07A4  0871               	movf	?___awdiv+1,w
  1129     07A5  00FC               	movwf	___awmod@dividend+1
  1130     07A6  0870               	movf	?___awdiv,w
  1131     07A7  00FB               	movwf	___awmod@dividend
  1132     07A8  120A  118A  24EF  120A  118A  	fcall	___awmod
  1133     07AD  0879               	movf	?___awmod,w
  1134     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1135     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1136     07B0  00A1               	movwf	_decenas2
  1137                           
  1138                           ;main.c: 134:         unidad2 = contador%10;
  1139     07B1  300A               	movlw	10
  1140     07B2  00F9               	movwf	___awmod@divisor
  1141     07B3  3000               	movlw	0
  1142     07B4  00FA               	movwf	___awmod@divisor+1
  1143     07B5  082B               	movf	_contador,w
  1144     07B6  00B0               	movwf	??_main
  1145     07B7  01B1               	clrf	??_main+1
  1146     07B8  0830               	movf	??_main,w
  1147     07B9  00FB               	movwf	___awmod@dividend
  1148     07BA  0831               	movf	??_main+1,w
  1149     07BB  00FC               	movwf	___awmod@dividend+1
  1150     07BC  120A  118A  24EF  120A  118A  	fcall	___awmod
  1151     07C1  0879               	movf	?___awmod,w
  1152     07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1153     07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1154     07C4  00A0               	movwf	_unidad2
  1155                           
  1156                           ;main.c: 136:         Lcd_Set_Cursor(2,14);
  1157     07C5  300E               	movlw	14
  1158     07C6  00F4               	movwf	Lcd_Set_Cursor@b
  1159     07C7  3002               	movlw	2
  1160     07C8  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
  1161                           
  1162                           ;main.c: 137:         Lcd_Write_Char(centenas2 + 48);
  1163     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1164     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1165     07CF  0822               	movf	_centenas2,w
  1166     07D0  3E30               	addlw	48
  1167     07D1  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
  1168                           
  1169                           ;main.c: 138:         Lcd_Write_Char(decenas2 + 48);
  1170     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1171     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1172     07D8  0821               	movf	_decenas2,w
  1173     07D9  3E30               	addlw	48
  1174     07DA  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
  1175                           
  1176                           ;main.c: 139:         Lcd_Write_Char(unidad2 + 48);
  1177     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1178     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1179     07E1  0820               	movf	_unidad2,w
  1180     07E2  3E30               	addlw	48
  1181     07E3  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
  1182     07E8  2E2B               	goto	l1219
  1183     07E9  120A  118A  2800   	ljmp	start
  1184     07EC                     __end_of_main:
  1185                           
  1186                           	psect	text1
  1187     03B8                     __ptext1:	
  1188 ;; *************** function _spiWrite *****************
  1189 ;; Defined at:
  1190 ;;		line 25 in file "SPI.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  dat             1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  dat             1    0[COMMON] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0
  1207 ;;      Totals:         1       0       0       0       0
  1208 ;;Total ram usage:        1 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217     03B8                     _spiWrite:	
  1218                           ;psect for function _spiWrite
  1219                           
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _spiWrite: [wreg]
  1223                           ;spiWrite@dat stored from wreg
  1224     03B8  00F0               	movwf	spiWrite@dat
  1225     03B9                     l1125:
  1226                           
  1227                           ;SPI.c: 25: void spiWrite(char dat);SPI.c: 26: {;SPI.c: 27:     SSPBUF = dat;
  1228     03B9  0870               	movf	spiWrite@dat,w
  1229     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1230     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1231     03BC  0093               	movwf	19	;volatile
  1232     03BD                     l161:
  1233     03BD  0008               	return
  1234     03BE                     __end_of_spiWrite:
  1235                           
  1236                           	psect	text2
  1237     03C5                     __ptext2:	
  1238 ;; *************** function _spiRead *****************
  1239 ;; Defined at:
  1240 ;;		line 38 in file "SPI.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      unsigned char 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0
  1257 ;;      Totals:         0       0       0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 1
  1261 ;; This function calls:
  1262 ;;		_spiReceiveWait
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268     03C5                     _spiRead:	
  1269                           ;psect for function _spiRead
  1270                           
  1271     03C5                     l1127:	
  1272                           ;incstack = 0
  1273                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1274                           
  1275                           
  1276                           ;SPI.c: 40:     spiReceiveWait();
  1277     03C5  120A  118A  23BE  120A  118A  	fcall	_spiReceiveWait
  1278     03CA                     l1129:
  1279                           
  1280                           ;SPI.c: 41:     return(SSPBUF);
  1281     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1282     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1283     03CC  0813               	movf	19,w	;volatile
  1284     03CD                     l169:
  1285     03CD  0008               	return
  1286     03CE                     __end_of_spiRead:
  1287                           
  1288                           	psect	text3
  1289     03BE                     __ptext3:	
  1290 ;; *************** function _spiReceiveWait *****************
  1291 ;; Defined at:
  1292 ;;		line 20 in file "SPI.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		None
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_spiRead
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319     03BE                     _spiReceiveWait:	
  1320                           ;psect for function _spiReceiveWait
  1321                           
  1322     03BE                     l1069:	
  1323                           ;incstack = 0
  1324                           ; Regs used in _spiReceiveWait: []
  1325                           
  1326     03BE                     l155:	
  1327                           ;SPI.c: 22:     while ( !SSPSTATbits.BF );
  1328                           
  1329     03BE  1683               	bsf	3,5	;RP0=1, select bank1
  1330     03BF  1303               	bcf	3,6	;RP1=0, select bank1
  1331     03C0  1C14               	btfss	20,0	;volatile
  1332     03C1  2BC3               	goto	u401
  1333     03C2  2BC4               	goto	u400
  1334     03C3                     u401:
  1335     03C3  2BBE               	goto	l155
  1336     03C4                     u400:
  1337     03C4                     l158:
  1338     03C4  0008               	return
  1339     03C5                     __end_of_spiReceiveWait:
  1340                           
  1341                           	psect	text4
  1342     042D                     __ptext4:	
  1343 ;; *************** function _setup *****************
  1344 ;; Defined at:
  1345 ;;		line 146 in file "main.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 1
  1366 ;; This function calls:
  1367 ;;		_spiInit
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373     042D                     _setup:	
  1374                           ;psect for function _setup
  1375                           
  1376     042D                     l1071:	
  1377                           ;incstack = 0
  1378                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1379                           
  1380                           
  1381                           ;main.c: 147:     ANSEL = 0;
  1382     042D  1683               	bsf	3,5	;RP0=1, select bank3
  1383     042E  1703               	bsf	3,6	;RP1=1, select bank3
  1384     042F  0188               	clrf	8	;volatile
  1385                           
  1386                           ;main.c: 148:     ANSELH = 0;
  1387     0430  0189               	clrf	9	;volatile
  1388                           
  1389                           ;main.c: 149:     TRISB = 0;
  1390     0431  1683               	bsf	3,5	;RP0=1, select bank1
  1391     0432  1303               	bcf	3,6	;RP1=0, select bank1
  1392     0433  0186               	clrf	6	;volatile
  1393                           
  1394                           ;main.c: 150:     TRISD = 0;
  1395     0434  0188               	clrf	8	;volatile
  1396                           
  1397                           ;main.c: 151:     PORTB = 0;
  1398     0435  1283               	bcf	3,5	;RP0=0, select bank0
  1399     0436  1303               	bcf	3,6	;RP1=0, select bank0
  1400     0437  0186               	clrf	6	;volatile
  1401                           
  1402                           ;main.c: 152:     PORTD = 0;
  1403     0438  0188               	clrf	8	;volatile
  1404     0439                     l1073:
  1405                           
  1406                           ;main.c: 153:     TRISCbits.TRISC2 = 0;
  1407     0439  1683               	bsf	3,5	;RP0=1, select bank1
  1408     043A  1303               	bcf	3,6	;RP1=0, select bank1
  1409     043B  1107               	bcf	7,2	;volatile
  1410     043C                     l1075:
  1411                           
  1412                           ;main.c: 154:     TRISCbits.TRISC1 = 0;
  1413     043C  1087               	bcf	7,1	;volatile
  1414     043D                     l1077:
  1415                           
  1416                           ;main.c: 155:     PORTCbits.RC2 = 1;
  1417     043D  1283               	bcf	3,5	;RP0=0, select bank0
  1418     043E  1303               	bcf	3,6	;RP1=0, select bank0
  1419     043F  1507               	bsf	7,2	;volatile
  1420     0440                     l1079:
  1421                           
  1422                           ;main.c: 156:     OSCCONbits.IRCF = 0b110;
  1423     0440  1683               	bsf	3,5	;RP0=1, select bank1
  1424     0441  1303               	bcf	3,6	;RP1=0, select bank1
  1425     0442  080F               	movf	15,w	;volatile
  1426     0443  398F               	andlw	-113
  1427     0444  3860               	iorlw	96
  1428     0445  008F               	movwf	15	;volatile
  1429     0446                     l1081:
  1430                           
  1431                           ;main.c: 157:     OSCCONbits.SCS = 1;
  1432     0446  140F               	bsf	15,0	;volatile
  1433     0447                     l1083:
  1434                           
  1435                           ;main.c: 158:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1436     0447  01F0               	clrf	spiInit@sDataSample
  1437     0448  01F1               	clrf	spiInit@sClockIdle
  1438     0449  01F2               	clrf	spiInit@sTransmitEdge
  1439     044A  3020               	movlw	32
  1440     044B  120A  118A  23DB  120A  118A  	fcall	_spiInit
  1441     0450                     l80:
  1442     0450  0008               	return
  1443     0451                     __end_of_setup:
  1444                           
  1445                           	psect	text5
  1446     03DB                     __ptext5:	
  1447 ;; *************** function _spiInit *****************
  1448 ;; Defined at:
  1449 ;;		line 3 in file "SPI.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  sType           1    wreg     enum E1292
  1452 ;;  sDataSample     1    0[COMMON] enum E1300
  1453 ;;  sClockIdle      1    1[COMMON] enum E1304
  1454 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  sType           1    3[COMMON] enum E1292
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         3       0       0       0       0
  1467 ;;      Locals:         1       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0
  1469 ;;      Totals:         4       0       0       0       0
  1470 ;;Total ram usage:        4 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_setup
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479     03DB                     _spiInit:	
  1480                           ;psect for function _spiInit
  1481                           
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1485                           ;spiInit@sType stored from wreg
  1486     03DB  00F3               	movwf	spiInit@sType
  1487     03DC                     l1049:
  1488                           
  1489                           ;SPI.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 4: {;SPI.c: 5:     TRISC5 = 0;
  1490     03DC  1683               	bsf	3,5	;RP0=1, select bank1
  1491     03DD  1303               	bcf	3,6	;RP1=0, select bank1
  1492     03DE  1287               	bcf	7,5	;volatile
  1493                           
  1494                           ;SPI.c: 6:     if(sType & 0b00000100)
  1495     03DF  1D73               	btfss	spiInit@sType,2
  1496     03E0  2BE2               	goto	u391
  1497     03E1  2BE3               	goto	u390
  1498     03E2                     u391:
  1499     03E2  2BE7               	goto	l1055
  1500     03E3                     u390:
  1501     03E3                     l1051:
  1502                           
  1503                           ;SPI.c: 7:     {;SPI.c: 8:         SSPSTAT = sTransmitEdge;
  1504     03E3  0872               	movf	spiInit@sTransmitEdge,w
  1505     03E4  0094               	movwf	20	;volatile
  1506     03E5                     l1053:
  1507                           
  1508                           ;SPI.c: 9:         TRISC3 = 1;
  1509     03E5  1587               	bsf	7,3	;volatile
  1510                           
  1511                           ;SPI.c: 10:     }
  1512     03E6  2BEB               	goto	l151
  1513     03E7                     l1055:
  1514                           
  1515                           ;SPI.c: 12:     {;SPI.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1516     03E7  0870               	movf	spiInit@sDataSample,w
  1517     03E8  0472               	iorwf	spiInit@sTransmitEdge,w
  1518     03E9  0094               	movwf	20	;volatile
  1519     03EA                     l1057:
  1520                           
  1521                           ;SPI.c: 14:         TRISC3 = 0;
  1522     03EA  1187               	bcf	7,3	;volatile
  1523     03EB                     l151:	
  1524                           ;SPI.c: 15:     }
  1525                           
  1526                           
  1527                           ;SPI.c: 17:     SSPCON = sType | sClockIdle;
  1528     03EB  0873               	movf	spiInit@sType,w
  1529     03EC  0471               	iorwf	spiInit@sClockIdle,w
  1530     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1531     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1532     03EF  0094               	movwf	20	;volatile
  1533     03F0                     l152:
  1534     03F0  0008               	return
  1535     03F1                     __end_of_spiInit:
  1536                           
  1537                           	psect	text6
  1538     04EF                     __ptext6:	
  1539 ;; *************** function ___awmod *****************
  1540 ;; Defined at:
  1541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  divisor         2    9[COMMON] int 
  1544 ;;  dividend        2   11[COMMON] int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  sign            1    1[BANK0 ] unsigned char 
  1547 ;;  counter         1    0[BANK0 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2    9[COMMON] int 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         4       0       0       0       0
  1558 ;;      Locals:         0       2       0       0       0
  1559 ;;      Temps:          1       0       0       0       0
  1560 ;;      Totals:         5       2       0       0       0
  1561 ;;Total ram usage:        7 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570     04EF                     ___awmod:	
  1571                           ;psect for function ___awmod
  1572                           
  1573     04EF                     l1177:	
  1574                           ;incstack = 0
  1575                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1576                           
  1577     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1578     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1579     04F1  01AF               	clrf	___awmod@sign
  1580     04F2                     l1179:
  1581     04F2  1FFC               	btfss	___awmod@dividend+1,7
  1582     04F3  2CF5               	goto	u561
  1583     04F4  2CF6               	goto	u560
  1584     04F5                     u561:
  1585     04F5  2CFD               	goto	l1185
  1586     04F6                     u560:
  1587     04F6                     l1181:
  1588     04F6  09FB               	comf	___awmod@dividend,f
  1589     04F7  09FC               	comf	___awmod@dividend+1,f
  1590     04F8  0AFB               	incf	___awmod@dividend,f
  1591     04F9  1903               	skipnz
  1592     04FA  0AFC               	incf	___awmod@dividend+1,f
  1593     04FB                     l1183:
  1594     04FB  01AF               	clrf	___awmod@sign
  1595     04FC  0AAF               	incf	___awmod@sign,f
  1596     04FD                     l1185:
  1597     04FD  1FFA               	btfss	___awmod@divisor+1,7
  1598     04FE  2D00               	goto	u571
  1599     04FF  2D01               	goto	u570
  1600     0500                     u571:
  1601     0500  2D06               	goto	l1189
  1602     0501                     u570:
  1603     0501                     l1187:
  1604     0501  09F9               	comf	___awmod@divisor,f
  1605     0502  09FA               	comf	___awmod@divisor+1,f
  1606     0503  0AF9               	incf	___awmod@divisor,f
  1607     0504  1903               	skipnz
  1608     0505  0AFA               	incf	___awmod@divisor+1,f
  1609     0506                     l1189:
  1610     0506  0879               	movf	___awmod@divisor,w
  1611     0507  047A               	iorwf	___awmod@divisor+1,w
  1612     0508  1903               	btfsc	3,2
  1613     0509  2D0B               	goto	u581
  1614     050A  2D0C               	goto	u580
  1615     050B                     u581:
  1616     050B  2D3B               	goto	l1207
  1617     050C                     u580:
  1618     050C                     l1191:
  1619     050C  01AE               	clrf	___awmod@counter
  1620     050D  0AAE               	incf	___awmod@counter,f
  1621     050E  2D1A               	goto	l1197
  1622     050F                     l1193:
  1623     050F  3001               	movlw	1
  1624     0510                     u595:
  1625     0510  1003               	clrc
  1626     0511  0DF9               	rlf	___awmod@divisor,f
  1627     0512  0DFA               	rlf	___awmod@divisor+1,f
  1628     0513  3EFF               	addlw	-1
  1629     0514  1D03               	skipz
  1630     0515  2D10               	goto	u595
  1631     0516                     l1195:
  1632     0516  3001               	movlw	1
  1633     0517  00FD               	movwf	??___awmod
  1634     0518  087D               	movf	??___awmod,w
  1635     0519  07AE               	addwf	___awmod@counter,f
  1636     051A                     l1197:
  1637     051A  1FFA               	btfss	___awmod@divisor+1,7
  1638     051B  2D1D               	goto	u601
  1639     051C  2D1E               	goto	u600
  1640     051D                     u601:
  1641     051D  2D0F               	goto	l1193
  1642     051E                     u600:
  1643     051E                     l1199:
  1644     051E  087A               	movf	___awmod@divisor+1,w
  1645     051F  027C               	subwf	___awmod@dividend+1,w
  1646     0520  1D03               	skipz
  1647     0521  2D24               	goto	u615
  1648     0522  0879               	movf	___awmod@divisor,w
  1649     0523  027B               	subwf	___awmod@dividend,w
  1650     0524                     u615:
  1651     0524  1C03               	skipc
  1652     0525  2D27               	goto	u611
  1653     0526  2D28               	goto	u610
  1654     0527                     u611:
  1655     0527  2D2E               	goto	l1203
  1656     0528                     u610:
  1657     0528                     l1201:
  1658     0528  0879               	movf	___awmod@divisor,w
  1659     0529  02FB               	subwf	___awmod@dividend,f
  1660     052A  087A               	movf	___awmod@divisor+1,w
  1661     052B  1C03               	skipc
  1662     052C  03FC               	decf	___awmod@dividend+1,f
  1663     052D  02FC               	subwf	___awmod@dividend+1,f
  1664     052E                     l1203:
  1665     052E  3001               	movlw	1
  1666     052F                     u625:
  1667     052F  1003               	clrc
  1668     0530  0CFA               	rrf	___awmod@divisor+1,f
  1669     0531  0CF9               	rrf	___awmod@divisor,f
  1670     0532  3EFF               	addlw	-1
  1671     0533  1D03               	skipz
  1672     0534  2D2F               	goto	u625
  1673     0535                     l1205:
  1674     0535  3001               	movlw	1
  1675     0536  02AE               	subwf	___awmod@counter,f
  1676     0537  1D03               	btfss	3,2
  1677     0538  2D3A               	goto	u631
  1678     0539  2D3B               	goto	u630
  1679     053A                     u631:
  1680     053A  2D1E               	goto	l1199
  1681     053B                     u630:
  1682     053B                     l1207:
  1683     053B  082F               	movf	___awmod@sign,w
  1684     053C  1903               	btfsc	3,2
  1685     053D  2D3F               	goto	u641
  1686     053E  2D40               	goto	u640
  1687     053F                     u641:
  1688     053F  2D45               	goto	l1211
  1689     0540                     u640:
  1690     0540                     l1209:
  1691     0540  09FB               	comf	___awmod@dividend,f
  1692     0541  09FC               	comf	___awmod@dividend+1,f
  1693     0542  0AFB               	incf	___awmod@dividend,f
  1694     0543  1903               	skipnz
  1695     0544  0AFC               	incf	___awmod@dividend+1,f
  1696     0545                     l1211:
  1697     0545  087C               	movf	___awmod@dividend+1,w
  1698     0546  00FA               	movwf	?___awmod+1
  1699     0547  087B               	movf	___awmod@dividend,w
  1700     0548  00F9               	movwf	?___awmod
  1701     0549                     l421:
  1702     0549  0008               	return
  1703     054A                     __end_of___awmod:
  1704                           
  1705                           	psect	text7
  1706     05A7                     __ptext7:	
  1707 ;; *************** function ___awdiv *****************
  1708 ;; Defined at:
  1709 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  divisor         2    0[COMMON] int 
  1712 ;;  dividend        2    2[COMMON] int 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  quotient        2    7[COMMON] int 
  1715 ;;  sign            1    6[COMMON] unsigned char 
  1716 ;;  counter         1    5[COMMON] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    0[COMMON] int 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         4       0       0       0       0
  1727 ;;      Locals:         4       0       0       0       0
  1728 ;;      Temps:          1       0       0       0       0
  1729 ;;      Totals:         9       0       0       0       0
  1730 ;;Total ram usage:        9 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739     05A7                     ___awdiv:	
  1740                           ;psect for function ___awdiv
  1741                           
  1742     05A7                     l1133:	
  1743                           ;incstack = 0
  1744                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1745                           
  1746     05A7  01F6               	clrf	___awdiv@sign
  1747     05A8                     l1135:
  1748     05A8  1FF1               	btfss	___awdiv@divisor+1,7
  1749     05A9  2DAB               	goto	u461
  1750     05AA  2DAC               	goto	u460
  1751     05AB                     u461:
  1752     05AB  2DB3               	goto	l1141
  1753     05AC                     u460:
  1754     05AC                     l1137:
  1755     05AC  09F0               	comf	___awdiv@divisor,f
  1756     05AD  09F1               	comf	___awdiv@divisor+1,f
  1757     05AE  0AF0               	incf	___awdiv@divisor,f
  1758     05AF  1903               	skipnz
  1759     05B0  0AF1               	incf	___awdiv@divisor+1,f
  1760     05B1                     l1139:
  1761     05B1  01F6               	clrf	___awdiv@sign
  1762     05B2  0AF6               	incf	___awdiv@sign,f
  1763     05B3                     l1141:
  1764     05B3  1FF3               	btfss	___awdiv@dividend+1,7
  1765     05B4  2DB6               	goto	u471
  1766     05B5  2DB7               	goto	u470
  1767     05B6                     u471:
  1768     05B6  2DC0               	goto	l1147
  1769     05B7                     u470:
  1770     05B7                     l1143:
  1771     05B7  09F2               	comf	___awdiv@dividend,f
  1772     05B8  09F3               	comf	___awdiv@dividend+1,f
  1773     05B9  0AF2               	incf	___awdiv@dividend,f
  1774     05BA  1903               	skipnz
  1775     05BB  0AF3               	incf	___awdiv@dividend+1,f
  1776     05BC                     l1145:
  1777     05BC  3001               	movlw	1
  1778     05BD  00F4               	movwf	??___awdiv
  1779     05BE  0874               	movf	??___awdiv,w
  1780     05BF  06F6               	xorwf	___awdiv@sign,f
  1781     05C0                     l1147:
  1782     05C0  01F7               	clrf	___awdiv@quotient
  1783     05C1  01F8               	clrf	___awdiv@quotient+1
  1784     05C2                     l1149:
  1785     05C2  0870               	movf	___awdiv@divisor,w
  1786     05C3  0471               	iorwf	___awdiv@divisor+1,w
  1787     05C4  1903               	btfsc	3,2
  1788     05C5  2DC7               	goto	u481
  1789     05C6  2DC8               	goto	u480
  1790     05C7                     u481:
  1791     05C7  2DFF               	goto	l1169
  1792     05C8                     u480:
  1793     05C8                     l1151:
  1794     05C8  01F5               	clrf	___awdiv@counter
  1795     05C9  0AF5               	incf	___awdiv@counter,f
  1796     05CA  2DD6               	goto	l1157
  1797     05CB                     l1153:
  1798     05CB  3001               	movlw	1
  1799     05CC                     u495:
  1800     05CC  1003               	clrc
  1801     05CD  0DF0               	rlf	___awdiv@divisor,f
  1802     05CE  0DF1               	rlf	___awdiv@divisor+1,f
  1803     05CF  3EFF               	addlw	-1
  1804     05D0  1D03               	skipz
  1805     05D1  2DCC               	goto	u495
  1806     05D2                     l1155:
  1807     05D2  3001               	movlw	1
  1808     05D3  00F4               	movwf	??___awdiv
  1809     05D4  0874               	movf	??___awdiv,w
  1810     05D5  07F5               	addwf	___awdiv@counter,f
  1811     05D6                     l1157:
  1812     05D6  1FF1               	btfss	___awdiv@divisor+1,7
  1813     05D7  2DD9               	goto	u501
  1814     05D8  2DDA               	goto	u500
  1815     05D9                     u501:
  1816     05D9  2DCB               	goto	l1153
  1817     05DA                     u500:
  1818     05DA                     l1159:
  1819     05DA  3001               	movlw	1
  1820     05DB                     u515:
  1821     05DB  1003               	clrc
  1822     05DC  0DF7               	rlf	___awdiv@quotient,f
  1823     05DD  0DF8               	rlf	___awdiv@quotient+1,f
  1824     05DE  3EFF               	addlw	-1
  1825     05DF  1D03               	skipz
  1826     05E0  2DDB               	goto	u515
  1827     05E1  0871               	movf	___awdiv@divisor+1,w
  1828     05E2  0273               	subwf	___awdiv@dividend+1,w
  1829     05E3  1D03               	skipz
  1830     05E4  2DE7               	goto	u525
  1831     05E5  0870               	movf	___awdiv@divisor,w
  1832     05E6  0272               	subwf	___awdiv@dividend,w
  1833     05E7                     u525:
  1834     05E7  1C03               	skipc
  1835     05E8  2DEA               	goto	u521
  1836     05E9  2DEB               	goto	u520
  1837     05EA                     u521:
  1838     05EA  2DF2               	goto	l1165
  1839     05EB                     u520:
  1840     05EB                     l1161:
  1841     05EB  0870               	movf	___awdiv@divisor,w
  1842     05EC  02F2               	subwf	___awdiv@dividend,f
  1843     05ED  0871               	movf	___awdiv@divisor+1,w
  1844     05EE  1C03               	skipc
  1845     05EF  03F3               	decf	___awdiv@dividend+1,f
  1846     05F0  02F3               	subwf	___awdiv@dividend+1,f
  1847     05F1                     l1163:
  1848     05F1  1477               	bsf	___awdiv@quotient,0
  1849     05F2                     l1165:
  1850     05F2  3001               	movlw	1
  1851     05F3                     u535:
  1852     05F3  1003               	clrc
  1853     05F4  0CF1               	rrf	___awdiv@divisor+1,f
  1854     05F5  0CF0               	rrf	___awdiv@divisor,f
  1855     05F6  3EFF               	addlw	-1
  1856     05F7  1D03               	skipz
  1857     05F8  2DF3               	goto	u535
  1858     05F9                     l1167:
  1859     05F9  3001               	movlw	1
  1860     05FA  02F5               	subwf	___awdiv@counter,f
  1861     05FB  1D03               	btfss	3,2
  1862     05FC  2DFE               	goto	u541
  1863     05FD  2DFF               	goto	u540
  1864     05FE                     u541:
  1865     05FE  2DDA               	goto	l1159
  1866     05FF                     u540:
  1867     05FF                     l1169:
  1868     05FF  0876               	movf	___awdiv@sign,w
  1869     0600  1903               	btfsc	3,2
  1870     0601  2E03               	goto	u551
  1871     0602  2E04               	goto	u550
  1872     0603                     u551:
  1873     0603  2E09               	goto	l1173
  1874     0604                     u550:
  1875     0604                     l1171:
  1876     0604  09F7               	comf	___awdiv@quotient,f
  1877     0605  09F8               	comf	___awdiv@quotient+1,f
  1878     0606  0AF7               	incf	___awdiv@quotient,f
  1879     0607  1903               	skipnz
  1880     0608  0AF8               	incf	___awdiv@quotient+1,f
  1881     0609                     l1173:
  1882     0609  0878               	movf	___awdiv@quotient+1,w
  1883     060A  00F1               	movwf	?___awdiv+1
  1884     060B  0877               	movf	___awdiv@quotient,w
  1885     060C  00F0               	movwf	?___awdiv
  1886     060D                     l408:
  1887     060D  0008               	return
  1888     060E                     __end_of___awdiv:
  1889                           
  1890                           	psect	text8
  1891     0451                     __ptext8:	
  1892 ;; *************** function _Lcd_Write_String *****************
  1893 ;; Defined at:
  1894 ;;		line 88 in file "LCD.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  a               1    wreg     PTR unsigned char 
  1897 ;;		 -> STR_1(18), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  a               1    7[COMMON] PTR unsigned char 
  1900 ;;		 -> STR_1(18), 
  1901 ;;  i               2    5[COMMON] int 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         3       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0
  1914 ;;      Totals:         3       0       0       0       0
  1915 ;;Total ram usage:        3 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 2
  1918 ;; This function calls:
  1919 ;;		_Lcd_Write_Char
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     0451                     _Lcd_Write_String:	
  1926                           ;psect for function _Lcd_Write_String
  1927                           
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1931                           ;Lcd_Write_String@a stored from wreg
  1932     0451  00F7               	movwf	Lcd_Write_String@a
  1933     0452                     l1117:
  1934                           
  1935                           ;LCD.c: 89:     int i;;LCD.c: 90:     for (i = 0; a[i] != '\0'; i++)
  1936     0452  01F5               	clrf	Lcd_Write_String@i
  1937     0453  01F6               	clrf	Lcd_Write_String@i+1
  1938     0454  2C68               	goto	l1123
  1939     0455                     l1119:
  1940                           
  1941                           ;LCD.c: 91:         Lcd_Write_Char(a[i]);
  1942     0455  0875               	movf	Lcd_Write_String@i,w
  1943     0456  0777               	addwf	Lcd_Write_String@a,w
  1944     0457  0084               	movwf	4
  1945     0458  120A  118A  2003  120A  118A  	fcall	stringdir
  1946     045D  120A  118A  2476  120A  118A  	fcall	_Lcd_Write_Char
  1947     0462                     l1121:
  1948     0462  3001               	movlw	1
  1949     0463  07F5               	addwf	Lcd_Write_String@i,f
  1950     0464  1803               	skipnc
  1951     0465  0AF6               	incf	Lcd_Write_String@i+1,f
  1952     0466  3000               	movlw	0
  1953     0467  07F6               	addwf	Lcd_Write_String@i+1,f
  1954     0468                     l1123:
  1955     0468  0875               	movf	Lcd_Write_String@i,w
  1956     0469  0777               	addwf	Lcd_Write_String@a,w
  1957     046A  0084               	movwf	4
  1958     046B  120A  118A  2003  120A  118A  	fcall	stringdir
  1959     0470  3A00               	xorlw	0
  1960     0471  1D03               	skipz
  1961     0472  2C74               	goto	u451
  1962     0473  2C75               	goto	u450
  1963     0474                     u451:
  1964     0474  2C55               	goto	l1119
  1965     0475                     u450:
  1966     0475                     l129:
  1967     0475  0008               	return
  1968     0476                     __end_of_Lcd_Write_String:
  1969                           
  1970                           	psect	text9
  1971     0476                     __ptext9:	
  1972 ;; *************** function _Lcd_Write_Char *****************
  1973 ;; Defined at:
  1974 ;;		line 73 in file "LCD.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  a               1    wreg     unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  a               1    4[COMMON] unsigned char 
  1979 ;;  y               1    3[COMMON] unsigned char 
  1980 ;;  temp            1    2[COMMON] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       0       0       0       0
  1991 ;;      Locals:         3       0       0       0       0
  1992 ;;      Temps:          1       0       0       0       0
  1993 ;;      Totals:         4       0       0       0       0
  1994 ;;Total ram usage:        4 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 1
  1997 ;; This function calls:
  1998 ;;		_Lcd_Port
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;;		_Lcd_Write_String
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005     0476                     _Lcd_Write_Char:	
  2006                           ;psect for function _Lcd_Write_Char
  2007                           
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2011                           ;Lcd_Write_Char@a stored from wreg
  2012     0476  00F4               	movwf	Lcd_Write_Char@a
  2013     0477                     l1029:
  2014                           
  2015                           ;LCD.c: 74:     char temp, y;;LCD.c: 75:     temp = a & 0x0F;
  2016     0477  0874               	movf	Lcd_Write_Char@a,w
  2017     0478  390F               	andlw	15
  2018     0479  00F2               	movwf	Lcd_Write_Char@temp
  2019                           
  2020                           ;LCD.c: 76:     y = a & 0xF0;
  2021     047A  0874               	movf	Lcd_Write_Char@a,w
  2022     047B  39F0               	andlw	240
  2023     047C  00F3               	movwf	Lcd_Write_Char@y
  2024     047D                     l1031:
  2025                           
  2026                           ;LCD.c: 77:     PORTDbits.RD2 = 1;
  2027     047D  1283               	bcf	3,5	;RP0=0, select bank0
  2028     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2029     047F  1508               	bsf	8,2	;volatile
  2030     0480                     l1033:
  2031                           
  2032                           ;LCD.c: 78:     Lcd_Port(y >> 4);
  2033     0480  0873               	movf	Lcd_Write_Char@y,w
  2034     0481  00F1               	movwf	??_Lcd_Write_Char
  2035     0482  3004               	movlw	4
  2036     0483                     u385:
  2037     0483  1003               	clrc
  2038     0484  0CF1               	rrf	??_Lcd_Write_Char,f
  2039     0485  3EFF               	addlw	-1
  2040     0486  1D03               	skipz
  2041     0487  2C83               	goto	u385
  2042     0488  0871               	movf	??_Lcd_Write_Char,w
  2043     0489  120A  118A  240B  120A  118A  	fcall	_Lcd_Port
  2044     048E                     l1035:
  2045                           
  2046                           ;LCD.c: 79:     RD3 = 1;
  2047     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2048     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2049     0490  1588               	bsf	8,3	;volatile
  2050     0491                     l1037:
  2051                           
  2052                           ;LCD.c: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2053     0491  300D               	movlw	13
  2054     0492  00F1               	movwf	??_Lcd_Write_Char
  2055     0493                     u717:
  2056     0493  0BF1               	decfsz	??_Lcd_Write_Char,f
  2057     0494  2C93               	goto	u717
  2058     0495                     l1039:
  2059                           
  2060                           ;LCD.c: 81:     RD3 = 0;
  2061     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2062     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2063     0497  1188               	bcf	8,3	;volatile
  2064     0498                     l1041:
  2065                           
  2066                           ;LCD.c: 82:     Lcd_Port(temp);
  2067     0498  0872               	movf	Lcd_Write_Char@temp,w
  2068     0499  120A  118A  240B  120A  118A  	fcall	_Lcd_Port
  2069     049E                     l1043:
  2070                           
  2071                           ;LCD.c: 83:     RD3 = 1;
  2072     049E  1283               	bcf	3,5	;RP0=0, select bank0
  2073     049F  1303               	bcf	3,6	;RP1=0, select bank0
  2074     04A0  1588               	bsf	8,3	;volatile
  2075     04A1                     l1045:
  2076                           
  2077                           ;LCD.c: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2078     04A1  300D               	movlw	13
  2079     04A2  00F1               	movwf	??_Lcd_Write_Char
  2080     04A3                     u727:
  2081     04A3  0BF1               	decfsz	??_Lcd_Write_Char,f
  2082     04A4  2CA3               	goto	u727
  2083     04A5                     l1047:
  2084                           
  2085                           ;LCD.c: 85:     RD3 = 0;
  2086     04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2087     04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2088     04A7  1188               	bcf	8,3	;volatile
  2089     04A8                     l123:
  2090     04A8  0008               	return
  2091     04A9                     __end_of_Lcd_Write_Char:
  2092                           
  2093                           	psect	text10
  2094     04A9                     __ptext10:	
  2095 ;; *************** function _Lcd_Set_Cursor *****************
  2096 ;; Defined at:
  2097 ;;		line 38 in file "LCD.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  a               1    wreg     unsigned char 
  2100 ;;  b               1    4[COMMON] unsigned char 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  a               1    6[COMMON] unsigned char 
  2103 ;;  temp            1    9[COMMON] unsigned char 
  2104 ;;  y               1    8[COMMON] unsigned char 
  2105 ;;  z               1    7[COMMON] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2115 ;;      Params:         1       0       0       0       0
  2116 ;;      Locals:         4       0       0       0       0
  2117 ;;      Temps:          1       0       0       0       0
  2118 ;;      Totals:         6       0       0       0       0
  2119 ;;Total ram usage:        6 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 2
  2122 ;; This function calls:
  2123 ;;		_Lcd_Cmd
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129     04A9                     _Lcd_Set_Cursor:	
  2130                           ;psect for function _Lcd_Set_Cursor
  2131                           
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2135                           ;Lcd_Set_Cursor@a stored from wreg
  2136     04A9  00F6               	movwf	Lcd_Set_Cursor@a
  2137     04AA                     l1097:
  2138                           
  2139                           ;LCD.c: 39:     char temp, z, y;;LCD.c: 40:     if (a == 1) {
  2140     04AA  0376               	decf	Lcd_Set_Cursor@a,w
  2141     04AB  1D03               	btfss	3,2
  2142     04AC  2CAE               	goto	u411
  2143     04AD  2CAF               	goto	u410
  2144     04AE                     u411:
  2145     04AE  2CCC               	goto	l1107
  2146     04AF                     u410:
  2147     04AF                     l1099:
  2148                           
  2149                           ;LCD.c: 41:         temp = 0x80 + b - 1;
  2150     04AF  0874               	movf	Lcd_Set_Cursor@b,w
  2151     04B0  3E7F               	addlw	127
  2152     04B1  00F9               	movwf	Lcd_Set_Cursor@temp
  2153                           
  2154                           ;LCD.c: 42:         z = temp >> 4;
  2155     04B2  0879               	movf	Lcd_Set_Cursor@temp,w
  2156     04B3  00F5               	movwf	??_Lcd_Set_Cursor
  2157     04B4  3004               	movlw	4
  2158     04B5                     u425:
  2159     04B5  1003               	clrc
  2160     04B6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2161     04B7  3EFF               	addlw	-1
  2162     04B8  1D03               	skipz
  2163     04B9  2CB5               	goto	u425
  2164     04BA  0875               	movf	??_Lcd_Set_Cursor,w
  2165     04BB  00F7               	movwf	Lcd_Set_Cursor@z
  2166     04BC                     l1101:
  2167                           
  2168                           ;LCD.c: 43:         y = temp & 0x0F;
  2169     04BC  0879               	movf	Lcd_Set_Cursor@temp,w
  2170     04BD  390F               	andlw	15
  2171     04BE  00F8               	movwf	Lcd_Set_Cursor@y
  2172     04BF                     l1103:
  2173                           
  2174                           ;LCD.c: 44:         Lcd_Cmd(z);
  2175     04BF  0877               	movf	Lcd_Set_Cursor@z,w
  2176     04C0  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2177     04C5                     l1105:
  2178                           
  2179                           ;LCD.c: 45:         Lcd_Cmd(y);
  2180     04C5  0878               	movf	Lcd_Set_Cursor@y,w
  2181     04C6  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2182                           
  2183                           ;LCD.c: 46:     } else if (a == 2) {
  2184     04CB  2CEE               	goto	l117
  2185     04CC                     l1107:
  2186     04CC  3002               	movlw	2
  2187     04CD  0676               	xorwf	Lcd_Set_Cursor@a,w
  2188     04CE  1D03               	btfss	3,2
  2189     04CF  2CD1               	goto	u431
  2190     04D0  2CD2               	goto	u430
  2191     04D1                     u431:
  2192     04D1  2CEE               	goto	l117
  2193     04D2                     u430:
  2194     04D2                     l1109:
  2195                           
  2196                           ;LCD.c: 47:         temp = 0xC0 + b - 1;
  2197     04D2  0874               	movf	Lcd_Set_Cursor@b,w
  2198     04D3  3EBF               	addlw	191
  2199     04D4  00F9               	movwf	Lcd_Set_Cursor@temp
  2200                           
  2201                           ;LCD.c: 48:         z = temp >> 4;
  2202     04D5  0879               	movf	Lcd_Set_Cursor@temp,w
  2203     04D6  00F5               	movwf	??_Lcd_Set_Cursor
  2204     04D7  3004               	movlw	4
  2205     04D8                     u445:
  2206     04D8  1003               	clrc
  2207     04D9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2208     04DA  3EFF               	addlw	-1
  2209     04DB  1D03               	skipz
  2210     04DC  2CD8               	goto	u445
  2211     04DD  0875               	movf	??_Lcd_Set_Cursor,w
  2212     04DE  00F7               	movwf	Lcd_Set_Cursor@z
  2213     04DF                     l1111:
  2214                           
  2215                           ;LCD.c: 49:         y = temp & 0x0F;
  2216     04DF  0879               	movf	Lcd_Set_Cursor@temp,w
  2217     04E0  390F               	andlw	15
  2218     04E1  00F8               	movwf	Lcd_Set_Cursor@y
  2219     04E2                     l1113:
  2220                           
  2221                           ;LCD.c: 50:         Lcd_Cmd(z);
  2222     04E2  0877               	movf	Lcd_Set_Cursor@z,w
  2223     04E3  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2224     04E8                     l1115:
  2225                           
  2226                           ;LCD.c: 51:         Lcd_Cmd(y);
  2227     04E8  0878               	movf	Lcd_Set_Cursor@y,w
  2228     04E9  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2229     04EE                     l117:
  2230     04EE  0008               	return
  2231     04EF                     __end_of_Lcd_Set_Cursor:
  2232                           
  2233                           	psect	text11
  2234     054A                     __ptext11:	
  2235 ;; *************** function _Lcd_Init *****************
  2236 ;; Defined at:
  2237 ;;		line 55 in file "LCD.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          2       0       0       0       0
  2254 ;;      Totals:         2       0       0       0       0
  2255 ;;Total ram usage:        2 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 2
  2258 ;; This function calls:
  2259 ;;		_Lcd_Cmd
  2260 ;;		_Lcd_Port
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266     054A                     _Lcd_Init:	
  2267                           ;psect for function _Lcd_Init
  2268                           
  2269     054A                     l1085:	
  2270                           ;incstack = 0
  2271                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2272                           
  2273                           
  2274                           ;LCD.c: 56:     Lcd_Port(0x00);
  2275     054A  3000               	movlw	0
  2276     054B  120A  118A  240B  120A  118A  	fcall	_Lcd_Port
  2277     0550                     l1087:
  2278                           
  2279                           ;LCD.c: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2280     0550  301A               	movlw	26
  2281     0551  00F5               	movwf	??_Lcd_Init+1
  2282     0552  30F8               	movlw	248
  2283     0553  00F4               	movwf	??_Lcd_Init
  2284     0554                     u737:
  2285     0554  0BF4               	decfsz	??_Lcd_Init,f
  2286     0555  2D54               	goto	u737
  2287     0556  0BF5               	decfsz	??_Lcd_Init+1,f
  2288     0557  2D54               	goto	u737
  2289     0558  0000               	nop
  2290     0559                     l1089:
  2291                           
  2292                           ;LCD.c: 58:     Lcd_Cmd(0x03);
  2293     0559  3003               	movlw	3
  2294     055A  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2295                           
  2296                           ;LCD.c: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2297     055F  3007               	movlw	7
  2298     0560  00F5               	movwf	??_Lcd_Init+1
  2299     0561  307D               	movlw	125
  2300     0562  00F4               	movwf	??_Lcd_Init
  2301     0563                     u747:
  2302     0563  0BF4               	decfsz	??_Lcd_Init,f
  2303     0564  2D63               	goto	u747
  2304     0565  0BF5               	decfsz	??_Lcd_Init+1,f
  2305     0566  2D63               	goto	u747
  2306     0567                     l1091:
  2307                           
  2308                           ;LCD.c: 60:     Lcd_Cmd(0x03);
  2309     0567  3003               	movlw	3
  2310     0568  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2311     056D                     l1093:
  2312                           
  2313                           ;LCD.c: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2314     056D  300F               	movlw	15
  2315     056E  00F5               	movwf	??_Lcd_Init+1
  2316     056F  3047               	movlw	71
  2317     0570  00F4               	movwf	??_Lcd_Init
  2318     0571                     u757:
  2319     0571  0BF4               	decfsz	??_Lcd_Init,f
  2320     0572  2D71               	goto	u757
  2321     0573  0BF5               	decfsz	??_Lcd_Init+1,f
  2322     0574  2D71               	goto	u757
  2323     0575  2D76               	nop2
  2324                           
  2325                           ;LCD.c: 62:     Lcd_Cmd(0x03);
  2326     0576  3003               	movlw	3
  2327     0577  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2328                           
  2329                           ;LCD.c: 64:     Lcd_Cmd(0x02);
  2330     057C  3002               	movlw	2
  2331     057D  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2332                           
  2333                           ;LCD.c: 65:     Lcd_Cmd(0x02);
  2334     0582  3002               	movlw	2
  2335     0583  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2336                           
  2337                           ;LCD.c: 66:     Lcd_Cmd(0x08);
  2338     0588  3008               	movlw	8
  2339     0589  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2340                           
  2341                           ;LCD.c: 67:     Lcd_Cmd(0x00);
  2342     058E  3000               	movlw	0
  2343     058F  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2344                           
  2345                           ;LCD.c: 68:     Lcd_Cmd(0x0C);
  2346     0594  300C               	movlw	12
  2347     0595  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2348                           
  2349                           ;LCD.c: 69:     Lcd_Cmd(0x00);
  2350     059A  3000               	movlw	0
  2351     059B  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2352                           
  2353                           ;LCD.c: 70:     Lcd_Cmd(0x06);
  2354     05A0  3006               	movlw	6
  2355     05A1  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2356     05A6                     l120:
  2357     05A6  0008               	return
  2358     05A7                     __end_of_Lcd_Init:
  2359                           
  2360                           	psect	text12
  2361     03CE                     __ptext12:	
  2362 ;; *************** function _Lcd_Clear *****************
  2363 ;; Defined at:
  2364 ;;		line 33 in file "LCD.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 2
  2385 ;; This function calls:
  2386 ;;		_Lcd_Cmd
  2387 ;; This function is called by:
  2388 ;;		_main
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392     03CE                     _Lcd_Clear:	
  2393                           ;psect for function _Lcd_Clear
  2394                           
  2395     03CE                     l1095:	
  2396                           ;incstack = 0
  2397                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2398                           
  2399                           
  2400                           ;LCD.c: 34:     Lcd_Cmd(0);
  2401     03CE  3000               	movlw	0
  2402     03CF  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2403                           
  2404                           ;LCD.c: 35:     Lcd_Cmd(1);
  2405     03D4  3001               	movlw	1
  2406     03D5  120A  118A  23F1  120A  118A  	fcall	_Lcd_Cmd
  2407     03DA                     l111:
  2408     03DA  0008               	return
  2409     03DB                     __end_of_Lcd_Clear:
  2410                           
  2411                           	psect	text13
  2412     03F1                     __ptext13:	
  2413 ;; *************** function _Lcd_Cmd *****************
  2414 ;; Defined at:
  2415 ;;		line 25 in file "LCD.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  a               1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  a               1    3[COMMON] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         0       0       0       0       0
  2430 ;;      Locals:         1       0       0       0       0
  2431 ;;      Temps:          2       0       0       0       0
  2432 ;;      Totals:         3       0       0       0       0
  2433 ;;Total ram usage:        3 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 1
  2436 ;; This function calls:
  2437 ;;		_Lcd_Port
  2438 ;; This function is called by:
  2439 ;;		_Lcd_Clear
  2440 ;;		_Lcd_Set_Cursor
  2441 ;;		_Lcd_Init
  2442 ;;		_Lcd_Shift_Right
  2443 ;;		_Lcd_Shift_Left
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447     03F1                     _Lcd_Cmd:	
  2448                           ;psect for function _Lcd_Cmd
  2449                           
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2453                           ;Lcd_Cmd@a stored from wreg
  2454     03F1  00F3               	movwf	Lcd_Cmd@a
  2455     03F2                     l1059:
  2456                           
  2457                           ;LCD.c: 26:     PORTDbits.RD2 = 0;
  2458     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2459     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2460     03F4  1108               	bcf	8,2	;volatile
  2461     03F5                     l1061:
  2462                           
  2463                           ;LCD.c: 27:     Lcd_Port(a);
  2464     03F5  0873               	movf	Lcd_Cmd@a,w
  2465     03F6  120A  118A  240B  120A  118A  	fcall	_Lcd_Port
  2466     03FB                     l1063:
  2467                           
  2468                           ;LCD.c: 28:     RD3 = 1;
  2469     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2470     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2471     03FD  1588               	bsf	8,3	;volatile
  2472     03FE                     l1065:
  2473                           
  2474                           ;LCD.c: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2475     03FE  3006               	movlw	6
  2476     03FF  00F2               	movwf	??_Lcd_Cmd+1
  2477     0400  3030               	movlw	48
  2478     0401  00F1               	movwf	??_Lcd_Cmd
  2479     0402                     u767:
  2480     0402  0BF1               	decfsz	??_Lcd_Cmd,f
  2481     0403  2C02               	goto	u767
  2482     0404  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2483     0405  2C02               	goto	u767
  2484     0406  0000               	nop
  2485     0407                     l1067:
  2486                           
  2487                           ;LCD.c: 30:     RD3 = 0;
  2488     0407  1283               	bcf	3,5	;RP0=0, select bank0
  2489     0408  1303               	bcf	3,6	;RP1=0, select bank0
  2490     0409  1188               	bcf	8,3	;volatile
  2491     040A                     l108:
  2492     040A  0008               	return
  2493     040B                     __end_of_Lcd_Cmd:
  2494                           
  2495                           	psect	text14
  2496     040B                     __ptext14:	
  2497 ;; *************** function _Lcd_Port *****************
  2498 ;; Defined at:
  2499 ;;		line 3 in file "LCD.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  a               1    wreg     unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  a               1    0[COMMON] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2513 ;;      Params:         0       0       0       0       0
  2514 ;;      Locals:         1       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0
  2516 ;;      Totals:         1       0       0       0       0
  2517 ;;Total ram usage:        1 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_Lcd_Cmd
  2523 ;;		_Lcd_Init
  2524 ;;		_Lcd_Write_Char
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528     040B                     _Lcd_Port:	
  2529                           ;psect for function _Lcd_Port
  2530                           
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _Lcd_Port: [wreg]
  2534                           ;Lcd_Port@a stored from wreg
  2535     040B  00F0               	movwf	Lcd_Port@a
  2536     040C                     l1019:
  2537                           
  2538                           ;LCD.c: 4:     if (a & 1)
  2539     040C  1C70               	btfss	Lcd_Port@a,0
  2540     040D  2C0F               	goto	u341
  2541     040E  2C10               	goto	u340
  2542     040F                     u341:
  2543     040F  2C14               	goto	l97
  2544     0410                     u340:
  2545     0410                     l1021:
  2546                           
  2547                           ;LCD.c: 5:         RD4 = 1;
  2548     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2549     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2550     0412  1608               	bsf	8,4	;volatile
  2551     0413  2C17               	goto	l98
  2552     0414                     l97:	
  2553                           ;LCD.c: 6:     else
  2554                           
  2555                           
  2556                           ;LCD.c: 7:         RD4 = 0;
  2557     0414  1283               	bcf	3,5	;RP0=0, select bank0
  2558     0415  1303               	bcf	3,6	;RP1=0, select bank0
  2559     0416  1208               	bcf	8,4	;volatile
  2560     0417                     l98:
  2561                           
  2562                           ;LCD.c: 9:     if (a & 2)
  2563     0417  1CF0               	btfss	Lcd_Port@a,1
  2564     0418  2C1A               	goto	u351
  2565     0419  2C1B               	goto	u350
  2566     041A                     u351:
  2567     041A  2C1D               	goto	l99
  2568     041B                     u350:
  2569     041B                     l1023:
  2570                           
  2571                           ;LCD.c: 10:         RD5 = 1;
  2572     041B  1688               	bsf	8,5	;volatile
  2573     041C  2C1E               	goto	l100
  2574     041D                     l99:	
  2575                           ;LCD.c: 11:     else
  2576                           
  2577                           
  2578                           ;LCD.c: 12:         RD5 = 0;
  2579     041D  1288               	bcf	8,5	;volatile
  2580     041E                     l100:
  2581                           
  2582                           ;LCD.c: 14:     if (a & 4)
  2583     041E  1D70               	btfss	Lcd_Port@a,2
  2584     041F  2C21               	goto	u361
  2585     0420  2C22               	goto	u360
  2586     0421                     u361:
  2587     0421  2C24               	goto	l101
  2588     0422                     u360:
  2589     0422                     l1025:
  2590                           
  2591                           ;LCD.c: 15:         RD6 = 1;
  2592     0422  1708               	bsf	8,6	;volatile
  2593     0423  2C25               	goto	l102
  2594     0424                     l101:	
  2595                           ;LCD.c: 16:     else
  2596                           
  2597                           
  2598                           ;LCD.c: 17:         RD6 = 0;
  2599     0424  1308               	bcf	8,6	;volatile
  2600     0425                     l102:
  2601                           
  2602                           ;LCD.c: 19:     if (a & 8)
  2603     0425  1DF0               	btfss	Lcd_Port@a,3
  2604     0426  2C28               	goto	u371
  2605     0427  2C29               	goto	u370
  2606     0428                     u371:
  2607     0428  2C2B               	goto	l103
  2608     0429                     u370:
  2609     0429                     l1027:
  2610                           
  2611                           ;LCD.c: 20:         RD7 = 1;
  2612     0429  1788               	bsf	8,7	;volatile
  2613     042A  2C2C               	goto	l105
  2614     042B                     l103:	
  2615                           ;LCD.c: 21:     else
  2616                           
  2617                           
  2618                           ;LCD.c: 22:         RD7 = 0;
  2619     042B  1388               	bcf	8,7	;volatile
  2620     042C                     l105:
  2621     042C  0008               	return
  2622     042D                     __end_of_Lcd_Port:
  2623     007E                     btemp	set	126	;btemp
  2624     007E                     wtemp0	set	126
  2625                           
  2626                           	psect	idloc
  2627                           
  2628                           ;Config register IDLOC0 @ 0x2000
  2629                           ;	unspecified, using default values
  2630     2000                     	org	8192
  2631     2000  3FFF               	dw	16383
  2632                           
  2633                           ;Config register IDLOC1 @ 0x2001
  2634                           ;	unspecified, using default values
  2635     2001                     	org	8193
  2636     2001  3FFF               	dw	16383
  2637                           
  2638                           ;Config register IDLOC2 @ 0x2002
  2639                           ;	unspecified, using default values
  2640     2002                     	org	8194
  2641     2002  3FFF               	dw	16383
  2642                           
  2643                           ;Config register IDLOC3 @ 0x2003
  2644                           ;	unspecified, using default values
  2645     2003                     	org	8195
  2646     2003  3FFF               	dw	16383
  2647                           
  2648                           	psect	config
  2649                           
  2650                           ;Config register CONFIG1 @ 0x2007
  2651                           ;	Oscillator Selection bits
  2652                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2653                           ;	Watchdog Timer Enable bit
  2654                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2655                           ;	Power-up Timer Enable bit
  2656                           ;	PWRTE = OFF, PWRT disabled
  2657                           ;	RE3/MCLR pin function select bit
  2658                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2659                           ;	Code Protection bit
  2660                           ;	CP = OFF, Program memory code protection is disabled
  2661                           ;	Data Code Protection bit
  2662                           ;	CPD = OFF, Data memory code protection is disabled
  2663                           ;	Brown Out Reset Selection bits
  2664                           ;	BOREN = OFF, BOR disabled
  2665                           ;	Internal External Switchover bit
  2666                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2667                           ;	Fail-Safe Clock Monitor Enabled bit
  2668                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2669                           ;	Low Voltage Programming Enable bit
  2670                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2671                           ;	In-Circuit Debugger Mode bit
  2672                           ;	DEBUG = 0x1, unprogrammed default
  2673     2007                     	org	8199
  2674     2007  20D6               	dw	8406
  2675                           
  2676                           ;Config register CONFIG2 @ 0x2008
  2677                           ;	Brown-out Reset Selection bit
  2678                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2679                           ;	Flash Program Memory Self Write Enable bits
  2680                           ;	WRT = OFF, Write protection off
  2681     2008                     	org	8200
  2682     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _setup->_spiInit
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4273
                                              2 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1208
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 23:07:17 2023

                       pc 0002               _SSPSTATbits 0094                        l80 0450  
                      l97 0414                        l98 0417                        l99 041D  
            ___awdiv@sign 0076                        fsr 0004                       l100 041E  
                     l101 0424                       l102 0425                       l103 042B  
                     l111 03DA                       l120 05A6                       l105 042C  
                     l123 04A8                       l108 040A                       l117 04EE  
                     l151 03EB                       l152 03F0                       l129 0475  
                     l161 03BD                       l155 03BE                       l421 0549  
                     l158 03C4                       _ADC 002D                       l408 060D  
                     l169 03CD                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u400 03C4                       u401 03C3                       u410 04AF  
                     u411 04AE                       u340 0410                       u500 05DA  
                     u341 040F                       u501 05D9                       u350 041B  
                     u430 04D2                       u351 041A                       u431 04D1  
                     u360 0422                       u520 05EB                       u600 051E  
                     u361 0421                       u425 04B5                       u521 05EA  
                     u601 051D                       u370 0429                       u450 0475  
                     u610 0528                       u371 0428                       u451 0474  
                     u515 05DB                       u611 0527                       u540 05FF  
                     u460 05AC                       u445 04D8                       u541 05FE  
                     u525 05E7                       u461 05AB                       u550 0604  
                     u470 05B7                       u630 053B                       u390 03E3  
                     u551 0603                       u535 05F3                       u471 05B6  
                     u631 053A                       u615 0524                       u391 03E2  
                     u480 05C8                       u640 0540                       u560 04F6  
                     u385 0483                       u481 05C7                       u641 053F  
                     u625 052F                       u561 04F5                       u570 0501  
                     u650 06DE                       u571 0500                       u707 0705  
                     u651 06DD                       u580 050C                       u660 06F3  
                     u717 0493                       u581 050B                       u661 06F2  
                     u727 04A3                       u495 05CC                       u737 0554  
                     u747 0563                       u595 0510                       u757 0571  
                     u677 0632                       u767 0402                       u687 064A  
                     u697 06C4                       fsr0 0004              ___awmod@sign 002F  
                    l1021 0410                      l1101 04BC                      l1023 041B  
                    l1111 04DF                      l1103 04BF                      l1031 047D  
                    l1025 0422                      l1113 04E2                      l1105 04C5  
                    l1041 0498                      l1033 0480                      l1121 0462  
                    l1201 0528                      l1027 0429                      l1019 040C  
                    l1115 04E8                      l1107 04CC                      l1043 049E  
                    l1035 048E                      l1123 0468                      l1211 0545  
                    l1203 052E                      l1051 03E3                      l1061 03F5  
                    l1109 04D2                      l1045 04A1                      l1037 0491  
                    l1029 0477                      l1117 0452                      l1141 05B3  
                    l1133 05A7                      l1205 0535                      l1053 03E5  
                    l1125 03B9                      l1221 062E                      l1063 03FB  
                    l1047 04A5                      l1039 0495                      l1119 0455  
                    l1151 05C8                      l1143 05B7                      l1135 05A8  
                    l1207 053B                      l1055 03E7                      l1071 042D  
                    l1127 03C5                      l1231 0651                      l1223 0636  
                    l1215 060E                      l1065 03FE                      l1161 05EB  
                    l1153 05CB                      l1145 05BC                      l1137 05AC  
                    l1209 0540                      l1057 03EA                      l1049 03DC  
                    l1081 0446                      l1073 0439                      l1129 03CA  
                    l1241 06AB                      l1233 0665                      l1225 063E  
                    l1217 0625                      l1067 0407                      l1059 03F2  
                    l1091 0567                      l1171 0604                      l1163 05F1  
                    l1155 05D2                      l1147 05C0                      l1139 05B1  
                    l1083 0447                      l1075 043C                      l1251 06D0  
                    l1243 06B4                      l1235 0686                      l1227 0646  
                    l1219 062B                      l1093 056D                      l1085 054A  
                    l1173 0609                      l1165 05F2                      l1157 05D6  
                    l1149 05C2                      l1181 04F6                      l1077 043D  
                    l1069 03BE                      l1261 0701                      l1253 06D8  
                    l1245 06BD                      l1237 069A                      l1229 064E  
                    l1095 03CE                      l1087 0550                      l1167 05F9  
                    l1159 05DA                      l1191 050C                      l1183 04FB  
                    l1079 0440                      l1263 0709                      l1255 06DE  
                    l1247 06C0                      l1239 06A2                      l1089 0559  
                    l1097 04AA                      l1169 05FF                      l1193 050F  
                    l1185 04FD                      l1177 04EF                      l1265 070C  
                    l1257 06ED                      l1249 06C8                      l1099 04AF  
                    l1195 0516                      l1187 0501                      l1179 04F2  
                    l1259 06F3                      l1197 051A                      l1189 0506  
                    l1199 051E                      _ADC1 002C                      STR_1 0009  
       ?_Lcd_Write_String 0070                      _main 060E                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 040B  
                   ?_main 0070           __end_of___awdiv 060E           __end_of___awmod 054A  
                   _ANSEL 0188           ___awdiv@divisor 0070           ___awdiv@counter 0075  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _valor 0029                     _setup 042D  
                   pclath 000A           __end_of_spiInit 03F1           __end_of_spiRead 03CE  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 05A7  
        __end_of_Lcd_Port 042D           __initialization 07EC              __end_of_main 07EC  
                  ??_main 0030          ___awdiv@dividend 0072                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
               ??___awdiv 0074                 ??___awmod 007D          ___awdiv@quotient 0077  
         ___awmod@divisor 0079           ___awmod@counter 002E                    _unidad 0026  
        __end_of_spiWrite 03BE                 ??_spiInit 0073                 ??_spiRead 0070  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 03DB  
          __pcstackCOMMON 0070             __end_of_setup 0451            _Lcd_Set_Cursor 04A9  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0074  
              __pbssBANK0 0020                __pmaintext 060E    __end_of_Lcd_Set_Cursor 04EF  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPSTAT 0094  
              __stringtab 0003            _Lcd_Write_Char 0476                   _Lcd_Cmd 03F1  
               ?_spiWrite 0070                   ___awdiv 05A7                   ___awmod 04EF  
                 _decenas 0027           ?_Lcd_Set_Cursor 0074                   __ptext1 03B8  
                 __ptext2 03C5                   __ptext3 03BE                   __ptext4 042D  
                 __ptext5 03DB                   __ptext6 04EF                   __ptext7 05A7  
                 __ptext8 0451                   __ptext9 0476          ___awmod@dividend 007B  
                 _spiInit 03DB                   _spiRead 03C5                   _unidad1 0023  
                 _unidad2 0020    __end_of_Lcd_Write_Char 04A9      end_of_initialization 07FC  
              ??_spiWrite 0070                 Lcd_Port@a 0070                 _PORTCbits 0007  
               _PORTDbits 0008                 _TRISCbits 0087               spiWrite@dat 0070  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077         Lcd_Write_String@i 0075  
               _Lcd_Clear 03CE            _spiReceiveWait 03BE          _Lcd_Write_String 0451  
     start_initialization 07EC    __end_of_spiReceiveWait 03C5                ?_Lcd_Clear 0070  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                 ___latbits 0002  
           __pcstackBANK0 002E                  ?_Lcd_Cmd 0070           ?_spiReceiveWait 0070  
               _centenas1 0025                 _centenas2 0022          ??_Lcd_Set_Cursor 0075  
                ?___awdiv 0070                  ?___awmod 0079                 __pstrings 0003  
                ?_spiInit 0070                  ?_spiRead 0070      spiInit@sTransmitEdge 0072  
      spiInit@sDataSample 0070                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
             __stringbase 0008          ??_Lcd_Write_Char 0071                  _Lcd_Init 054A  
                _Lcd_Port 040B  __end_of_Lcd_Write_String 0476        __end_of__stringtab 0009  
                _decenas1 0024                  _decenas2 0021                  _centenas 0028  
                __ptext10 04A9                  __ptext11 054A                  __ptext12 03CE  
                __ptext13 03F1                  __ptext14 040B                  _contador 002B  
                _spiWrite 03B8              spiInit@sType 0073         spiInit@sClockIdle 0071  
      Lcd_Write_Char@temp 0072          ??_spiReceiveWait 0070                 stringcode 0003  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079                  stringdir 0003  
                stringtab 0003              _verificacion 002A  
