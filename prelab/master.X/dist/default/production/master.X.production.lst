

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 13:01:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     008F                     	;# 
   108     0090                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0095                     	;# 
   116     0096                     	;# 
   117     0097                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     0105                     	;# 
   127     0107                     	;# 
   128     0108                     	;# 
   129     0109                     	;# 
   130     010C                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0185                     	;# 
   136     0187                     	;# 
   137     0188                     	;# 
   138     0189                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     008F                     	;# 
   186     0090                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0095                     	;# 
   194     0096                     	;# 
   195     0097                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009A                     	;# 
   199     009B                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009E                     	;# 
   203     009F                     	;# 
   204     0105                     	;# 
   205     0107                     	;# 
   206     0108                     	;# 
   207     0109                     	;# 
   208     010C                     	;# 
   209     010C                     	;# 
   210     010D                     	;# 
   211     010E                     	;# 
   212     010F                     	;# 
   213     0185                     	;# 
   214     0187                     	;# 
   215     0188                     	;# 
   216     0189                     	;# 
   217     018C                     	;# 
   218     018D                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     000E                     	;# 
   234     000E                     	;# 
   235     000F                     	;# 
   236     0010                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0015                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001B                     	;# 
   250     001C                     	;# 
   251     001D                     	;# 
   252     001E                     	;# 
   253     001F                     	;# 
   254     0081                     	;# 
   255     0085                     	;# 
   256     0086                     	;# 
   257     0087                     	;# 
   258     0088                     	;# 
   259     0089                     	;# 
   260     008C                     	;# 
   261     008D                     	;# 
   262     008E                     	;# 
   263     008F                     	;# 
   264     0090                     	;# 
   265     0091                     	;# 
   266     0092                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0095                     	;# 
   272     0096                     	;# 
   273     0097                     	;# 
   274     0098                     	;# 
   275     0099                     	;# 
   276     009A                     	;# 
   277     009B                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     0105                     	;# 
   283     0107                     	;# 
   284     0108                     	;# 
   285     0109                     	;# 
   286     010C                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     0185                     	;# 
   292     0187                     	;# 
   293     0188                     	;# 
   294     0189                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297     0000                     	;# 
   298     0001                     	;# 
   299     0002                     	;# 
   300     0003                     	;# 
   301     0004                     	;# 
   302     0005                     	;# 
   303     0006                     	;# 
   304     0007                     	;# 
   305     0008                     	;# 
   306     0009                     	;# 
   307     000A                     	;# 
   308     000B                     	;# 
   309     000C                     	;# 
   310     000D                     	;# 
   311     000E                     	;# 
   312     000E                     	;# 
   313     000F                     	;# 
   314     0010                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0013                     	;# 
   318     0014                     	;# 
   319     0015                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0017                     	;# 
   323     0018                     	;# 
   324     0019                     	;# 
   325     001A                     	;# 
   326     001B                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001D                     	;# 
   330     001E                     	;# 
   331     001F                     	;# 
   332     0081                     	;# 
   333     0085                     	;# 
   334     0086                     	;# 
   335     0087                     	;# 
   336     0088                     	;# 
   337     0089                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     008F                     	;# 
   342     0090                     	;# 
   343     0091                     	;# 
   344     0092                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0094                     	;# 
   349     0095                     	;# 
   350     0096                     	;# 
   351     0097                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009A                     	;# 
   355     009B                     	;# 
   356     009C                     	;# 
   357     009D                     	;# 
   358     009E                     	;# 
   359     009F                     	;# 
   360     0105                     	;# 
   361     0107                     	;# 
   362     0108                     	;# 
   363     0109                     	;# 
   364     010C                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     010E                     	;# 
   368     010F                     	;# 
   369     0185                     	;# 
   370     0187                     	;# 
   371     0188                     	;# 
   372     0189                     	;# 
   373     018C                     	;# 
   374     018D                     	;# 
   375     0013                     _SSPBUF	set	19
   376     0014                     _SSPCON	set	20
   377     0008                     _PORTDbits	set	8
   378     0006                     _PORTB	set	6
   379     0008                     _PORTD	set	8
   380     0007                     _PORTCbits	set	7
   381     0043                     _RD3	set	67
   382     0047                     _RD7	set	71
   383     0046                     _RD6	set	70
   384     0045                     _RD5	set	69
   385     0044                     _RD4	set	68
   386     0094                     _SSPSTATbits	set	148
   387     0094                     _SSPSTAT	set	148
   388     008F                     _OSCCONbits	set	143
   389     0087                     _TRISCbits	set	135
   390     0088                     _TRISD	set	136
   391     0086                     _TRISB	set	134
   392     043B                     _TRISC3	set	1083
   393     043D                     _TRISC5	set	1085
   394     0189                     _ANSELH	set	393
   395     0188                     _ANSEL	set	392
   396                           
   397                           	psect	strings
   398     0003                     __pstrings:
   399     0003                     stringtab:
   400     0003                     __stringtab:
   401     0003                     stringcode:	
   402                           ;	String table - string pointers are 1 byte each
   403                           
   404     0003                     stringdir:
   405     0003  3000               	movlw	high stringdir
   406     0004  008A               	movwf	10
   407     0005  0804               	movf	4,w
   408     0006  0A84               	incf	4,f
   409     0007  0782               	addwf	2,f
   410     0008                     __stringbase:
   411     0008  3400               	retlw	0
   412     0009                     __end_of__stringtab:
   413     0009                     STR_1:
   414     0009  3441               	retlw	65	;'A'
   415     000A  3444               	retlw	68	;'D'
   416     000B  3443               	retlw	67	;'C'
   417     000C  3420               	retlw	32	;' '
   418     000D  3420               	retlw	32	;' '
   419     000E  3420               	retlw	32	;' '
   420     000F  3441               	retlw	65	;'A'
   421     0010  3444               	retlw	68	;'D'
   422     0011  3443               	retlw	67	;'C'
   423     0012  3432               	retlw	50	;'2'
   424     0013  3400               	retlw	0
   425                           
   426                           	psect	cinit
   427     07F1                     start_initialization:	
   428                           ; #config settings
   429                           
   430     07F1                     __initialization:
   431                           
   432                           ; Clear objects allocated to BANK0
   433     07F1  1283               	bcf	3,5	;RP0=0, select bank0
   434     07F2  1303               	bcf	3,6	;RP1=0, select bank0
   435     07F3  01A0               	clrf	__pbssBANK0& (0+127)
   436     07F4  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   437     07F5  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   438     07F6  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   439     07F7  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   440     07F8  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   441     07F9  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   442     07FA  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   443     07FB  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   444     07FC                     end_of_initialization:	
   445                           ;End of C runtime variable initialization code
   446                           
   447     07FC                     __end_of__initialization:
   448     07FC  0183               	clrf	3
   449     07FD  120A  118A  2EAA   	ljmp	_main	;jump to C main() function
   450                           
   451                           	psect	bssBANK0
   452     0020                     __pbssBANK0:
   453     0020                     _unidad1:
   454     0020                     	ds	1
   455     0021                     _decenas1:
   456     0021                     	ds	1
   457     0022                     _centenas1:
   458     0022                     	ds	1
   459     0023                     _unidad:
   460     0023                     	ds	1
   461     0024                     _decenas:
   462     0024                     	ds	1
   463     0025                     _centenas:
   464     0025                     	ds	1
   465     0026                     _valor:
   466     0026                     	ds	1
   467     0027                     _ADC1:
   468     0027                     	ds	1
   469     0028                     _ADC:
   470     0028                     	ds	1
   471                           
   472                           	psect	cstackCOMMON
   473     0070                     __pcstackCOMMON:
   474     0070                     ?_setup:
   475     0070                     ?_Lcd_Init:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_Lcd_Clear:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ?_Lcd_Write_String:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_spiWrite:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ??_spiWrite:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_spiRead:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ??_spiRead:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_Lcd_Write_Char:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_spiInit:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_main:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_Lcd_Port:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ??_Lcd_Port:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_Lcd_Cmd:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_spiReceiveWait:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ??_spiReceiveWait:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?___awdiv:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     Lcd_Port@a:	
   524                           ; 2 bytes @ 0x0
   525                           
   526     0070                     spiInit@sDataSample:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     spiWrite@dat:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ___awdiv@divisor:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 2 bytes @ 0x0
   537     0070                     	ds	1
   538     0071                     ??_Lcd_Write_Char:
   539     0071                     ??_Lcd_Cmd:	
   540                           ; 1 bytes @ 0x1
   541                           
   542     0071                     spiInit@sClockIdle:	
   543                           ; 1 bytes @ 0x1
   544                           
   545                           
   546                           ; 1 bytes @ 0x1
   547     0071                     	ds	1
   548     0072                     Lcd_Write_Char@temp:
   549     0072                     spiInit@sTransmitEdge:	
   550                           ; 1 bytes @ 0x2
   551                           
   552     0072                     ___awdiv@dividend:	
   553                           ; 1 bytes @ 0x2
   554                           
   555                           
   556                           ; 2 bytes @ 0x2
   557     0072                     	ds	1
   558     0073                     ??_spiInit:
   559     0073                     Lcd_Cmd@a:	
   560                           ; 1 bytes @ 0x3
   561                           
   562     0073                     Lcd_Write_Char@y:	
   563                           ; 1 bytes @ 0x3
   564                           
   565     0073                     spiInit@sType:	
   566                           ; 1 bytes @ 0x3
   567                           
   568                           
   569                           ; 1 bytes @ 0x3
   570     0073                     	ds	1
   571     0074                     ??_setup:
   572     0074                     ??_Lcd_Init:	
   573                           ; 1 bytes @ 0x4
   574                           
   575     0074                     ??_Lcd_Clear:	
   576                           ; 1 bytes @ 0x4
   577                           
   578     0074                     ?_Lcd_Set_Cursor:	
   579                           ; 1 bytes @ 0x4
   580                           
   581     0074                     ??___awdiv:	
   582                           ; 1 bytes @ 0x4
   583                           
   584     0074                     Lcd_Set_Cursor@b:	
   585                           ; 1 bytes @ 0x4
   586                           
   587     0074                     Lcd_Write_Char@a:	
   588                           ; 1 bytes @ 0x4
   589                           
   590                           
   591                           ; 1 bytes @ 0x4
   592     0074                     	ds	1
   593     0075                     ??_Lcd_Set_Cursor:
   594     0075                     ??_Lcd_Write_String:	
   595                           ; 1 bytes @ 0x5
   596                           
   597     0075                     ___awdiv@counter:	
   598                           ; 1 bytes @ 0x5
   599                           
   600     0075                     Lcd_Write_String@i:	
   601                           ; 1 bytes @ 0x5
   602                           
   603                           
   604                           ; 2 bytes @ 0x5
   605     0075                     	ds	1
   606     0076                     Lcd_Set_Cursor@a:
   607     0076                     ___awdiv@sign:	
   608                           ; 1 bytes @ 0x6
   609                           
   610                           
   611                           ; 1 bytes @ 0x6
   612     0076                     	ds	1
   613     0077                     Lcd_Set_Cursor@z:
   614     0077                     Lcd_Write_String@a:	
   615                           ; 1 bytes @ 0x7
   616                           
   617     0077                     ___awdiv@quotient:	
   618                           ; 1 bytes @ 0x7
   619                           
   620                           
   621                           ; 2 bytes @ 0x7
   622     0077                     	ds	1
   623     0078                     Lcd_Set_Cursor@y:
   624                           
   625                           ; 1 bytes @ 0x8
   626     0078                     	ds	1
   627     0079                     ?___awmod:
   628     0079                     Lcd_Set_Cursor@temp:	
   629                           ; 2 bytes @ 0x9
   630                           
   631     0079                     ___awmod@divisor:	
   632                           ; 1 bytes @ 0x9
   633                           
   634                           
   635                           ; 2 bytes @ 0x9
   636     0079                     	ds	2
   637     007B                     ___awmod@dividend:
   638                           
   639                           ; 2 bytes @ 0xB
   640     007B                     	ds	2
   641     007D                     ??___awmod:
   642                           
   643                           ; 1 bytes @ 0xD
   644     007D                     	ds	1
   645                           
   646                           	psect	cstackBANK0
   647     0029                     __pcstackBANK0:
   648     0029                     ___awmod@counter:
   649                           
   650                           ; 1 bytes @ 0x0
   651     0029                     	ds	1
   652     002A                     ___awmod@sign:
   653                           
   654                           ; 1 bytes @ 0x1
   655     002A                     	ds	1
   656     002B                     ??_main:
   657                           
   658                           ; 1 bytes @ 0x2
   659     002B                     	ds	2
   660                           
   661                           	psect	maintext
   662     06AA                     __pmaintext:	
   663 ;;
   664 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   665 ;;
   666 ;; *************** function _main *****************
   667 ;; Defined at:
   668 ;;		line 66 in file "main.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : B00/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0
   684 ;;      Temps:          0       2       0       0       0
   685 ;;      Totals:         0       2       0       0       0
   686 ;;Total ram usage:        2 bytes
   687 ;; Hardware stack levels required when called: 3
   688 ;; This function calls:
   689 ;;		_Lcd_Clear
   690 ;;		_Lcd_Init
   691 ;;		_Lcd_Set_Cursor
   692 ;;		_Lcd_Write_Char
   693 ;;		_Lcd_Write_String
   694 ;;		___awdiv
   695 ;;		___awmod
   696 ;;		_setup
   697 ;;		_spiRead
   698 ;;		_spiWrite
   699 ;; This function is called by:
   700 ;;		Startup code after reset
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704     06AA                     _main:	
   705                           ;psect for function _main
   706                           
   707     06AA                     l1208:	
   708                           ;incstack = 0
   709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   710                           
   711                           
   712                           ;main.c: 67:     setup();
   713     06AA  120A  118A  24C9  120A  118A  	fcall	_setup
   714                           
   715                           ;main.c: 68:     Lcd_Init();
   716     06AF  120A  118A  25E6  120A  118A  	fcall	_Lcd_Init
   717                           
   718                           ;main.c: 69:     Lcd_Clear();
   719     06B4  120A  118A  246A  120A  118A  	fcall	_Lcd_Clear
   720                           
   721                           ;main.c: 70:     Lcd_Set_Cursor(1,1);
   722     06B9  01F4               	clrf	Lcd_Set_Cursor@b
   723     06BA  0AF4               	incf	Lcd_Set_Cursor@b,f
   724     06BB  3001               	movlw	1
   725     06BC  120A  118A  2545  120A  118A  	fcall	_Lcd_Set_Cursor
   726     06C1                     l1210:
   727                           
   728                           ;main.c: 71:     Lcd_Write_String("ADC   ADC2");
   729     06C1  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   730     06C2  120A  118A  24ED  120A  118A  	fcall	_Lcd_Write_String
   731     06C7                     l1212:
   732                           
   733                           ;main.c: 76:         PORTCbits.RC2 = 0;
   734     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   735     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   736     06C9  1107               	bcf	7,2	;volatile
   737     06CA                     l1214:
   738                           
   739                           ;main.c: 77:         _delay((unsigned long)((1)*(4000000/4000.0)));
   740     06CA  30C7               	movlw	199
   741     06CB  1283               	bcf	3,5	;RP0=0, select bank0
   742     06CC  1303               	bcf	3,6	;RP1=0, select bank0
   743     06CD  00AB               	movwf	??_main
   744     06CE                     u637:
   745     06CE  2ECF               	nop2
   746     06CF  0BAB               	decfsz	??_main,f
   747     06D0  2ECE               	goto	u637
   748     06D1  2ED2               	nop2
   749     06D2                     l1216:
   750                           
   751                           ;main.c: 79:        spiWrite(PORTD);
   752     06D2  1283               	bcf	3,5	;RP0=0, select bank0
   753     06D3  1303               	bcf	3,6	;RP1=0, select bank0
   754     06D4  0808               	movf	8,w	;volatile
   755     06D5  120A  118A  2454  120A  118A  	fcall	_spiWrite
   756     06DA                     l1218:
   757                           
   758                           ;main.c: 80:        ADC = spiRead();
   759     06DA  120A  118A  2461  120A  118A  	fcall	_spiRead
   760     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   761     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   762     06E1  00A8               	movwf	_ADC
   763     06E2                     l1220:
   764                           
   765                           ;main.c: 82:         _delay((unsigned long)((1)*(4000000/4000.0)));
   766     06E2  30C7               	movlw	199
   767     06E3  1283               	bcf	3,5	;RP0=0, select bank0
   768     06E4  1303               	bcf	3,6	;RP1=0, select bank0
   769     06E5  00AB               	movwf	??_main
   770     06E6                     u647:
   771     06E6  2EE7               	nop2
   772     06E7  0BAB               	decfsz	??_main,f
   773     06E8  2EE6               	goto	u647
   774     06E9  2EEA               	nop2
   775     06EA                     l1222:
   776                           
   777                           ;main.c: 83:         PORTCbits.RC2 = 1;
   778     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   779     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   780     06EC  1507               	bsf	7,2	;volatile
   781     06ED                     l1224:
   782                           
   783                           ;main.c: 85:         PORTCbits.RC1 = 0;
   784     06ED  1087               	bcf	7,1	;volatile
   785     06EE                     l1226:
   786                           
   787                           ;main.c: 86:         _delay((unsigned long)((1)*(4000000/4000.0)));
   788     06EE  30C7               	movlw	199
   789     06EF  1283               	bcf	3,5	;RP0=0, select bank0
   790     06F0  1303               	bcf	3,6	;RP1=0, select bank0
   791     06F1  00AB               	movwf	??_main
   792     06F2                     u657:
   793     06F2  2EF3               	nop2
   794     06F3  0BAB               	decfsz	??_main,f
   795     06F4  2EF2               	goto	u657
   796     06F5  2EF6               	nop2
   797     06F6                     l1228:
   798                           
   799                           ;main.c: 88:        spiWrite(PORTD);
   800     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   801     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   802     06F8  0808               	movf	8,w	;volatile
   803     06F9  120A  118A  2454  120A  118A  	fcall	_spiWrite
   804     06FE                     l1230:
   805                           
   806                           ;main.c: 89:        ADC1 = spiRead();
   807     06FE  120A  118A  2461  120A  118A  	fcall	_spiRead
   808     0703  1283               	bcf	3,5	;RP0=0, select bank0
   809     0704  1303               	bcf	3,6	;RP1=0, select bank0
   810     0705  00A7               	movwf	_ADC1
   811     0706                     l1232:
   812                           
   813                           ;main.c: 91:         _delay((unsigned long)((1)*(4000000/4000.0)));
   814     0706  30C7               	movlw	199
   815     0707  1283               	bcf	3,5	;RP0=0, select bank0
   816     0708  1303               	bcf	3,6	;RP1=0, select bank0
   817     0709  00AB               	movwf	??_main
   818     070A                     u667:
   819     070A  2F0B               	nop2
   820     070B  0BAB               	decfsz	??_main,f
   821     070C  2F0A               	goto	u667
   822     070D  2F0E               	nop2
   823     070E                     l1234:
   824                           
   825                           ;main.c: 92:         PORTCbits.RC1 = 1;
   826     070E  1283               	bcf	3,5	;RP0=0, select bank0
   827     070F  1303               	bcf	3,6	;RP1=0, select bank0
   828     0710  1487               	bsf	7,1	;volatile
   829     0711                     l1236:
   830                           
   831                           ;main.c: 94:         PORTB = ADC;
   832     0711  0828               	movf	_ADC,w
   833     0712  0086               	movwf	6	;volatile
   834     0713                     l1238:
   835                           
   836                           ;main.c: 96:         centenas = (ADC/100);
   837     0713  3064               	movlw	100
   838     0714  00F0               	movwf	___awdiv@divisor
   839     0715  3000               	movlw	0
   840     0716  00F1               	movwf	___awdiv@divisor+1
   841     0717  0828               	movf	_ADC,w
   842     0718  00AB               	movwf	??_main
   843     0719  01AC               	clrf	??_main+1
   844     071A  082B               	movf	??_main,w
   845     071B  00F2               	movwf	___awdiv@dividend
   846     071C  082C               	movf	??_main+1,w
   847     071D  00F3               	movwf	___awdiv@dividend+1
   848     071E  120A  118A  2643  120A  118A  	fcall	___awdiv
   849     0723  0870               	movf	?___awdiv,w
   850     0724  1283               	bcf	3,5	;RP0=0, select bank0
   851     0725  1303               	bcf	3,6	;RP1=0, select bank0
   852     0726  00A5               	movwf	_centenas
   853     0727                     l1240:
   854                           
   855                           ;main.c: 97:         decenas = (ADC/10)%10;
   856     0727  300A               	movlw	10
   857     0728  00F9               	movwf	___awmod@divisor
   858     0729  3000               	movlw	0
   859     072A  00FA               	movwf	___awmod@divisor+1
   860     072B  300A               	movlw	10
   861     072C  00F0               	movwf	___awdiv@divisor
   862     072D  3000               	movlw	0
   863     072E  00F1               	movwf	___awdiv@divisor+1
   864     072F  0828               	movf	_ADC,w
   865     0730  00AB               	movwf	??_main
   866     0731  01AC               	clrf	??_main+1
   867     0732  082B               	movf	??_main,w
   868     0733  00F2               	movwf	___awdiv@dividend
   869     0734  082C               	movf	??_main+1,w
   870     0735  00F3               	movwf	___awdiv@dividend+1
   871     0736  120A  118A  2643  120A  118A  	fcall	___awdiv
   872     073B  0871               	movf	?___awdiv+1,w
   873     073C  00FC               	movwf	___awmod@dividend+1
   874     073D  0870               	movf	?___awdiv,w
   875     073E  00FB               	movwf	___awmod@dividend
   876     073F  120A  118A  258B  120A  118A  	fcall	___awmod
   877     0744  0879               	movf	?___awmod,w
   878     0745  1283               	bcf	3,5	;RP0=0, select bank0
   879     0746  1303               	bcf	3,6	;RP1=0, select bank0
   880     0747  00A4               	movwf	_decenas
   881     0748                     l1242:
   882                           
   883                           ;main.c: 98:         unidad = ADC%10;
   884     0748  300A               	movlw	10
   885     0749  00F9               	movwf	___awmod@divisor
   886     074A  3000               	movlw	0
   887     074B  00FA               	movwf	___awmod@divisor+1
   888     074C  0828               	movf	_ADC,w
   889     074D  00AB               	movwf	??_main
   890     074E  01AC               	clrf	??_main+1
   891     074F  082B               	movf	??_main,w
   892     0750  00FB               	movwf	___awmod@dividend
   893     0751  082C               	movf	??_main+1,w
   894     0752  00FC               	movwf	___awmod@dividend+1
   895     0753  120A  118A  258B  120A  118A  	fcall	___awmod
   896     0758  0879               	movf	?___awmod,w
   897     0759  1283               	bcf	3,5	;RP0=0, select bank0
   898     075A  1303               	bcf	3,6	;RP1=0, select bank0
   899     075B  00A3               	movwf	_unidad
   900     075C                     l1244:
   901                           
   902                           ;main.c: 100:         Lcd_Set_Cursor(2,1);
   903     075C  01F4               	clrf	Lcd_Set_Cursor@b
   904     075D  0AF4               	incf	Lcd_Set_Cursor@b,f
   905     075E  3002               	movlw	2
   906     075F  120A  118A  2545  120A  118A  	fcall	_Lcd_Set_Cursor
   907     0764                     l1246:
   908                           
   909                           ;main.c: 101:         Lcd_Write_Char(centenas + 48);
   910     0764  1283               	bcf	3,5	;RP0=0, select bank0
   911     0765  1303               	bcf	3,6	;RP1=0, select bank0
   912     0766  0825               	movf	_centenas,w
   913     0767  3E30               	addlw	48
   914     0768  120A  118A  2512  120A  118A  	fcall	_Lcd_Write_Char
   915     076D                     l1248:
   916                           
   917                           ;main.c: 102:         Lcd_Write_Char(decenas + 48);
   918     076D  1283               	bcf	3,5	;RP0=0, select bank0
   919     076E  1303               	bcf	3,6	;RP1=0, select bank0
   920     076F  0824               	movf	_decenas,w
   921     0770  3E30               	addlw	48
   922     0771  120A  118A  2512  120A  118A  	fcall	_Lcd_Write_Char
   923     0776                     l1250:
   924                           
   925                           ;main.c: 103:         Lcd_Write_Char(unidad + 48);
   926     0776  1283               	bcf	3,5	;RP0=0, select bank0
   927     0777  1303               	bcf	3,6	;RP1=0, select bank0
   928     0778  0823               	movf	_unidad,w
   929     0779  3E30               	addlw	48
   930     077A  120A  118A  2512  120A  118A  	fcall	_Lcd_Write_Char
   931     077F                     l1252:
   932                           
   933                           ;main.c: 105:         centenas1 = (ADC1/100);
   934     077F  3064               	movlw	100
   935     0780  00F0               	movwf	___awdiv@divisor
   936     0781  3000               	movlw	0
   937     0782  00F1               	movwf	___awdiv@divisor+1
   938     0783  1283               	bcf	3,5	;RP0=0, select bank0
   939     0784  1303               	bcf	3,6	;RP1=0, select bank0
   940     0785  0827               	movf	_ADC1,w
   941     0786  00AB               	movwf	??_main
   942     0787  01AC               	clrf	??_main+1
   943     0788  082B               	movf	??_main,w
   944     0789  00F2               	movwf	___awdiv@dividend
   945     078A  082C               	movf	??_main+1,w
   946     078B  00F3               	movwf	___awdiv@dividend+1
   947     078C  120A  118A  2643  120A  118A  	fcall	___awdiv
   948     0791  0870               	movf	?___awdiv,w
   949     0792  1283               	bcf	3,5	;RP0=0, select bank0
   950     0793  1303               	bcf	3,6	;RP1=0, select bank0
   951     0794  00A2               	movwf	_centenas1
   952     0795                     l1254:
   953                           
   954                           ;main.c: 106:         decenas1 = (ADC1/10)%10;
   955     0795  300A               	movlw	10
   956     0796  00F9               	movwf	___awmod@divisor
   957     0797  3000               	movlw	0
   958     0798  00FA               	movwf	___awmod@divisor+1
   959     0799  300A               	movlw	10
   960     079A  00F0               	movwf	___awdiv@divisor
   961     079B  3000               	movlw	0
   962     079C  00F1               	movwf	___awdiv@divisor+1
   963     079D  0827               	movf	_ADC1,w
   964     079E  00AB               	movwf	??_main
   965     079F  01AC               	clrf	??_main+1
   966     07A0  082B               	movf	??_main,w
   967     07A1  00F2               	movwf	___awdiv@dividend
   968     07A2  082C               	movf	??_main+1,w
   969     07A3  00F3               	movwf	___awdiv@dividend+1
   970     07A4  120A  118A  2643  120A  118A  	fcall	___awdiv
   971     07A9  0871               	movf	?___awdiv+1,w
   972     07AA  00FC               	movwf	___awmod@dividend+1
   973     07AB  0870               	movf	?___awdiv,w
   974     07AC  00FB               	movwf	___awmod@dividend
   975     07AD  120A  118A  258B  120A  118A  	fcall	___awmod
   976     07B2  0879               	movf	?___awmod,w
   977     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   978     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   979     07B5  00A1               	movwf	_decenas1
   980     07B6                     l1256:
   981                           
   982                           ;main.c: 107:         unidad1 = ADC1%10;
   983     07B6  300A               	movlw	10
   984     07B7  00F9               	movwf	___awmod@divisor
   985     07B8  3000               	movlw	0
   986     07B9  00FA               	movwf	___awmod@divisor+1
   987     07BA  0827               	movf	_ADC1,w
   988     07BB  00AB               	movwf	??_main
   989     07BC  01AC               	clrf	??_main+1
   990     07BD  082B               	movf	??_main,w
   991     07BE  00FB               	movwf	___awmod@dividend
   992     07BF  082C               	movf	??_main+1,w
   993     07C0  00FC               	movwf	___awmod@dividend+1
   994     07C1  120A  118A  258B  120A  118A  	fcall	___awmod
   995     07C6  0879               	movf	?___awmod,w
   996     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   997     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   998     07C9  00A0               	movwf	_unidad1
   999     07CA                     l1258:
  1000                           
  1001                           ;main.c: 109:         Lcd_Set_Cursor(2,7);
  1002     07CA  3007               	movlw	7
  1003     07CB  00F4               	movwf	Lcd_Set_Cursor@b
  1004     07CC  3002               	movlw	2
  1005     07CD  120A  118A  2545  120A  118A  	fcall	_Lcd_Set_Cursor
  1006     07D2                     l1260:
  1007                           
  1008                           ;main.c: 110:         Lcd_Write_Char(centenas1 + 48);
  1009     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1010     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1011     07D4  0822               	movf	_centenas1,w
  1012     07D5  3E30               	addlw	48
  1013     07D6  120A  118A  2512  120A  118A  	fcall	_Lcd_Write_Char
  1014     07DB                     l1262:
  1015                           
  1016                           ;main.c: 111:         Lcd_Write_Char(decenas1 + 48);
  1017     07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1018     07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1019     07DD  0821               	movf	_decenas1,w
  1020     07DE  3E30               	addlw	48
  1021     07DF  120A  118A  2512  120A  118A  	fcall	_Lcd_Write_Char
  1022     07E4                     l1264:
  1023                           
  1024                           ;main.c: 112:         Lcd_Write_Char(unidad1 + 48);
  1025     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1026     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1027     07E6  0820               	movf	_unidad1,w
  1028     07E7  3E30               	addlw	48
  1029     07E8  120A  118A  2512  120A  118A  	fcall	_Lcd_Write_Char
  1030     07ED  2EC7               	goto	l1212
  1031     07EE  120A  118A  2800   	ljmp	start
  1032     07F1                     __end_of_main:
  1033                           
  1034                           	psect	text1
  1035     0454                     __ptext1:	
  1036 ;; *************** function _spiWrite *****************
  1037 ;; Defined at:
  1038 ;;		line 25 in file "SPI.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  dat             1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  dat             1    0[COMMON] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065     0454                     _spiWrite:	
  1066                           ;psect for function _spiWrite
  1067                           
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _spiWrite: [wreg]
  1071                           ;spiWrite@dat stored from wreg
  1072     0454  00F0               	movwf	spiWrite@dat
  1073     0455                     l1118:
  1074                           
  1075                           ;SPI.c: 25: void spiWrite(char dat);SPI.c: 26: {;SPI.c: 27:     SSPBUF = dat;
  1076     0455  0870               	movf	spiWrite@dat,w
  1077     0456  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0457  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0458  0093               	movwf	19	;volatile
  1080     0459                     l148:
  1081     0459  0008               	return
  1082     045A                     __end_of_spiWrite:
  1083                           
  1084                           	psect	text2
  1085     0461                     __ptext2:	
  1086 ;; *************** function _spiRead *****************
  1087 ;; Defined at:
  1088 ;;		line 38 in file "SPI.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      unsigned char 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, pclath, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 1
  1109 ;; This function calls:
  1110 ;;		_spiReceiveWait
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116     0461                     _spiRead:	
  1117                           ;psect for function _spiRead
  1118                           
  1119     0461                     l1120:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1122                           
  1123                           
  1124                           ;SPI.c: 40:     spiReceiveWait();
  1125     0461  120A  118A  245A  120A  118A  	fcall	_spiReceiveWait
  1126     0466                     l1122:
  1127                           
  1128                           ;SPI.c: 41:     return(SSPBUF);
  1129     0466  1283               	bcf	3,5	;RP0=0, select bank0
  1130     0467  1303               	bcf	3,6	;RP1=0, select bank0
  1131     0468  0813               	movf	19,w	;volatile
  1132     0469                     l156:
  1133     0469  0008               	return
  1134     046A                     __end_of_spiRead:
  1135                           
  1136                           	psect	text3
  1137     045A                     __ptext3:	
  1138 ;; *************** function _spiReceiveWait *****************
  1139 ;; Defined at:
  1140 ;;		line 20 in file "SPI.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		None
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_spiRead
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167     045A                     _spiReceiveWait:	
  1168                           ;psect for function _spiReceiveWait
  1169                           
  1170     045A                     l1062:	
  1171                           ;incstack = 0
  1172                           ; Regs used in _spiReceiveWait: []
  1173                           
  1174     045A                     l142:	
  1175                           ;SPI.c: 22:     while ( !SSPSTATbits.BF );
  1176                           
  1177     045A  1683               	bsf	3,5	;RP0=1, select bank1
  1178     045B  1303               	bcf	3,6	;RP1=0, select bank1
  1179     045C  1C14               	btfss	20,0	;volatile
  1180     045D  2C5F               	goto	u381
  1181     045E  2C60               	goto	u380
  1182     045F                     u381:
  1183     045F  2C5A               	goto	l142
  1184     0460                     u380:
  1185     0460                     l145:
  1186     0460  0008               	return
  1187     0461                     __end_of_spiReceiveWait:
  1188                           
  1189                           	psect	text4
  1190     04C9                     __ptext4:	
  1191 ;; *************** function _setup *****************
  1192 ;; Defined at:
  1193 ;;		line 119 in file "main.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 1
  1214 ;; This function calls:
  1215 ;;		_spiInit
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221     04C9                     _setup:	
  1222                           ;psect for function _setup
  1223                           
  1224     04C9                     l1064:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1227                           
  1228                           
  1229                           ;main.c: 120:     ANSEL = 0;
  1230     04C9  1683               	bsf	3,5	;RP0=1, select bank3
  1231     04CA  1703               	bsf	3,6	;RP1=1, select bank3
  1232     04CB  0188               	clrf	8	;volatile
  1233                           
  1234                           ;main.c: 121:     ANSELH = 0;
  1235     04CC  0189               	clrf	9	;volatile
  1236                           
  1237                           ;main.c: 122:     TRISB = 0;
  1238     04CD  1683               	bsf	3,5	;RP0=1, select bank1
  1239     04CE  1303               	bcf	3,6	;RP1=0, select bank1
  1240     04CF  0186               	clrf	6	;volatile
  1241                           
  1242                           ;main.c: 123:     TRISD = 0;
  1243     04D0  0188               	clrf	8	;volatile
  1244                           
  1245                           ;main.c: 124:     PORTB = 0;
  1246     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1247     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1248     04D3  0186               	clrf	6	;volatile
  1249                           
  1250                           ;main.c: 125:     PORTD = 0;
  1251     04D4  0188               	clrf	8	;volatile
  1252     04D5                     l1066:
  1253                           
  1254                           ;main.c: 126:     TRISCbits.TRISC2 = 0;
  1255     04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1256     04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1257     04D7  1107               	bcf	7,2	;volatile
  1258     04D8                     l1068:
  1259                           
  1260                           ;main.c: 127:     TRISCbits.TRISC1 = 0;
  1261     04D8  1087               	bcf	7,1	;volatile
  1262     04D9                     l1070:
  1263                           
  1264                           ;main.c: 128:     PORTCbits.RC2 = 1;
  1265     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1266     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1267     04DB  1507               	bsf	7,2	;volatile
  1268     04DC                     l1072:
  1269                           
  1270                           ;main.c: 129:     OSCCONbits.IRCF = 0b110;
  1271     04DC  1683               	bsf	3,5	;RP0=1, select bank1
  1272     04DD  1303               	bcf	3,6	;RP1=0, select bank1
  1273     04DE  080F               	movf	15,w	;volatile
  1274     04DF  398F               	andlw	-113
  1275     04E0  3860               	iorlw	96
  1276     04E1  008F               	movwf	15	;volatile
  1277     04E2                     l1074:
  1278                           
  1279                           ;main.c: 130:     OSCCONbits.SCS = 1;
  1280     04E2  140F               	bsf	15,0	;volatile
  1281     04E3                     l1076:
  1282                           
  1283                           ;main.c: 131:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1284     04E3  01F0               	clrf	spiInit@sDataSample
  1285     04E4  01F1               	clrf	spiInit@sClockIdle
  1286     04E5  01F2               	clrf	spiInit@sTransmitEdge
  1287     04E6  3020               	movlw	32
  1288     04E7  120A  118A  2477  120A  118A  	fcall	_spiInit
  1289     04EC                     l67:
  1290     04EC  0008               	return
  1291     04ED                     __end_of_setup:
  1292                           
  1293                           	psect	text5
  1294     0477                     __ptext5:	
  1295 ;; *************** function _spiInit *****************
  1296 ;; Defined at:
  1297 ;;		line 3 in file "SPI.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  sType           1    wreg     enum E1292
  1300 ;;  sDataSample     1    0[COMMON] enum E1300
  1301 ;;  sClockIdle      1    1[COMMON] enum E1304
  1302 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  sType           1    3[COMMON] enum E1292
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1314 ;;      Params:         3       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0
  1317 ;;      Totals:         4       0       0       0       0
  1318 ;;Total ram usage:        4 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_setup
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327     0477                     _spiInit:	
  1328                           ;psect for function _spiInit
  1329                           
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1333                           ;spiInit@sType stored from wreg
  1334     0477  00F3               	movwf	spiInit@sType
  1335     0478                     l1042:
  1336                           
  1337                           ;SPI.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 4: {;SPI.c: 5:     TRISC5 = 0;
  1338     0478  1683               	bsf	3,5	;RP0=1, select bank1
  1339     0479  1303               	bcf	3,6	;RP1=0, select bank1
  1340     047A  1287               	bcf	7,5	;volatile
  1341                           
  1342                           ;SPI.c: 6:     if(sType & 0b00000100)
  1343     047B  1D73               	btfss	spiInit@sType,2
  1344     047C  2C7E               	goto	u371
  1345     047D  2C7F               	goto	u370
  1346     047E                     u371:
  1347     047E  2C83               	goto	l1048
  1348     047F                     u370:
  1349     047F                     l1044:
  1350                           
  1351                           ;SPI.c: 7:     {;SPI.c: 8:         SSPSTAT = sTransmitEdge;
  1352     047F  0872               	movf	spiInit@sTransmitEdge,w
  1353     0480  0094               	movwf	20	;volatile
  1354     0481                     l1046:
  1355                           
  1356                           ;SPI.c: 9:         TRISC3 = 1;
  1357     0481  1587               	bsf	7,3	;volatile
  1358                           
  1359                           ;SPI.c: 10:     }
  1360     0482  2C87               	goto	l138
  1361     0483                     l1048:
  1362                           
  1363                           ;SPI.c: 12:     {;SPI.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1364     0483  0870               	movf	spiInit@sDataSample,w
  1365     0484  0472               	iorwf	spiInit@sTransmitEdge,w
  1366     0485  0094               	movwf	20	;volatile
  1367     0486                     l1050:
  1368                           
  1369                           ;SPI.c: 14:         TRISC3 = 0;
  1370     0486  1187               	bcf	7,3	;volatile
  1371     0487                     l138:	
  1372                           ;SPI.c: 15:     }
  1373                           
  1374                           
  1375                           ;SPI.c: 17:     SSPCON = sType | sClockIdle;
  1376     0487  0873               	movf	spiInit@sType,w
  1377     0488  0471               	iorwf	spiInit@sClockIdle,w
  1378     0489  1283               	bcf	3,5	;RP0=0, select bank0
  1379     048A  1303               	bcf	3,6	;RP1=0, select bank0
  1380     048B  0094               	movwf	20	;volatile
  1381     048C                     l139:
  1382     048C  0008               	return
  1383     048D                     __end_of_spiInit:
  1384                           
  1385                           	psect	text6
  1386     058B                     __ptext6:	
  1387 ;; *************** function ___awmod *****************
  1388 ;; Defined at:
  1389 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  divisor         2    9[COMMON] int 
  1392 ;;  dividend        2   11[COMMON] int 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  sign            1    1[BANK0 ] unsigned char 
  1395 ;;  counter         1    0[BANK0 ] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  2    9[COMMON] int 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         4       0       0       0       0
  1406 ;;      Locals:         0       2       0       0       0
  1407 ;;      Temps:          1       0       0       0       0
  1408 ;;      Totals:         5       2       0       0       0
  1409 ;;Total ram usage:        7 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418     058B                     ___awmod:	
  1419                           ;psect for function ___awmod
  1420                           
  1421     058B                     l1170:	
  1422                           ;incstack = 0
  1423                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1424                           
  1425     058B  1283               	bcf	3,5	;RP0=0, select bank0
  1426     058C  1303               	bcf	3,6	;RP1=0, select bank0
  1427     058D  01AA               	clrf	___awmod@sign
  1428     058E                     l1172:
  1429     058E  1FFC               	btfss	___awmod@dividend+1,7
  1430     058F  2D91               	goto	u541
  1431     0590  2D92               	goto	u540
  1432     0591                     u541:
  1433     0591  2D99               	goto	l1178
  1434     0592                     u540:
  1435     0592                     l1174:
  1436     0592  09FB               	comf	___awmod@dividend,f
  1437     0593  09FC               	comf	___awmod@dividend+1,f
  1438     0594  0AFB               	incf	___awmod@dividend,f
  1439     0595  1903               	skipnz
  1440     0596  0AFC               	incf	___awmod@dividend+1,f
  1441     0597                     l1176:
  1442     0597  01AA               	clrf	___awmod@sign
  1443     0598  0AAA               	incf	___awmod@sign,f
  1444     0599                     l1178:
  1445     0599  1FFA               	btfss	___awmod@divisor+1,7
  1446     059A  2D9C               	goto	u551
  1447     059B  2D9D               	goto	u550
  1448     059C                     u551:
  1449     059C  2DA2               	goto	l1182
  1450     059D                     u550:
  1451     059D                     l1180:
  1452     059D  09F9               	comf	___awmod@divisor,f
  1453     059E  09FA               	comf	___awmod@divisor+1,f
  1454     059F  0AF9               	incf	___awmod@divisor,f
  1455     05A0  1903               	skipnz
  1456     05A1  0AFA               	incf	___awmod@divisor+1,f
  1457     05A2                     l1182:
  1458     05A2  0879               	movf	___awmod@divisor,w
  1459     05A3  047A               	iorwf	___awmod@divisor+1,w
  1460     05A4  1903               	btfsc	3,2
  1461     05A5  2DA7               	goto	u561
  1462     05A6  2DA8               	goto	u560
  1463     05A7                     u561:
  1464     05A7  2DD7               	goto	l1200
  1465     05A8                     u560:
  1466     05A8                     l1184:
  1467     05A8  01A9               	clrf	___awmod@counter
  1468     05A9  0AA9               	incf	___awmod@counter,f
  1469     05AA  2DB6               	goto	l1190
  1470     05AB                     l1186:
  1471     05AB  3001               	movlw	1
  1472     05AC                     u575:
  1473     05AC  1003               	clrc
  1474     05AD  0DF9               	rlf	___awmod@divisor,f
  1475     05AE  0DFA               	rlf	___awmod@divisor+1,f
  1476     05AF  3EFF               	addlw	-1
  1477     05B0  1D03               	skipz
  1478     05B1  2DAC               	goto	u575
  1479     05B2                     l1188:
  1480     05B2  3001               	movlw	1
  1481     05B3  00FD               	movwf	??___awmod
  1482     05B4  087D               	movf	??___awmod,w
  1483     05B5  07A9               	addwf	___awmod@counter,f
  1484     05B6                     l1190:
  1485     05B6  1FFA               	btfss	___awmod@divisor+1,7
  1486     05B7  2DB9               	goto	u581
  1487     05B8  2DBA               	goto	u580
  1488     05B9                     u581:
  1489     05B9  2DAB               	goto	l1186
  1490     05BA                     u580:
  1491     05BA                     l1192:
  1492     05BA  087A               	movf	___awmod@divisor+1,w
  1493     05BB  027C               	subwf	___awmod@dividend+1,w
  1494     05BC  1D03               	skipz
  1495     05BD  2DC0               	goto	u595
  1496     05BE  0879               	movf	___awmod@divisor,w
  1497     05BF  027B               	subwf	___awmod@dividend,w
  1498     05C0                     u595:
  1499     05C0  1C03               	skipc
  1500     05C1  2DC3               	goto	u591
  1501     05C2  2DC4               	goto	u590
  1502     05C3                     u591:
  1503     05C3  2DCA               	goto	l1196
  1504     05C4                     u590:
  1505     05C4                     l1194:
  1506     05C4  0879               	movf	___awmod@divisor,w
  1507     05C5  02FB               	subwf	___awmod@dividend,f
  1508     05C6  087A               	movf	___awmod@divisor+1,w
  1509     05C7  1C03               	skipc
  1510     05C8  03FC               	decf	___awmod@dividend+1,f
  1511     05C9  02FC               	subwf	___awmod@dividend+1,f
  1512     05CA                     l1196:
  1513     05CA  3001               	movlw	1
  1514     05CB                     u605:
  1515     05CB  1003               	clrc
  1516     05CC  0CFA               	rrf	___awmod@divisor+1,f
  1517     05CD  0CF9               	rrf	___awmod@divisor,f
  1518     05CE  3EFF               	addlw	-1
  1519     05CF  1D03               	skipz
  1520     05D0  2DCB               	goto	u605
  1521     05D1                     l1198:
  1522     05D1  3001               	movlw	1
  1523     05D2  02A9               	subwf	___awmod@counter,f
  1524     05D3  1D03               	btfss	3,2
  1525     05D4  2DD6               	goto	u611
  1526     05D5  2DD7               	goto	u610
  1527     05D6                     u611:
  1528     05D6  2DBA               	goto	l1192
  1529     05D7                     u610:
  1530     05D7                     l1200:
  1531     05D7  082A               	movf	___awmod@sign,w
  1532     05D8  1903               	btfsc	3,2
  1533     05D9  2DDB               	goto	u621
  1534     05DA  2DDC               	goto	u620
  1535     05DB                     u621:
  1536     05DB  2DE1               	goto	l1204
  1537     05DC                     u620:
  1538     05DC                     l1202:
  1539     05DC  09FB               	comf	___awmod@dividend,f
  1540     05DD  09FC               	comf	___awmod@dividend+1,f
  1541     05DE  0AFB               	incf	___awmod@dividend,f
  1542     05DF  1903               	skipnz
  1543     05E0  0AFC               	incf	___awmod@dividend+1,f
  1544     05E1                     l1204:
  1545     05E1  087C               	movf	___awmod@dividend+1,w
  1546     05E2  00FA               	movwf	?___awmod+1
  1547     05E3  087B               	movf	___awmod@dividend,w
  1548     05E4  00F9               	movwf	?___awmod
  1549     05E5                     l408:
  1550     05E5  0008               	return
  1551     05E6                     __end_of___awmod:
  1552                           
  1553                           	psect	text7
  1554     0643                     __ptext7:	
  1555 ;; *************** function ___awdiv *****************
  1556 ;; Defined at:
  1557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  divisor         2    0[COMMON] int 
  1560 ;;  dividend        2    2[COMMON] int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  quotient        2    7[COMMON] int 
  1563 ;;  sign            1    6[COMMON] unsigned char 
  1564 ;;  counter         1    5[COMMON] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2    0[COMMON] int 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         4       0       0       0       0
  1575 ;;      Locals:         4       0       0       0       0
  1576 ;;      Temps:          1       0       0       0       0
  1577 ;;      Totals:         9       0       0       0       0
  1578 ;;Total ram usage:        9 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587     0643                     ___awdiv:	
  1588                           ;psect for function ___awdiv
  1589                           
  1590     0643                     l1126:	
  1591                           ;incstack = 0
  1592                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1593                           
  1594     0643  01F6               	clrf	___awdiv@sign
  1595     0644                     l1128:
  1596     0644  1FF1               	btfss	___awdiv@divisor+1,7
  1597     0645  2E47               	goto	u441
  1598     0646  2E48               	goto	u440
  1599     0647                     u441:
  1600     0647  2E4F               	goto	l1134
  1601     0648                     u440:
  1602     0648                     l1130:
  1603     0648  09F0               	comf	___awdiv@divisor,f
  1604     0649  09F1               	comf	___awdiv@divisor+1,f
  1605     064A  0AF0               	incf	___awdiv@divisor,f
  1606     064B  1903               	skipnz
  1607     064C  0AF1               	incf	___awdiv@divisor+1,f
  1608     064D                     l1132:
  1609     064D  01F6               	clrf	___awdiv@sign
  1610     064E  0AF6               	incf	___awdiv@sign,f
  1611     064F                     l1134:
  1612     064F  1FF3               	btfss	___awdiv@dividend+1,7
  1613     0650  2E52               	goto	u451
  1614     0651  2E53               	goto	u450
  1615     0652                     u451:
  1616     0652  2E5C               	goto	l1140
  1617     0653                     u450:
  1618     0653                     l1136:
  1619     0653  09F2               	comf	___awdiv@dividend,f
  1620     0654  09F3               	comf	___awdiv@dividend+1,f
  1621     0655  0AF2               	incf	___awdiv@dividend,f
  1622     0656  1903               	skipnz
  1623     0657  0AF3               	incf	___awdiv@dividend+1,f
  1624     0658                     l1138:
  1625     0658  3001               	movlw	1
  1626     0659  00F4               	movwf	??___awdiv
  1627     065A  0874               	movf	??___awdiv,w
  1628     065B  06F6               	xorwf	___awdiv@sign,f
  1629     065C                     l1140:
  1630     065C  01F7               	clrf	___awdiv@quotient
  1631     065D  01F8               	clrf	___awdiv@quotient+1
  1632     065E                     l1142:
  1633     065E  0870               	movf	___awdiv@divisor,w
  1634     065F  0471               	iorwf	___awdiv@divisor+1,w
  1635     0660  1903               	btfsc	3,2
  1636     0661  2E63               	goto	u461
  1637     0662  2E64               	goto	u460
  1638     0663                     u461:
  1639     0663  2E9B               	goto	l1162
  1640     0664                     u460:
  1641     0664                     l1144:
  1642     0664  01F5               	clrf	___awdiv@counter
  1643     0665  0AF5               	incf	___awdiv@counter,f
  1644     0666  2E72               	goto	l1150
  1645     0667                     l1146:
  1646     0667  3001               	movlw	1
  1647     0668                     u475:
  1648     0668  1003               	clrc
  1649     0669  0DF0               	rlf	___awdiv@divisor,f
  1650     066A  0DF1               	rlf	___awdiv@divisor+1,f
  1651     066B  3EFF               	addlw	-1
  1652     066C  1D03               	skipz
  1653     066D  2E68               	goto	u475
  1654     066E                     l1148:
  1655     066E  3001               	movlw	1
  1656     066F  00F4               	movwf	??___awdiv
  1657     0670  0874               	movf	??___awdiv,w
  1658     0671  07F5               	addwf	___awdiv@counter,f
  1659     0672                     l1150:
  1660     0672  1FF1               	btfss	___awdiv@divisor+1,7
  1661     0673  2E75               	goto	u481
  1662     0674  2E76               	goto	u480
  1663     0675                     u481:
  1664     0675  2E67               	goto	l1146
  1665     0676                     u480:
  1666     0676                     l1152:
  1667     0676  3001               	movlw	1
  1668     0677                     u495:
  1669     0677  1003               	clrc
  1670     0678  0DF7               	rlf	___awdiv@quotient,f
  1671     0679  0DF8               	rlf	___awdiv@quotient+1,f
  1672     067A  3EFF               	addlw	-1
  1673     067B  1D03               	skipz
  1674     067C  2E77               	goto	u495
  1675     067D  0871               	movf	___awdiv@divisor+1,w
  1676     067E  0273               	subwf	___awdiv@dividend+1,w
  1677     067F  1D03               	skipz
  1678     0680  2E83               	goto	u505
  1679     0681  0870               	movf	___awdiv@divisor,w
  1680     0682  0272               	subwf	___awdiv@dividend,w
  1681     0683                     u505:
  1682     0683  1C03               	skipc
  1683     0684  2E86               	goto	u501
  1684     0685  2E87               	goto	u500
  1685     0686                     u501:
  1686     0686  2E8E               	goto	l1158
  1687     0687                     u500:
  1688     0687                     l1154:
  1689     0687  0870               	movf	___awdiv@divisor,w
  1690     0688  02F2               	subwf	___awdiv@dividend,f
  1691     0689  0871               	movf	___awdiv@divisor+1,w
  1692     068A  1C03               	skipc
  1693     068B  03F3               	decf	___awdiv@dividend+1,f
  1694     068C  02F3               	subwf	___awdiv@dividend+1,f
  1695     068D                     l1156:
  1696     068D  1477               	bsf	___awdiv@quotient,0
  1697     068E                     l1158:
  1698     068E  3001               	movlw	1
  1699     068F                     u515:
  1700     068F  1003               	clrc
  1701     0690  0CF1               	rrf	___awdiv@divisor+1,f
  1702     0691  0CF0               	rrf	___awdiv@divisor,f
  1703     0692  3EFF               	addlw	-1
  1704     0693  1D03               	skipz
  1705     0694  2E8F               	goto	u515
  1706     0695                     l1160:
  1707     0695  3001               	movlw	1
  1708     0696  02F5               	subwf	___awdiv@counter,f
  1709     0697  1D03               	btfss	3,2
  1710     0698  2E9A               	goto	u521
  1711     0699  2E9B               	goto	u520
  1712     069A                     u521:
  1713     069A  2E76               	goto	l1152
  1714     069B                     u520:
  1715     069B                     l1162:
  1716     069B  0876               	movf	___awdiv@sign,w
  1717     069C  1903               	btfsc	3,2
  1718     069D  2E9F               	goto	u531
  1719     069E  2EA0               	goto	u530
  1720     069F                     u531:
  1721     069F  2EA5               	goto	l1166
  1722     06A0                     u530:
  1723     06A0                     l1164:
  1724     06A0  09F7               	comf	___awdiv@quotient,f
  1725     06A1  09F8               	comf	___awdiv@quotient+1,f
  1726     06A2  0AF7               	incf	___awdiv@quotient,f
  1727     06A3  1903               	skipnz
  1728     06A4  0AF8               	incf	___awdiv@quotient+1,f
  1729     06A5                     l1166:
  1730     06A5  0878               	movf	___awdiv@quotient+1,w
  1731     06A6  00F1               	movwf	?___awdiv+1
  1732     06A7  0877               	movf	___awdiv@quotient,w
  1733     06A8  00F0               	movwf	?___awdiv
  1734     06A9                     l395:
  1735     06A9  0008               	return
  1736     06AA                     __end_of___awdiv:
  1737                           
  1738                           	psect	text8
  1739     04ED                     __ptext8:	
  1740 ;; *************** function _Lcd_Write_String *****************
  1741 ;; Defined at:
  1742 ;;		line 88 in file "LCD.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  a               1    wreg     PTR unsigned char 
  1745 ;;		 -> STR_1(11), 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  a               1    7[COMMON] PTR unsigned char 
  1748 ;;		 -> STR_1(11), 
  1749 ;;  i               2    5[COMMON] int 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         3       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0
  1762 ;;      Totals:         3       0       0       0       0
  1763 ;;Total ram usage:        3 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 2
  1766 ;; This function calls:
  1767 ;;		_Lcd_Write_Char
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773     04ED                     _Lcd_Write_String:	
  1774                           ;psect for function _Lcd_Write_String
  1775                           
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1779                           ;Lcd_Write_String@a stored from wreg
  1780     04ED  00F7               	movwf	Lcd_Write_String@a
  1781     04EE                     l1110:
  1782                           
  1783                           ;LCD.c: 89:     int i;;LCD.c: 90:     for (i = 0; a[i] != '\0'; i++)
  1784     04EE  01F5               	clrf	Lcd_Write_String@i
  1785     04EF  01F6               	clrf	Lcd_Write_String@i+1
  1786     04F0  2D04               	goto	l1116
  1787     04F1                     l1112:
  1788                           
  1789                           ;LCD.c: 91:         Lcd_Write_Char(a[i]);
  1790     04F1  0875               	movf	Lcd_Write_String@i,w
  1791     04F2  0777               	addwf	Lcd_Write_String@a,w
  1792     04F3  0084               	movwf	4
  1793     04F4  120A  118A  2003  120A  118A  	fcall	stringdir
  1794     04F9  120A  118A  2512  120A  118A  	fcall	_Lcd_Write_Char
  1795     04FE                     l1114:
  1796     04FE  3001               	movlw	1
  1797     04FF  07F5               	addwf	Lcd_Write_String@i,f
  1798     0500  1803               	skipnc
  1799     0501  0AF6               	incf	Lcd_Write_String@i+1,f
  1800     0502  3000               	movlw	0
  1801     0503  07F6               	addwf	Lcd_Write_String@i+1,f
  1802     0504                     l1116:
  1803     0504  0875               	movf	Lcd_Write_String@i,w
  1804     0505  0777               	addwf	Lcd_Write_String@a,w
  1805     0506  0084               	movwf	4
  1806     0507  120A  118A  2003  120A  118A  	fcall	stringdir
  1807     050C  3A00               	xorlw	0
  1808     050D  1D03               	skipz
  1809     050E  2D10               	goto	u431
  1810     050F  2D11               	goto	u430
  1811     0510                     u431:
  1812     0510  2CF1               	goto	l1112
  1813     0511                     u430:
  1814     0511                     l116:
  1815     0511  0008               	return
  1816     0512                     __end_of_Lcd_Write_String:
  1817                           
  1818                           	psect	text9
  1819     0512                     __ptext9:	
  1820 ;; *************** function _Lcd_Write_Char *****************
  1821 ;; Defined at:
  1822 ;;		line 73 in file "LCD.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  a               1    wreg     unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  a               1    4[COMMON] unsigned char 
  1827 ;;  y               1    3[COMMON] unsigned char 
  1828 ;;  temp            1    2[COMMON] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       0       0       0       0
  1839 ;;      Locals:         3       0       0       0       0
  1840 ;;      Temps:          1       0       0       0       0
  1841 ;;      Totals:         4       0       0       0       0
  1842 ;;Total ram usage:        4 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 1
  1845 ;; This function calls:
  1846 ;;		_Lcd_Port
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;;		_Lcd_Write_String
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853     0512                     _Lcd_Write_Char:	
  1854                           ;psect for function _Lcd_Write_Char
  1855                           
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1859                           ;Lcd_Write_Char@a stored from wreg
  1860     0512  00F4               	movwf	Lcd_Write_Char@a
  1861     0513                     l1022:
  1862                           
  1863                           ;LCD.c: 74:     char temp, y;;LCD.c: 75:     temp = a & 0x0F;
  1864     0513  0874               	movf	Lcd_Write_Char@a,w
  1865     0514  390F               	andlw	15
  1866     0515  00F2               	movwf	Lcd_Write_Char@temp
  1867                           
  1868                           ;LCD.c: 76:     y = a & 0xF0;
  1869     0516  0874               	movf	Lcd_Write_Char@a,w
  1870     0517  39F0               	andlw	240
  1871     0518  00F3               	movwf	Lcd_Write_Char@y
  1872     0519                     l1024:
  1873                           
  1874                           ;LCD.c: 77:     PORTDbits.RD2 = 1;
  1875     0519  1283               	bcf	3,5	;RP0=0, select bank0
  1876     051A  1303               	bcf	3,6	;RP1=0, select bank0
  1877     051B  1508               	bsf	8,2	;volatile
  1878     051C                     l1026:
  1879                           
  1880                           ;LCD.c: 78:     Lcd_Port(y >> 4);
  1881     051C  0873               	movf	Lcd_Write_Char@y,w
  1882     051D  00F1               	movwf	??_Lcd_Write_Char
  1883     051E  3004               	movlw	4
  1884     051F                     u365:
  1885     051F  1003               	clrc
  1886     0520  0CF1               	rrf	??_Lcd_Write_Char,f
  1887     0521  3EFF               	addlw	-1
  1888     0522  1D03               	skipz
  1889     0523  2D1F               	goto	u365
  1890     0524  0871               	movf	??_Lcd_Write_Char,w
  1891     0525  120A  118A  24A7  120A  118A  	fcall	_Lcd_Port
  1892     052A                     l1028:
  1893                           
  1894                           ;LCD.c: 79:     RD3 = 1;
  1895     052A  1283               	bcf	3,5	;RP0=0, select bank0
  1896     052B  1303               	bcf	3,6	;RP1=0, select bank0
  1897     052C  1588               	bsf	8,3	;volatile
  1898     052D                     l1030:
  1899                           
  1900                           ;LCD.c: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1901     052D  300D               	movlw	13
  1902     052E  00F1               	movwf	??_Lcd_Write_Char
  1903     052F                     u677:
  1904     052F  0BF1               	decfsz	??_Lcd_Write_Char,f
  1905     0530  2D2F               	goto	u677
  1906     0531                     l1032:
  1907                           
  1908                           ;LCD.c: 81:     RD3 = 0;
  1909     0531  1283               	bcf	3,5	;RP0=0, select bank0
  1910     0532  1303               	bcf	3,6	;RP1=0, select bank0
  1911     0533  1188               	bcf	8,3	;volatile
  1912     0534                     l1034:
  1913                           
  1914                           ;LCD.c: 82:     Lcd_Port(temp);
  1915     0534  0872               	movf	Lcd_Write_Char@temp,w
  1916     0535  120A  118A  24A7  120A  118A  	fcall	_Lcd_Port
  1917     053A                     l1036:
  1918                           
  1919                           ;LCD.c: 83:     RD3 = 1;
  1920     053A  1283               	bcf	3,5	;RP0=0, select bank0
  1921     053B  1303               	bcf	3,6	;RP1=0, select bank0
  1922     053C  1588               	bsf	8,3	;volatile
  1923     053D                     l1038:
  1924                           
  1925                           ;LCD.c: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1926     053D  300D               	movlw	13
  1927     053E  00F1               	movwf	??_Lcd_Write_Char
  1928     053F                     u687:
  1929     053F  0BF1               	decfsz	??_Lcd_Write_Char,f
  1930     0540  2D3F               	goto	u687
  1931     0541                     l1040:
  1932                           
  1933                           ;LCD.c: 85:     RD3 = 0;
  1934     0541  1283               	bcf	3,5	;RP0=0, select bank0
  1935     0542  1303               	bcf	3,6	;RP1=0, select bank0
  1936     0543  1188               	bcf	8,3	;volatile
  1937     0544                     l110:
  1938     0544  0008               	return
  1939     0545                     __end_of_Lcd_Write_Char:
  1940                           
  1941                           	psect	text10
  1942     0545                     __ptext10:	
  1943 ;; *************** function _Lcd_Set_Cursor *****************
  1944 ;; Defined at:
  1945 ;;		line 38 in file "LCD.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  a               1    wreg     unsigned char 
  1948 ;;  b               1    4[COMMON] unsigned char 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  a               1    6[COMMON] unsigned char 
  1951 ;;  temp            1    9[COMMON] unsigned char 
  1952 ;;  y               1    8[COMMON] unsigned char 
  1953 ;;  z               1    7[COMMON] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1963 ;;      Params:         1       0       0       0       0
  1964 ;;      Locals:         4       0       0       0       0
  1965 ;;      Temps:          1       0       0       0       0
  1966 ;;      Totals:         6       0       0       0       0
  1967 ;;Total ram usage:        6 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 2
  1970 ;; This function calls:
  1971 ;;		_Lcd_Cmd
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977     0545                     _Lcd_Set_Cursor:	
  1978                           ;psect for function _Lcd_Set_Cursor
  1979                           
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1983                           ;Lcd_Set_Cursor@a stored from wreg
  1984     0545  00F6               	movwf	Lcd_Set_Cursor@a
  1985     0546                     l1090:
  1986                           
  1987                           ;LCD.c: 39:     char temp, z, y;;LCD.c: 40:     if (a == 1) {
  1988     0546  0376               	decf	Lcd_Set_Cursor@a,w
  1989     0547  1D03               	btfss	3,2
  1990     0548  2D4A               	goto	u391
  1991     0549  2D4B               	goto	u390
  1992     054A                     u391:
  1993     054A  2D68               	goto	l1100
  1994     054B                     u390:
  1995     054B                     l1092:
  1996                           
  1997                           ;LCD.c: 41:         temp = 0x80 + b - 1;
  1998     054B  0874               	movf	Lcd_Set_Cursor@b,w
  1999     054C  3E7F               	addlw	127
  2000     054D  00F9               	movwf	Lcd_Set_Cursor@temp
  2001                           
  2002                           ;LCD.c: 42:         z = temp >> 4;
  2003     054E  0879               	movf	Lcd_Set_Cursor@temp,w
  2004     054F  00F5               	movwf	??_Lcd_Set_Cursor
  2005     0550  3004               	movlw	4
  2006     0551                     u405:
  2007     0551  1003               	clrc
  2008     0552  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2009     0553  3EFF               	addlw	-1
  2010     0554  1D03               	skipz
  2011     0555  2D51               	goto	u405
  2012     0556  0875               	movf	??_Lcd_Set_Cursor,w
  2013     0557  00F7               	movwf	Lcd_Set_Cursor@z
  2014     0558                     l1094:
  2015                           
  2016                           ;LCD.c: 43:         y = temp & 0x0F;
  2017     0558  0879               	movf	Lcd_Set_Cursor@temp,w
  2018     0559  390F               	andlw	15
  2019     055A  00F8               	movwf	Lcd_Set_Cursor@y
  2020     055B                     l1096:
  2021                           
  2022                           ;LCD.c: 44:         Lcd_Cmd(z);
  2023     055B  0877               	movf	Lcd_Set_Cursor@z,w
  2024     055C  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2025     0561                     l1098:
  2026                           
  2027                           ;LCD.c: 45:         Lcd_Cmd(y);
  2028     0561  0878               	movf	Lcd_Set_Cursor@y,w
  2029     0562  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2030                           
  2031                           ;LCD.c: 46:     } else if (a == 2) {
  2032     0567  2D8A               	goto	l104
  2033     0568                     l1100:
  2034     0568  3002               	movlw	2
  2035     0569  0676               	xorwf	Lcd_Set_Cursor@a,w
  2036     056A  1D03               	btfss	3,2
  2037     056B  2D6D               	goto	u411
  2038     056C  2D6E               	goto	u410
  2039     056D                     u411:
  2040     056D  2D8A               	goto	l104
  2041     056E                     u410:
  2042     056E                     l1102:
  2043                           
  2044                           ;LCD.c: 47:         temp = 0xC0 + b - 1;
  2045     056E  0874               	movf	Lcd_Set_Cursor@b,w
  2046     056F  3EBF               	addlw	191
  2047     0570  00F9               	movwf	Lcd_Set_Cursor@temp
  2048                           
  2049                           ;LCD.c: 48:         z = temp >> 4;
  2050     0571  0879               	movf	Lcd_Set_Cursor@temp,w
  2051     0572  00F5               	movwf	??_Lcd_Set_Cursor
  2052     0573  3004               	movlw	4
  2053     0574                     u425:
  2054     0574  1003               	clrc
  2055     0575  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2056     0576  3EFF               	addlw	-1
  2057     0577  1D03               	skipz
  2058     0578  2D74               	goto	u425
  2059     0579  0875               	movf	??_Lcd_Set_Cursor,w
  2060     057A  00F7               	movwf	Lcd_Set_Cursor@z
  2061     057B                     l1104:
  2062                           
  2063                           ;LCD.c: 49:         y = temp & 0x0F;
  2064     057B  0879               	movf	Lcd_Set_Cursor@temp,w
  2065     057C  390F               	andlw	15
  2066     057D  00F8               	movwf	Lcd_Set_Cursor@y
  2067     057E                     l1106:
  2068                           
  2069                           ;LCD.c: 50:         Lcd_Cmd(z);
  2070     057E  0877               	movf	Lcd_Set_Cursor@z,w
  2071     057F  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2072     0584                     l1108:
  2073                           
  2074                           ;LCD.c: 51:         Lcd_Cmd(y);
  2075     0584  0878               	movf	Lcd_Set_Cursor@y,w
  2076     0585  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2077     058A                     l104:
  2078     058A  0008               	return
  2079     058B                     __end_of_Lcd_Set_Cursor:
  2080                           
  2081                           	psect	text11
  2082     05E6                     __ptext11:	
  2083 ;; *************** function _Lcd_Init *****************
  2084 ;; Defined at:
  2085 ;;		line 55 in file "LCD.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0
  2101 ;;      Temps:          2       0       0       0       0
  2102 ;;      Totals:         2       0       0       0       0
  2103 ;;Total ram usage:        2 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 2
  2106 ;; This function calls:
  2107 ;;		_Lcd_Cmd
  2108 ;;		_Lcd_Port
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114     05E6                     _Lcd_Init:	
  2115                           ;psect for function _Lcd_Init
  2116                           
  2117     05E6                     l1078:	
  2118                           ;incstack = 0
  2119                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2120                           
  2121                           
  2122                           ;LCD.c: 56:     Lcd_Port(0x00);
  2123     05E6  3000               	movlw	0
  2124     05E7  120A  118A  24A7  120A  118A  	fcall	_Lcd_Port
  2125     05EC                     l1080:
  2126                           
  2127                           ;LCD.c: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2128     05EC  301A               	movlw	26
  2129     05ED  00F5               	movwf	??_Lcd_Init+1
  2130     05EE  30F8               	movlw	248
  2131     05EF  00F4               	movwf	??_Lcd_Init
  2132     05F0                     u697:
  2133     05F0  0BF4               	decfsz	??_Lcd_Init,f
  2134     05F1  2DF0               	goto	u697
  2135     05F2  0BF5               	decfsz	??_Lcd_Init+1,f
  2136     05F3  2DF0               	goto	u697
  2137     05F4  0000               	nop
  2138     05F5                     l1082:
  2139                           
  2140                           ;LCD.c: 58:     Lcd_Cmd(0x03);
  2141     05F5  3003               	movlw	3
  2142     05F6  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2143                           
  2144                           ;LCD.c: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2145     05FB  3007               	movlw	7
  2146     05FC  00F5               	movwf	??_Lcd_Init+1
  2147     05FD  307D               	movlw	125
  2148     05FE  00F4               	movwf	??_Lcd_Init
  2149     05FF                     u707:
  2150     05FF  0BF4               	decfsz	??_Lcd_Init,f
  2151     0600  2DFF               	goto	u707
  2152     0601  0BF5               	decfsz	??_Lcd_Init+1,f
  2153     0602  2DFF               	goto	u707
  2154     0603                     l1084:
  2155                           
  2156                           ;LCD.c: 60:     Lcd_Cmd(0x03);
  2157     0603  3003               	movlw	3
  2158     0604  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2159     0609                     l1086:
  2160                           
  2161                           ;LCD.c: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2162     0609  300F               	movlw	15
  2163     060A  00F5               	movwf	??_Lcd_Init+1
  2164     060B  3047               	movlw	71
  2165     060C  00F4               	movwf	??_Lcd_Init
  2166     060D                     u717:
  2167     060D  0BF4               	decfsz	??_Lcd_Init,f
  2168     060E  2E0D               	goto	u717
  2169     060F  0BF5               	decfsz	??_Lcd_Init+1,f
  2170     0610  2E0D               	goto	u717
  2171     0611  2E12               	nop2
  2172                           
  2173                           ;LCD.c: 62:     Lcd_Cmd(0x03);
  2174     0612  3003               	movlw	3
  2175     0613  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2176                           
  2177                           ;LCD.c: 64:     Lcd_Cmd(0x02);
  2178     0618  3002               	movlw	2
  2179     0619  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2180                           
  2181                           ;LCD.c: 65:     Lcd_Cmd(0x02);
  2182     061E  3002               	movlw	2
  2183     061F  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2184                           
  2185                           ;LCD.c: 66:     Lcd_Cmd(0x08);
  2186     0624  3008               	movlw	8
  2187     0625  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2188                           
  2189                           ;LCD.c: 67:     Lcd_Cmd(0x00);
  2190     062A  3000               	movlw	0
  2191     062B  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2192                           
  2193                           ;LCD.c: 68:     Lcd_Cmd(0x0C);
  2194     0630  300C               	movlw	12
  2195     0631  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2196                           
  2197                           ;LCD.c: 69:     Lcd_Cmd(0x00);
  2198     0636  3000               	movlw	0
  2199     0637  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2200                           
  2201                           ;LCD.c: 70:     Lcd_Cmd(0x06);
  2202     063C  3006               	movlw	6
  2203     063D  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2204     0642                     l107:
  2205     0642  0008               	return
  2206     0643                     __end_of_Lcd_Init:
  2207                           
  2208                           	psect	text12
  2209     046A                     __ptext12:	
  2210 ;; *************** function _Lcd_Clear *****************
  2211 ;; Defined at:
  2212 ;;		line 33 in file "LCD.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 2
  2233 ;; This function calls:
  2234 ;;		_Lcd_Cmd
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240     046A                     _Lcd_Clear:	
  2241                           ;psect for function _Lcd_Clear
  2242                           
  2243     046A                     l1088:	
  2244                           ;incstack = 0
  2245                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2246                           
  2247                           
  2248                           ;LCD.c: 34:     Lcd_Cmd(0);
  2249     046A  3000               	movlw	0
  2250     046B  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2251                           
  2252                           ;LCD.c: 35:     Lcd_Cmd(1);
  2253     0470  3001               	movlw	1
  2254     0471  120A  118A  248D  120A  118A  	fcall	_Lcd_Cmd
  2255     0476                     l98:
  2256     0476  0008               	return
  2257     0477                     __end_of_Lcd_Clear:
  2258                           
  2259                           	psect	text13
  2260     048D                     __ptext13:	
  2261 ;; *************** function _Lcd_Cmd *****************
  2262 ;; Defined at:
  2263 ;;		line 25 in file "LCD.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  a               1    wreg     unsigned char 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  a               1    3[COMMON] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       0       0       0       0
  2278 ;;      Locals:         1       0       0       0       0
  2279 ;;      Temps:          2       0       0       0       0
  2280 ;;      Totals:         3       0       0       0       0
  2281 ;;Total ram usage:        3 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 1
  2284 ;; This function calls:
  2285 ;;		_Lcd_Port
  2286 ;; This function is called by:
  2287 ;;		_Lcd_Clear
  2288 ;;		_Lcd_Set_Cursor
  2289 ;;		_Lcd_Init
  2290 ;;		_Lcd_Shift_Right
  2291 ;;		_Lcd_Shift_Left
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295     048D                     _Lcd_Cmd:	
  2296                           ;psect for function _Lcd_Cmd
  2297                           
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2301                           ;Lcd_Cmd@a stored from wreg
  2302     048D  00F3               	movwf	Lcd_Cmd@a
  2303     048E                     l1052:
  2304                           
  2305                           ;LCD.c: 26:     PORTDbits.RD2 = 0;
  2306     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2307     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2308     0490  1108               	bcf	8,2	;volatile
  2309     0491                     l1054:
  2310                           
  2311                           ;LCD.c: 27:     Lcd_Port(a);
  2312     0491  0873               	movf	Lcd_Cmd@a,w
  2313     0492  120A  118A  24A7  120A  118A  	fcall	_Lcd_Port
  2314     0497                     l1056:
  2315                           
  2316                           ;LCD.c: 28:     RD3 = 1;
  2317     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2318     0498  1303               	bcf	3,6	;RP1=0, select bank0
  2319     0499  1588               	bsf	8,3	;volatile
  2320     049A                     l1058:
  2321                           
  2322                           ;LCD.c: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2323     049A  3006               	movlw	6
  2324     049B  00F2               	movwf	??_Lcd_Cmd+1
  2325     049C  3030               	movlw	48
  2326     049D  00F1               	movwf	??_Lcd_Cmd
  2327     049E                     u727:
  2328     049E  0BF1               	decfsz	??_Lcd_Cmd,f
  2329     049F  2C9E               	goto	u727
  2330     04A0  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2331     04A1  2C9E               	goto	u727
  2332     04A2  0000               	nop
  2333     04A3                     l1060:
  2334                           
  2335                           ;LCD.c: 30:     RD3 = 0;
  2336     04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2337     04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2338     04A5  1188               	bcf	8,3	;volatile
  2339     04A6                     l95:
  2340     04A6  0008               	return
  2341     04A7                     __end_of_Lcd_Cmd:
  2342                           
  2343                           	psect	text14
  2344     04A7                     __ptext14:	
  2345 ;; *************** function _Lcd_Port *****************
  2346 ;; Defined at:
  2347 ;;		line 3 in file "LCD.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  a               1    wreg     unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  a               1    0[COMMON] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       0       0       0       0
  2362 ;;      Locals:         1       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0
  2364 ;;      Totals:         1       0       0       0       0
  2365 ;;Total ram usage:        1 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_Lcd_Cmd
  2371 ;;		_Lcd_Init
  2372 ;;		_Lcd_Write_Char
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376     04A7                     _Lcd_Port:	
  2377                           ;psect for function _Lcd_Port
  2378                           
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _Lcd_Port: [wreg]
  2382                           ;Lcd_Port@a stored from wreg
  2383     04A7  00F0               	movwf	Lcd_Port@a
  2384     04A8                     l1012:
  2385                           
  2386                           ;LCD.c: 4:     if (a & 1)
  2387     04A8  1C70               	btfss	Lcd_Port@a,0
  2388     04A9  2CAB               	goto	u321
  2389     04AA  2CAC               	goto	u320
  2390     04AB                     u321:
  2391     04AB  2CB0               	goto	l84
  2392     04AC                     u320:
  2393     04AC                     l1014:
  2394                           
  2395                           ;LCD.c: 5:         RD4 = 1;
  2396     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2397     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2398     04AE  1608               	bsf	8,4	;volatile
  2399     04AF  2CB3               	goto	l85
  2400     04B0                     l84:	
  2401                           ;LCD.c: 6:     else
  2402                           
  2403                           
  2404                           ;LCD.c: 7:         RD4 = 0;
  2405     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2406     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2407     04B2  1208               	bcf	8,4	;volatile
  2408     04B3                     l85:
  2409                           
  2410                           ;LCD.c: 9:     if (a & 2)
  2411     04B3  1CF0               	btfss	Lcd_Port@a,1
  2412     04B4  2CB6               	goto	u331
  2413     04B5  2CB7               	goto	u330
  2414     04B6                     u331:
  2415     04B6  2CB9               	goto	l86
  2416     04B7                     u330:
  2417     04B7                     l1016:
  2418                           
  2419                           ;LCD.c: 10:         RD5 = 1;
  2420     04B7  1688               	bsf	8,5	;volatile
  2421     04B8  2CBA               	goto	l87
  2422     04B9                     l86:	
  2423                           ;LCD.c: 11:     else
  2424                           
  2425                           
  2426                           ;LCD.c: 12:         RD5 = 0;
  2427     04B9  1288               	bcf	8,5	;volatile
  2428     04BA                     l87:
  2429                           
  2430                           ;LCD.c: 14:     if (a & 4)
  2431     04BA  1D70               	btfss	Lcd_Port@a,2
  2432     04BB  2CBD               	goto	u341
  2433     04BC  2CBE               	goto	u340
  2434     04BD                     u341:
  2435     04BD  2CC0               	goto	l88
  2436     04BE                     u340:
  2437     04BE                     l1018:
  2438                           
  2439                           ;LCD.c: 15:         RD6 = 1;
  2440     04BE  1708               	bsf	8,6	;volatile
  2441     04BF  2CC1               	goto	l89
  2442     04C0                     l88:	
  2443                           ;LCD.c: 16:     else
  2444                           
  2445                           
  2446                           ;LCD.c: 17:         RD6 = 0;
  2447     04C0  1308               	bcf	8,6	;volatile
  2448     04C1                     l89:
  2449                           
  2450                           ;LCD.c: 19:     if (a & 8)
  2451     04C1  1DF0               	btfss	Lcd_Port@a,3
  2452     04C2  2CC4               	goto	u351
  2453     04C3  2CC5               	goto	u350
  2454     04C4                     u351:
  2455     04C4  2CC7               	goto	l90
  2456     04C5                     u350:
  2457     04C5                     l1020:
  2458                           
  2459                           ;LCD.c: 20:         RD7 = 1;
  2460     04C5  1788               	bsf	8,7	;volatile
  2461     04C6  2CC8               	goto	l92
  2462     04C7                     l90:	
  2463                           ;LCD.c: 21:     else
  2464                           
  2465                           
  2466                           ;LCD.c: 22:         RD7 = 0;
  2467     04C7  1388               	bcf	8,7	;volatile
  2468     04C8                     l92:
  2469     04C8  0008               	return
  2470     04C9                     __end_of_Lcd_Port:
  2471     007E                     btemp	set	126	;btemp
  2472     007E                     wtemp0	set	126
  2473                           
  2474                           	psect	idloc
  2475                           
  2476                           ;Config register IDLOC0 @ 0x2000
  2477                           ;	unspecified, using default values
  2478     2000                     	org	8192
  2479     2000  3FFF               	dw	16383
  2480                           
  2481                           ;Config register IDLOC1 @ 0x2001
  2482                           ;	unspecified, using default values
  2483     2001                     	org	8193
  2484     2001  3FFF               	dw	16383
  2485                           
  2486                           ;Config register IDLOC2 @ 0x2002
  2487                           ;	unspecified, using default values
  2488     2002                     	org	8194
  2489     2002  3FFF               	dw	16383
  2490                           
  2491                           ;Config register IDLOC3 @ 0x2003
  2492                           ;	unspecified, using default values
  2493     2003                     	org	8195
  2494     2003  3FFF               	dw	16383
  2495                           
  2496                           	psect	config
  2497                           
  2498                           ;Config register CONFIG1 @ 0x2007
  2499                           ;	Oscillator Selection bits
  2500                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2501                           ;	Watchdog Timer Enable bit
  2502                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2503                           ;	Power-up Timer Enable bit
  2504                           ;	PWRTE = OFF, PWRT disabled
  2505                           ;	RE3/MCLR pin function select bit
  2506                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2507                           ;	Code Protection bit
  2508                           ;	CP = OFF, Program memory code protection is disabled
  2509                           ;	Data Code Protection bit
  2510                           ;	CPD = OFF, Data memory code protection is disabled
  2511                           ;	Brown Out Reset Selection bits
  2512                           ;	BOREN = OFF, BOR disabled
  2513                           ;	Internal External Switchover bit
  2514                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2515                           ;	Fail-Safe Clock Monitor Enabled bit
  2516                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2517                           ;	Low Voltage Programming Enable bit
  2518                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2519                           ;	In-Circuit Debugger Mode bit
  2520                           ;	DEBUG = 0x1, unprogrammed default
  2521     2007                     	org	8199
  2522     2007  20D6               	dw	8406
  2523                           
  2524                           ;Config register CONFIG2 @ 0x2008
  2525                           ;	Brown-out Reset Selection bit
  2526                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2527                           ;	Flash Program Memory Self Write Enable bits
  2528                           ;	WRT = OFF, Write protection off
  2529     2008                     	org	8200
  2530     2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _setup->_spiInit
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3589
                                              2 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 13:01:47 2023

                       pc 0002               _SSPSTATbits 0094                        l90 04C7  
                      l67 04EC                        l92 04C8                        l84 04B0  
                      l85 04B3                        l86 04B9                        l87 04BA  
                      l95 04A6                        l88 04C0                        l89 04C1  
                      l98 0476              ___awdiv@sign 0076                        fsr 0004  
                     l110 0544                       l104 058A                       l107 0642  
                     l116 0511                       l142 045A                       l145 0460  
                     l138 0487                       l139 048C                       l156 0469  
                     l148 0459                       _ADC 0028                       l408 05E5  
                     l395 06A9                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u320 04AC                       u321 04AB                       u330 04B7  
                     u410 056E                       u331 04B6                       u411 056D  
                     u340 04BE                       u500 0687                       u341 04BD  
                     u405 0551                       u501 0686                       u350 04C5  
                     u430 0511                       u351 04C4                       u431 0510  
                     u520 069B                       u440 0648                       u425 0574  
                     u521 069A                       u505 0683                       u441 0647  
                     u530 06A0                       u450 0653                       u610 05D7  
                     u370 047F                       u531 069F                       u515 068F  
                     u451 0652                       u611 05D6                       u371 047E  
                     u460 0664                       u620 05DC                       u540 0592  
                     u380 0460                       u365 051F                       u461 0663  
                     u621 05DB                       u605 05CB                       u541 0591  
                     u381 045F                       u390 054B                       u550 059D  
                     u391 054A                       u551 059C                       u480 0676  
                     u560 05A8                       u481 0675                       u561 05A7  
                     u707 05FF                       u475 0668                       u580 05BA  
                     u717 060D                       u581 05B9                       u637 06CE  
                     u590 05C4                       u727 049E                       u495 0677  
                     u591 05C3                       u575 05AC                       u647 06E6  
                     u657 06F2                       u595 05C0                       u667 070A  
                     u677 052F                       u687 053F                       u697 05F0  
                     fsr0 0004              ___awmod@sign 002A                      l1020 04C5  
                    l1012 04A8                      l1100 0568                      l1014 04AC  
                    l1102 056E                      l1030 052D                      l1022 0513  
                    l1110 04EE                      l1016 04B7                      l1104 057B  
                    l1040 0541                      l1032 0531                      l1024 0519  
                    l1112 04F1                      l1200 05D7                      l1120 0461  
                    l1018 04BE                      l1106 057E                      l1034 0534  
                    l1026 051C                      l1114 04FE                      l1130 0648  
                    l1202 05DC                      l1050 0486                      l1042 0478  
                    l1122 0466                      l1210 06C1                      l1060 04A3  
                    l1052 048E                      l1108 0584                      l1036 053A  
                    l1028 052A                      l1116 0504                      l1140 065C  
                    l1132 064D                      l1204 05E1                      l1044 047F  
                    l1220 06E2                      l1212 06C7                      l1054 0491  
                    l1038 053D                      l1150 0672                      l1142 065E  
                    l1134 064F                      l1126 0643                      l1046 0481  
                    l1070 04D9                      l1062 045A                      l1118 0455  
                    l1230 06FE                      l1222 06EA                      l1214 06CA  
                    l1056 0497                      l1080 05EC                      l1160 0695  
                    l1152 0676                      l1144 0664                      l1136 0653  
                    l1128 0644                      l1048 0483                      l1072 04DC  
                    l1064 04C9                      l1240 0727                      l1232 0706  
                    l1224 06ED                      l1216 06D2                      l1208 06AA  
                    l1058 049A                      l1082 05F5                      l1090 0546  
                    l1154 0687                      l1146 0667                      l1162 069B  
                    l1138 0658                      l1170 058B                      l1074 04E2  
                    l1066 04D5                      l1250 0776                      l1242 0748  
                    l1234 070E                      l1226 06EE                      l1218 06DA  
                    l1084 0603                      l1092 054B                      l1164 06A0  
                    l1156 068D                      l1148 066E                      l1180 059D  
                    l1172 058E                      l1076 04E3                      l1068 04D8  
                    l1260 07D2                      l1252 077F                      l1244 075C  
                    l1236 0711                      l1228 06F6                      l1086 0609  
                    l1078 05E6                      l1094 0558                      l1166 06A5  
                    l1158 068E                      l1190 05B6                      l1182 05A2  
                    l1174 0592                      l1262 07DB                      l1254 0795  
                    l1246 0764                      l1238 0713                      l1088 046A  
                    l1096 055B                      l1192 05BA                      l1184 05A8  
                    l1176 0597                      l1264 07E4                      l1256 07B6  
                    l1248 076D                      l1098 0561                      l1194 05C4  
                    l1186 05AB                      l1178 0599                      l1258 07CA  
                    l1196 05CA                      l1188 05B2                      l1198 05D1  
                    _ADC1 0027                      STR_1 0009         ?_Lcd_Write_String 0070  
                    _main 06AA                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 04A7                     ?_main 0070  
         __end_of___awdiv 06AA           __end_of___awmod 05E6                     _ANSEL 0188  
         ___awdiv@divisor 0070           ___awdiv@counter 0075                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
                   _valor 0026                     _setup 04C9                     pclath 000A  
         __end_of_spiInit 048D           __end_of_spiRead 046A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 0643          __end_of_Lcd_Port 04C9  
         __initialization 07F1              __end_of_main 07F1                    ??_main 002B  
        ___awdiv@dividend 0072                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013                 ??___awdiv 0074  
               ??___awmod 007D          ___awdiv@quotient 0077           ___awmod@divisor 0079  
         ___awmod@counter 0029                    _unidad 0023          __end_of_spiWrite 045A  
               ??_spiInit 0073                 ??_spiRead 0070           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 0477            __pcstackCOMMON 0070  
           __end_of_setup 04ED            _Lcd_Set_Cursor 0545                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0074                __pbssBANK0 0020  
              __pmaintext 06AA    __end_of_Lcd_Set_Cursor 058B                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 0512                   _Lcd_Cmd 048D                 ?_spiWrite 0070  
                 ___awdiv 0643                   ___awmod 058B                   _decenas 0024  
         ?_Lcd_Set_Cursor 0074                   __ptext1 0454                   __ptext2 0461  
                 __ptext3 045A                   __ptext4 04C9                   __ptext5 0477  
                 __ptext6 058B                   __ptext7 0643                   __ptext8 04ED  
                 __ptext9 0512          ___awmod@dividend 007B                   _spiInit 0477  
                 _spiRead 0461                   _unidad1 0020    __end_of_Lcd_Write_Char 0545  
    end_of_initialization 07FC                ??_spiWrite 0070                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _PORTDbits 0008                 _TRISCbits 0087  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077  
       Lcd_Write_String@i 0075                 _Lcd_Clear 046A            _spiReceiveWait 045A  
        _Lcd_Write_String 04ED       start_initialization 07F1    __end_of_spiReceiveWait 0461  
              ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___latbits 0002             __pcstackBANK0 0029                  ?_Lcd_Cmd 0070  
         ?_spiReceiveWait 0070                 _centenas1 0022          ??_Lcd_Set_Cursor 0075  
                ?___awdiv 0070                  ?___awmod 0079                 __pstrings 0003  
                ?_spiInit 0070                  ?_spiRead 0070      spiInit@sTransmitEdge 0072  
      spiInit@sDataSample 0070                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
             __stringbase 0008          ??_Lcd_Write_Char 0071                  _Lcd_Init 05E6  
                _Lcd_Port 04A7  __end_of_Lcd_Write_String 0512        __end_of__stringtab 0009  
                _decenas1 0021                  _centenas 0025                  __ptext10 0545  
                __ptext11 05E6                  __ptext12 046A                  __ptext13 048D  
                __ptext14 04A7                  _spiWrite 0454              spiInit@sType 0073  
       spiInit@sClockIdle 0071        Lcd_Write_Char@temp 0072          ??_spiReceiveWait 0070  
               stringcode 0003                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                stringdir 0003                  stringtab 0003  
