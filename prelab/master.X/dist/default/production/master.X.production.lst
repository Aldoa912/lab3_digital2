

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 02 23:26:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     008F                     	;# 
   108     0090                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0095                     	;# 
   116     0096                     	;# 
   117     0097                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     0105                     	;# 
   127     0107                     	;# 
   128     0108                     	;# 
   129     0109                     	;# 
   130     010C                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0185                     	;# 
   136     0187                     	;# 
   137     0188                     	;# 
   138     0189                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     008F                     	;# 
   186     0090                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0095                     	;# 
   194     0096                     	;# 
   195     0097                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009A                     	;# 
   199     009B                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009E                     	;# 
   203     009F                     	;# 
   204     0105                     	;# 
   205     0107                     	;# 
   206     0108                     	;# 
   207     0109                     	;# 
   208     010C                     	;# 
   209     010C                     	;# 
   210     010D                     	;# 
   211     010E                     	;# 
   212     010F                     	;# 
   213     0185                     	;# 
   214     0187                     	;# 
   215     0188                     	;# 
   216     0189                     	;# 
   217     018C                     	;# 
   218     018D                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     000E                     	;# 
   234     000E                     	;# 
   235     000F                     	;# 
   236     0010                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0015                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001B                     	;# 
   250     001C                     	;# 
   251     001D                     	;# 
   252     001E                     	;# 
   253     001F                     	;# 
   254     0081                     	;# 
   255     0085                     	;# 
   256     0086                     	;# 
   257     0087                     	;# 
   258     0088                     	;# 
   259     0089                     	;# 
   260     008C                     	;# 
   261     008D                     	;# 
   262     008E                     	;# 
   263     008F                     	;# 
   264     0090                     	;# 
   265     0091                     	;# 
   266     0092                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0095                     	;# 
   272     0096                     	;# 
   273     0097                     	;# 
   274     0098                     	;# 
   275     0099                     	;# 
   276     009A                     	;# 
   277     009B                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     0105                     	;# 
   283     0107                     	;# 
   284     0108                     	;# 
   285     0109                     	;# 
   286     010C                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     0185                     	;# 
   292     0187                     	;# 
   293     0188                     	;# 
   294     0189                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297     0000                     	;# 
   298     0001                     	;# 
   299     0002                     	;# 
   300     0003                     	;# 
   301     0004                     	;# 
   302     0005                     	;# 
   303     0006                     	;# 
   304     0007                     	;# 
   305     0008                     	;# 
   306     0009                     	;# 
   307     000A                     	;# 
   308     000B                     	;# 
   309     000C                     	;# 
   310     000D                     	;# 
   311     000E                     	;# 
   312     000E                     	;# 
   313     000F                     	;# 
   314     0010                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0013                     	;# 
   318     0014                     	;# 
   319     0015                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0017                     	;# 
   323     0018                     	;# 
   324     0019                     	;# 
   325     001A                     	;# 
   326     001B                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001D                     	;# 
   330     001E                     	;# 
   331     001F                     	;# 
   332     0081                     	;# 
   333     0085                     	;# 
   334     0086                     	;# 
   335     0087                     	;# 
   336     0088                     	;# 
   337     0089                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     008F                     	;# 
   342     0090                     	;# 
   343     0091                     	;# 
   344     0092                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0094                     	;# 
   349     0095                     	;# 
   350     0096                     	;# 
   351     0097                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009A                     	;# 
   355     009B                     	;# 
   356     009C                     	;# 
   357     009D                     	;# 
   358     009E                     	;# 
   359     009F                     	;# 
   360     0105                     	;# 
   361     0107                     	;# 
   362     0108                     	;# 
   363     0109                     	;# 
   364     010C                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     010E                     	;# 
   368     010F                     	;# 
   369     0185                     	;# 
   370     0187                     	;# 
   371     0188                     	;# 
   372     0189                     	;# 
   373     018C                     	;# 
   374     018D                     	;# 
   375                           
   376                           	psect	strings
   377     0003                     __pstrings:
   378     0003                     stringtab:
   379     0003                     __stringtab:
   380                           
   381                           ;	String table - string pointers are 1 byte each
   382     0003  1BFF               	btfsc	btemp+1,7
   383     0004  280D               	ljmp	stringcode
   384     0005  1383               	bcf	3,7
   385     0006  187F               	btfsc	btemp+1,0
   386     0007  1783               	bsf	3,7
   387     0008  0800               	movf	0,w
   388     0009  0A84               	incf	4,f
   389     000A  1903               	skipnz
   390     000B  0AFF               	incf	btemp+1,f
   391     000C  0008               	return
   392     000D                     stringcode:
   393     000D                     stringdir:
   394     000D  3000               	movlw	high stringdir
   395     000E  008A               	movwf	10
   396     000F  0804               	movf	4,w
   397     0010  0A84               	incf	4,f
   398     0011  0782               	addwf	2,f
   399     0012                     __stringbase:
   400     0012  3400               	retlw	0
   401     0013                     __end_of__stringtab:
   402     0013                     _dpowers:
   403     0013  3401               	retlw	1
   404     0014  3400               	retlw	0
   405     0015  340A               	retlw	10
   406     0016  3400               	retlw	0
   407     0017  3464               	retlw	100
   408     0018  3400               	retlw	0
   409     0019  34E8               	retlw	232
   410     001A  3403               	retlw	3
   411     001B  3410               	retlw	16
   412     001C  3427               	retlw	39
   413     001D                     __end_of_dpowers:
   414     0013                     _SSPBUF	set	19
   415     0014                     _SSPCON	set	20
   416     0008                     _PORTDbits	set	8
   417     0008                     _PORTD	set	8
   418     0006                     _PORTB	set	6
   419     0007                     _PORTCbits	set	7
   420     0043                     _RD3	set	67
   421     0047                     _RD7	set	71
   422     0046                     _RD6	set	70
   423     0045                     _RD5	set	69
   424     0044                     _RD4	set	68
   425     0094                     _SSPSTATbits	set	148
   426     0094                     _SSPSTAT	set	148
   427     008F                     _OSCCONbits	set	143
   428     0087                     _TRISCbits	set	135
   429     0088                     _TRISD	set	136
   430     0086                     _TRISB	set	134
   431     043B                     _TRISC3	set	1083
   432     043D                     _TRISC5	set	1085
   433     0189                     _ANSELH	set	393
   434     0188                     _ANSEL	set	392
   435     001D                     STR_2:
   436     001D  3441               	retlw	65	;'A'
   437     001E  3444               	retlw	68	;'D'
   438     001F  3443               	retlw	67	;'C'
   439     0020  3400               	retlw	0
   440     0021                     STR_1:
   441     0021  3425               	retlw	37	;'%'
   442     0022  342E               	retlw	46	;'.'
   443     0023  3475               	retlw	117	;'u'
   444     0024  3400               	retlw	0
   445                           
   446                           	psect	cinit
   447     07F7                     start_initialization:	
   448                           ; #config settings
   449                           
   450     07F7                     __initialization:
   451                           
   452                           ; Clear objects allocated to BANK0
   453     07F7  1283               	bcf	3,5	;RP0=0, select bank0
   454     07F8  1303               	bcf	3,6	;RP1=0, select bank0
   455     07F9  01AE               	clrf	__pbssBANK0& (0+127)
   456     07FA  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   457     07FB  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   458     07FC                     end_of_initialization:	
   459                           ;End of C runtime variable initialization code
   460                           
   461     07FC                     __end_of__initialization:
   462     07FC  0183               	clrf	3
   463     07FD  120A  118A  2ECD   	ljmp	_main	;jump to C main() function
   464                           
   465                           	psect	bssBANK0
   466     002E                     __pbssBANK0:
   467     002E                     _ADC:
   468     002E                     	ds	2
   469     0030                     _valor:
   470     0030                     	ds	1
   471                           
   472                           	psect	cstackCOMMON
   473     0070                     __pcstackCOMMON:
   474     0070                     ?_setup:
   475     0070                     ?_Lcd_Init:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_spiRead:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ??_spiRead:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_Lcd_Clear:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?_spiInit:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_main:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_Lcd_Port:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ??_Lcd_Port:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_Lcd_Cmd:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_Lcd_Write_Char:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_spiReceiveWait:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ??_spiReceiveWait:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?___lwdiv:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     Lcd_Port@a:	
   515                           ; 2 bytes @ 0x0
   516                           
   517     0070                     spiInit@sDataSample:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ___lwdiv@divisor:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 2 bytes @ 0x0
   525     0070                     	ds	1
   526     0071                     ??_Lcd_Cmd:
   527     0071                     ??_Lcd_Write_Char:	
   528                           ; 1 bytes @ 0x1
   529                           
   530     0071                     spiInit@sClockIdle:	
   531                           ; 1 bytes @ 0x1
   532                           
   533                           
   534                           ; 1 bytes @ 0x1
   535     0071                     	ds	1
   536     0072                     Lcd_Write_Char@temp:
   537     0072                     spiInit@sTransmitEdge:	
   538                           ; 1 bytes @ 0x2
   539                           
   540     0072                     ___lwdiv@dividend:	
   541                           ; 1 bytes @ 0x2
   542                           
   543                           
   544                           ; 2 bytes @ 0x2
   545     0072                     	ds	1
   546     0073                     ??_spiInit:
   547     0073                     Lcd_Cmd@a:	
   548                           ; 1 bytes @ 0x3
   549                           
   550     0073                     Lcd_Write_Char@y:	
   551                           ; 1 bytes @ 0x3
   552                           
   553     0073                     spiInit@sType:	
   554                           ; 1 bytes @ 0x3
   555                           
   556                           
   557                           ; 1 bytes @ 0x3
   558     0073                     	ds	1
   559     0074                     ??_setup:
   560     0074                     ??_Lcd_Init:	
   561                           ; 1 bytes @ 0x4
   562                           
   563     0074                     ??_Lcd_Clear:	
   564                           ; 1 bytes @ 0x4
   565                           
   566     0074                     ?_Lcd_Set_Cursor:	
   567                           ; 1 bytes @ 0x4
   568                           
   569     0074                     ??___lwdiv:	
   570                           ; 1 bytes @ 0x4
   571                           
   572     0074                     Lcd_Set_Cursor@b:	
   573                           ; 1 bytes @ 0x4
   574                           
   575     0074                     Lcd_Write_Char@a:	
   576                           ; 1 bytes @ 0x4
   577                           
   578                           
   579                           ; 1 bytes @ 0x4
   580     0074                     	ds	1
   581     0075                     ??_Lcd_Set_Cursor:
   582     0075                     ?_Lcd_Write_String:	
   583                           ; 1 bytes @ 0x5
   584                           
   585     0075                     Lcd_Write_String@a:	
   586                           ; 1 bytes @ 0x5
   587                           
   588     0075                     ___lwdiv@quotient:	
   589                           ; 2 bytes @ 0x5
   590                           
   591                           
   592                           ; 2 bytes @ 0x5
   593     0075                     	ds	1
   594     0076                     Lcd_Set_Cursor@a:
   595                           
   596                           ; 1 bytes @ 0x6
   597     0076                     	ds	1
   598     0077                     ??_Lcd_Write_String:
   599     0077                     Lcd_Set_Cursor@z:	
   600                           ; 1 bytes @ 0x7
   601                           
   602     0077                     ___lwdiv@counter:	
   603                           ; 1 bytes @ 0x7
   604                           
   605                           
   606                           ; 1 bytes @ 0x7
   607     0077                     	ds	1
   608     0078                     ?___lwmod:
   609     0078                     Lcd_Set_Cursor@y:	
   610                           ; 2 bytes @ 0x8
   611                           
   612     0078                     ___lwmod@divisor:	
   613                           ; 1 bytes @ 0x8
   614                           
   615                           
   616                           ; 2 bytes @ 0x8
   617     0078                     	ds	1
   618     0079                     Lcd_Set_Cursor@temp:
   619                           
   620                           ; 1 bytes @ 0x9
   621     0079                     	ds	1
   622     007A                     Lcd_Write_String@i:
   623     007A                     ___lwmod@dividend:	
   624                           ; 2 bytes @ 0xA
   625                           
   626                           
   627                           ; 2 bytes @ 0xA
   628     007A                     	ds	2
   629     007C                     ??___lwmod:
   630                           
   631                           ; 1 bytes @ 0xC
   632     007C                     	ds	1
   633     007D                     ___lwmod@counter:
   634                           
   635                           ; 1 bytes @ 0xD
   636     007D                     	ds	1
   637                           
   638                           	psect	cstackBANK0
   639     0020                     __pcstackBANK0:
   640     0020                     ?_sprintf:
   641     0020                     sprintf@sp:	
   642                           ; 2 bytes @ 0x0
   643                           
   644                           
   645                           ; 2 bytes @ 0x0
   646     0020                     	ds	2
   647     0022                     sprintf@f:
   648                           
   649                           ; 1 bytes @ 0x2
   650     0022                     	ds	2
   651     0024                     ??_sprintf:
   652                           
   653                           ; 1 bytes @ 0x4
   654     0024                     	ds	3
   655     0027                     sprintf@flag:
   656                           
   657                           ; 1 bytes @ 0x7
   658     0027                     	ds	1
   659     0028                     sprintf@ap:
   660                           
   661                           ; 1 bytes @ 0x8
   662     0028                     	ds	1
   663     0029                     sprintf@val:
   664                           
   665                           ; 2 bytes @ 0x9
   666     0029                     	ds	2
   667     002B                     sprintf@prec:
   668                           
   669                           ; 1 bytes @ 0xB
   670     002B                     	ds	1
   671     002C                     sprintf@c:
   672                           
   673                           ; 1 bytes @ 0xC
   674     002C                     	ds	1
   675     002D                     ??_main:
   676                           
   677                           ; 1 bytes @ 0xD
   678     002D                     	ds	1
   679                           
   680                           	psect	maintext
   681     06CD                     __pmaintext:	
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 59 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : B00/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          0       1       0       0       0
   704 ;;      Totals:         0       1       0       0       0
   705 ;;Total ram usage:        1 bytes
   706 ;; Hardware stack levels required when called: 3
   707 ;; This function calls:
   708 ;;		_Lcd_Clear
   709 ;;		_Lcd_Init
   710 ;;		_Lcd_Set_Cursor
   711 ;;		_Lcd_Write_String
   712 ;;		_setup
   713 ;;		_spiRead
   714 ;;		_sprintf
   715 ;; This function is called by:
   716 ;;		Startup code after reset
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720     06CD                     _main:	
   721                           ;psect for function _main
   722                           
   723     06CD                     l1243:	
   724                           ;incstack = 0
   725                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   726                           
   727                           
   728                           ;main.c: 60:     setup();
   729     06CD  120A  118A  2514  120A  118A  	fcall	_setup
   730                           
   731                           ;main.c: 61:     Lcd_Init();
   732     06D2  120A  118A  2670  120A  118A  	fcall	_Lcd_Init
   733     06D7                     l1245:
   734                           
   735                           ;main.c: 66:         PORTCbits.RC2 = 0;
   736     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   737     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   738     06D9  1107               	bcf	7,2	;volatile
   739     06DA                     l1247:
   740                           
   741                           ;main.c: 67:         _delay((unsigned long)((1)*(4000000/4000.0)));
   742     06DA  30C7               	movlw	199
   743     06DB  1283               	bcf	3,5	;RP0=0, select bank0
   744     06DC  1303               	bcf	3,6	;RP1=0, select bank0
   745     06DD  00AD               	movwf	??_main
   746     06DE                     u657:
   747     06DE  2EDF               	nop2
   748     06DF  0BAD               	decfsz	??_main,f
   749     06E0  2EDE               	goto	u657
   750     06E1  2EE2               	nop2
   751     06E2                     l1249:
   752                           
   753                           ;main.c: 69:         PORTB = spiRead();
   754     06E2  120A  118A  24AC  120A  118A  	fcall	_spiRead
   755     06E7  1283               	bcf	3,5	;RP0=0, select bank0
   756     06E8  1303               	bcf	3,6	;RP1=0, select bank0
   757     06E9  0086               	movwf	6	;volatile
   758                           
   759                           ;main.c: 71:         _delay((unsigned long)((1)*(4000000/4000.0)));
   760     06EA  30C7               	movlw	199
   761     06EB  1283               	bcf	3,5	;RP0=0, select bank0
   762     06EC  1303               	bcf	3,6	;RP1=0, select bank0
   763     06ED  00AD               	movwf	??_main
   764     06EE                     u667:
   765     06EE  2EEF               	nop2
   766     06EF  0BAD               	decfsz	??_main,f
   767     06F0  2EEE               	goto	u667
   768     06F1  2EF2               	nop2
   769     06F2                     l1251:
   770                           
   771                           ;main.c: 72:         PORTCbits.RC2 = 1;
   772     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   773     06F3  1303               	bcf	3,6	;RP1=0, select bank0
   774     06F4  1507               	bsf	7,2	;volatile
   775     06F5                     l1253:
   776                           
   777                           ;main.c: 74:         sprintf(ADC, "%.u", valor);
   778     06F5  3000               	movlw	0
   779     06F6  00A0               	movwf	sprintf@sp
   780     06F7  3000               	movlw	0
   781     06F8  00A1               	movwf	sprintf@sp+1
   782     06F9  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   783     06FA  00A2               	movwf	sprintf@f
   784     06FB  3030               	movlw	(low (_valor| 0))& (0+255)
   785     06FC  00A3               	movwf	low ((?_sprintf| 0+3))
   786     06FD  120A  118A  272D  120A  118A  	fcall	_sprintf
   787     0702                     l1255:
   788                           
   789                           ;main.c: 77:         Lcd_Clear();
   790     0702  120A  118A  24B5  120A  118A  	fcall	_Lcd_Clear
   791     0707                     l1257:
   792                           
   793                           ;main.c: 78:         Lcd_Set_Cursor(1,1);
   794     0707  01F4               	clrf	Lcd_Set_Cursor@b
   795     0708  0AF4               	incf	Lcd_Set_Cursor@b,f
   796     0709  3001               	movlw	1
   797     070A  120A  118A  262A  120A  118A  	fcall	_Lcd_Set_Cursor
   798     070F                     l1259:
   799                           
   800                           ;main.c: 79:         Lcd_Write_String("ADC");
   801     070F  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   802     0710  00F5               	movwf	Lcd_Write_String@a
   803     0711  3080               	movlw	128
   804     0712  00F6               	movwf	Lcd_Write_String@a+1
   805     0713  120A  118A  25A4  120A  118A  	fcall	_Lcd_Write_String
   806     0718                     l1261:
   807                           
   808                           ;main.c: 80:         Lcd_Set_Cursor(2,1);
   809     0718  01F4               	clrf	Lcd_Set_Cursor@b
   810     0719  0AF4               	incf	Lcd_Set_Cursor@b,f
   811     071A  3002               	movlw	2
   812     071B  120A  118A  262A  120A  118A  	fcall	_Lcd_Set_Cursor
   813     0720                     l1263:
   814                           
   815                           ;main.c: 81:         Lcd_Write_String(valor);
   816     0720  3030               	movlw	(low (_valor| 0))& (0+255)
   817     0721  00F5               	movwf	Lcd_Write_String@a
   818     0722  3000               	movlw	0
   819     0723  00F6               	movwf	Lcd_Write_String@a+1
   820     0724  120A  118A  25A4  120A  118A  	fcall	_Lcd_Write_String
   821     0729  2ED7               	goto	l1245
   822     072A  120A  118A  2800   	ljmp	start
   823     072D                     __end_of_main:
   824                           
   825                           	psect	text1
   826     072D                     __ptext1:	
   827 ;; *************** function _sprintf *****************
   828 ;; Defined at:
   829 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  sp              2    0[BANK0 ] PTR unsigned char 
   832 ;;		 -> NULL(0), RAM(512), 
   833 ;;  f               1    2[BANK0 ] PTR const unsigned char 
   834 ;;		 -> STR_1(4), 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  tmpval          4    0        struct .
   837 ;;  val             2    9[BANK0 ] unsigned int 
   838 ;;  cp              2    0        PTR const unsigned char 
   839 ;;  len             2    0        unsigned int 
   840 ;;  c               1   12[BANK0 ] unsigned char 
   841 ;;  prec            1   11[BANK0 ] char 
   842 ;;  ap              1    8[BANK0 ] PTR void [1]
   843 ;;		 -> ?_sprintf(2), 
   844 ;;  flag            1    7[BANK0 ] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2    0[BANK0 ] int 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       4       0       0       0
   855 ;;      Locals:         0       6       0       0       0
   856 ;;      Temps:          0       3       0       0       0
   857 ;;      Totals:         0      13       0       0       0
   858 ;;Total ram usage:       13 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 1
   861 ;; This function calls:
   862 ;;		___lwdiv
   863 ;;		___lwmod
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869     072D                     _sprintf:	
   870                           ;psect for function _sprintf
   871                           
   872     072D                     l1161:	
   873                           ;incstack = 0
   874                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   875                           
   876                           
   877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   878     072D  3023               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
   879     072E  1283               	bcf	3,5	;RP0=0, select bank0
   880     072F  1303               	bcf	3,6	;RP1=0, select bank0
   881     0730  00A8               	movwf	sprintf@ap
   882                           
   883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   884     0731  2FE0               	goto	l1203
   885     0732                     l1163:
   886                           
   887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   888     0732  3025               	movlw	37
   889     0733  062C               	xorwf	sprintf@c,w
   890     0734  1903               	btfsc	3,2
   891     0735  2F37               	goto	u531
   892     0736  2F38               	goto	u530
   893     0737                     u531:
   894     0737  2F46               	goto	l1169
   895     0738                     u530:
   896     0738                     l1165:
   897                           
   898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   899     0738  0820               	movf	sprintf@sp,w
   900     0739  0084               	movwf	4
   901     073A  1783               	bsf	3,7
   902     073B  1C21               	btfss	sprintf@sp+1,0
   903     073C  1383               	bcf	3,7
   904     073D  082C               	movf	sprintf@c,w
   905     073E  0080               	movwf	0
   906     073F                     l1167:
   907     073F  3001               	movlw	1
   908     0740  07A0               	addwf	sprintf@sp,f
   909     0741  1803               	skipnc
   910     0742  0AA1               	incf	sprintf@sp+1,f
   911     0743  3000               	movlw	0
   912     0744  07A1               	addwf	sprintf@sp+1,f
   913                           
   914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   915     0745  2FE0               	goto	l1203
   916     0746                     l1169:
   917                           
   918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   919     0746  01A7               	clrf	sprintf@flag
   920                           
   921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   922     0747  2F4D               	goto	l1175
   923     0748                     l1171:
   924                           
   925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
   926     0748  30C0               	movlw	192
   927     0749  00A4               	movwf	??_sprintf
   928     074A  0824               	movf	??_sprintf,w
   929     074B  04A7               	iorwf	sprintf@flag,f
   930                           
   931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
   932     074C  2F67               	goto	l1177
   933     074D                     l1175:
   934     074D  3001               	movlw	1
   935     074E  07A2               	addwf	sprintf@f,f
   936     074F  30FF               	movlw	-1
   937     0750  0722               	addwf	sprintf@f,w
   938     0751  0084               	movwf	4
   939     0752  120A  118A  200D  120A  118A  	fcall	stringdir
   940     0757  00AC               	movwf	sprintf@c
   941     0758  00A4               	movwf	??_sprintf
   942     0759  01A5               	clrf	??_sprintf+1
   943                           
   944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   945                           ; Switch size 1, requested type "simple"
   946                           ; Number of cases is 1, Range of values is 0 to 0
   947                           ; switch strategies available:
   948                           ; Name         Instructions Cycles
   949                           ; simple_byte            4     3 (average)
   950                           ; direct_byte           11     8 (fixed)
   951                           ; jumptable            260     6 (fixed)
   952                           ;	Chosen strategy is simple_byte
   953     075A  0825               	movf	??_sprintf+1,w
   954     075B  3A00               	xorlw	0	; case 0
   955     075C  1903               	skipnz
   956     075D  2F5F               	goto	l1289
   957     075E  2FE0               	goto	l1203
   958     075F                     l1289:
   959                           
   960                           ; Switch size 1, requested type "simple"
   961                           ; Number of cases is 2, Range of values is 0 to 117
   962                           ; switch strategies available:
   963                           ; Name         Instructions Cycles
   964                           ; simple_byte            7     4 (average)
   965                           ; jumptable            260     6 (fixed)
   966                           ;	Chosen strategy is simple_byte
   967     075F  0824               	movf	??_sprintf,w
   968     0760  3A00               	xorlw	0	; case 0
   969     0761  1903               	skipnz
   970     0762  2FF0               	goto	l1205
   971     0763  3A75               	xorlw	117	; case 117
   972     0764  1903               	skipnz
   973     0765  2F48               	goto	l1171
   974     0766  2FE0               	goto	l1203
   975     0767                     l1177:
   976                           
   977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
   978     0767  0828               	movf	sprintf@ap,w
   979     0768  0084               	movwf	4
   980     0769  1383               	bcf	3,7	;select IRP bank0
   981     076A  0800               	movf	0,w
   982     076B  00A9               	movwf	sprintf@val
   983     076C  0A84               	incf	4,f
   984     076D  0800               	movf	0,w
   985     076E  00AA               	movwf	sprintf@val+1
   986     076F                     l1179:
   987     076F  3002               	movlw	2
   988     0770  00A4               	movwf	??_sprintf
   989     0771  0824               	movf	??_sprintf,w
   990     0772  07A8               	addwf	sprintf@ap,f
   991     0773                     l1181:
   992                           
   993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   994     0773  01AC               	clrf	sprintf@c
   995     0774  0AAC               	incf	sprintf@c,f
   996     0775                     l1187:
   997                           
   998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   999     0775  082C               	movf	sprintf@c,w
  1000     0776  00A4               	movwf	??_sprintf
  1001     0777  0724               	addwf	??_sprintf,w
  1002     0778  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1003     0779  0084               	movwf	4
  1004     077A  120A  118A  200D  120A  118A  	fcall	stringdir
  1005     077F  00A5               	movwf	??_sprintf+1
  1006     0780  120A  118A  200D  120A  118A  	fcall	stringdir
  1007     0785  00A6               	movwf	??_sprintf+2
  1008     0786  0826               	movf	??_sprintf+2,w
  1009     0787  022A               	subwf	sprintf@val+1,w
  1010     0788  1D03               	skipz
  1011     0789  2F8C               	goto	u545
  1012     078A  0825               	movf	??_sprintf+1,w
  1013     078B  0229               	subwf	sprintf@val,w
  1014     078C                     u545:
  1015     078C  1803               	skipnc
  1016     078D  2F8F               	goto	u541
  1017     078E  2F90               	goto	u540
  1018     078F                     u541:
  1019     078F  2F91               	goto	l1191
  1020     0790                     u540:
  1021     0790  2F9B               	goto	l1193
  1022     0791                     l1191:
  1023     0791  3001               	movlw	1
  1024     0792  00A4               	movwf	??_sprintf
  1025     0793  0824               	movf	??_sprintf,w
  1026     0794  07AC               	addwf	sprintf@c,f
  1027     0795  3005               	movlw	5
  1028     0796  062C               	xorwf	sprintf@c,w
  1029     0797  1D03               	btfss	3,2
  1030     0798  2F9A               	goto	u551
  1031     0799  2F9B               	goto	u550
  1032     079A                     u551:
  1033     079A  2F75               	goto	l1187
  1034     079B                     u550:
  1035     079B                     l1193:
  1036                           
  1037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1038     079B  082C               	movf	sprintf@c,w
  1039     079C  00AB               	movwf	sprintf@prec
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1042     079D  2FD7               	goto	l1201
  1043     079E                     l1195:
  1044                           
  1045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1046     079E  300A               	movlw	10
  1047     079F  00F8               	movwf	___lwmod@divisor
  1048     07A0  3000               	movlw	0
  1049     07A1  00F9               	movwf	___lwmod@divisor+1
  1050     07A2  082B               	movf	sprintf@prec,w
  1051     07A3  00A4               	movwf	??_sprintf
  1052     07A4  0724               	addwf	??_sprintf,w
  1053     07A5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1054     07A6  0084               	movwf	4
  1055     07A7  120A  118A  200D  120A  118A  	fcall	stringdir
  1056     07AC  00F0               	movwf	___lwdiv@divisor
  1057     07AD  120A  118A  200D  120A  118A  	fcall	stringdir
  1058     07B2  00F1               	movwf	___lwdiv@divisor+1
  1059     07B3  082A               	movf	sprintf@val+1,w
  1060     07B4  00F3               	movwf	___lwdiv@dividend+1
  1061     07B5  0829               	movf	sprintf@val,w
  1062     07B6  00F2               	movwf	___lwdiv@dividend
  1063     07B7  120A  118A  25E6  120A  118A  	fcall	___lwdiv
  1064     07BC  0871               	movf	?___lwdiv+1,w
  1065     07BD  00FB               	movwf	___lwmod@dividend+1
  1066     07BE  0870               	movf	?___lwdiv,w
  1067     07BF  00FA               	movwf	___lwmod@dividend
  1068     07C0  120A  118A  256A  120A  118A  	fcall	___lwmod
  1069     07C5  0878               	movf	?___lwmod,w
  1070     07C6  3E30               	addlw	48
  1071     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1072     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1073     07C9  00AC               	movwf	sprintf@c
  1074     07CA                     l1197:
  1075                           
  1076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1077     07CA  0820               	movf	sprintf@sp,w
  1078     07CB  0084               	movwf	4
  1079     07CC  1783               	bsf	3,7
  1080     07CD  1C21               	btfss	sprintf@sp+1,0
  1081     07CE  1383               	bcf	3,7
  1082     07CF  082C               	movf	sprintf@c,w
  1083     07D0  0080               	movwf	0
  1084     07D1                     l1199:
  1085     07D1  3001               	movlw	1
  1086     07D2  07A0               	addwf	sprintf@sp,f
  1087     07D3  1803               	skipnc
  1088     07D4  0AA1               	incf	sprintf@sp+1,f
  1089     07D5  3000               	movlw	0
  1090     07D6  07A1               	addwf	sprintf@sp+1,f
  1091     07D7                     l1201:
  1092                           
  1093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1094     07D7  30FF               	movlw	255
  1095     07D8  00A4               	movwf	??_sprintf
  1096     07D9  0824               	movf	??_sprintf,w
  1097     07DA  07AB               	addwf	sprintf@prec,f
  1098     07DB  0A2B               	incf	sprintf@prec,w
  1099     07DC  1D03               	btfss	3,2
  1100     07DD  2FDF               	goto	u561
  1101     07DE  2FE0               	goto	u560
  1102     07DF                     u561:
  1103     07DF  2F9E               	goto	l1195
  1104     07E0                     u560:
  1105     07E0                     l1203:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1108     07E0  3001               	movlw	1
  1109     07E1  07A2               	addwf	sprintf@f,f
  1110     07E2  30FF               	movlw	-1
  1111     07E3  0722               	addwf	sprintf@f,w
  1112     07E4  0084               	movwf	4
  1113     07E5  120A  118A  200D  120A  118A  	fcall	stringdir
  1114     07EA  00AC               	movwf	sprintf@c
  1115     07EB  082C               	movf	sprintf@c,w
  1116     07EC  1D03               	btfss	3,2
  1117     07ED  2FEF               	goto	u571
  1118     07EE  2FF0               	goto	u570
  1119     07EF                     u571:
  1120     07EF  2F32               	goto	l1163
  1121     07F0                     u570:
  1122     07F0                     l1205:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1125     07F0  0820               	movf	sprintf@sp,w
  1126     07F1  0084               	movwf	4
  1127     07F2  1783               	bsf	3,7
  1128     07F3  1C21               	btfss	sprintf@sp+1,0
  1129     07F4  1383               	bcf	3,7
  1130     07F5  0180               	clrf	0
  1131     07F6                     l247:
  1132     07F6  0008               	return
  1133     07F7                     __end_of_sprintf:
  1134                           
  1135                           	psect	text2
  1136     056A                     __ptext2:	
  1137 ;; *************** function ___lwmod *****************
  1138 ;; Defined at:
  1139 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  divisor         2    8[COMMON] unsigned int 
  1142 ;;  dividend        2   10[COMMON] unsigned int 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  counter         1   13[COMMON] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2    8[COMMON] unsigned int 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         4       0       0       0       0
  1155 ;;      Locals:         1       0       0       0       0
  1156 ;;      Temps:          1       0       0       0       0
  1157 ;;      Totals:         6       0       0       0       0
  1158 ;;Total ram usage:        6 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_sprintf
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167     056A                     ___lwmod:	
  1168                           ;psect for function ___lwmod
  1169                           
  1170     056A                     l1111:	
  1171                           ;incstack = 0
  1172                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1173                           
  1174     056A  0878               	movf	___lwmod@divisor,w
  1175     056B  0479               	iorwf	___lwmod@divisor+1,w
  1176     056C  1903               	btfsc	3,2
  1177     056D  2D6F               	goto	u471
  1178     056E  2D70               	goto	u470
  1179     056F                     u471:
  1180     056F  2D9F               	goto	l1129
  1181     0570                     u470:
  1182     0570                     l1113:
  1183     0570  01FD               	clrf	___lwmod@counter
  1184     0571  0AFD               	incf	___lwmod@counter,f
  1185     0572  2D7E               	goto	l1119
  1186     0573                     l1115:
  1187     0573  3001               	movlw	1
  1188     0574                     u485:
  1189     0574  1003               	clrc
  1190     0575  0DF8               	rlf	___lwmod@divisor,f
  1191     0576  0DF9               	rlf	___lwmod@divisor+1,f
  1192     0577  3EFF               	addlw	-1
  1193     0578  1D03               	skipz
  1194     0579  2D74               	goto	u485
  1195     057A                     l1117:
  1196     057A  3001               	movlw	1
  1197     057B  00FC               	movwf	??___lwmod
  1198     057C  087C               	movf	??___lwmod,w
  1199     057D  07FD               	addwf	___lwmod@counter,f
  1200     057E                     l1119:
  1201     057E  1FF9               	btfss	___lwmod@divisor+1,7
  1202     057F  2D81               	goto	u491
  1203     0580  2D82               	goto	u490
  1204     0581                     u491:
  1205     0581  2D73               	goto	l1115
  1206     0582                     u490:
  1207     0582                     l1121:
  1208     0582  0879               	movf	___lwmod@divisor+1,w
  1209     0583  027B               	subwf	___lwmod@dividend+1,w
  1210     0584  1D03               	skipz
  1211     0585  2D88               	goto	u505
  1212     0586  0878               	movf	___lwmod@divisor,w
  1213     0587  027A               	subwf	___lwmod@dividend,w
  1214     0588                     u505:
  1215     0588  1C03               	skipc
  1216     0589  2D8B               	goto	u501
  1217     058A  2D8C               	goto	u500
  1218     058B                     u501:
  1219     058B  2D92               	goto	l1125
  1220     058C                     u500:
  1221     058C                     l1123:
  1222     058C  0878               	movf	___lwmod@divisor,w
  1223     058D  02FA               	subwf	___lwmod@dividend,f
  1224     058E  0879               	movf	___lwmod@divisor+1,w
  1225     058F  1C03               	skipc
  1226     0590  03FB               	decf	___lwmod@dividend+1,f
  1227     0591  02FB               	subwf	___lwmod@dividend+1,f
  1228     0592                     l1125:
  1229     0592  3001               	movlw	1
  1230     0593                     u515:
  1231     0593  1003               	clrc
  1232     0594  0CF9               	rrf	___lwmod@divisor+1,f
  1233     0595  0CF8               	rrf	___lwmod@divisor,f
  1234     0596  3EFF               	addlw	-1
  1235     0597  1D03               	skipz
  1236     0598  2D93               	goto	u515
  1237     0599                     l1127:
  1238     0599  3001               	movlw	1
  1239     059A  02FD               	subwf	___lwmod@counter,f
  1240     059B  1D03               	btfss	3,2
  1241     059C  2D9E               	goto	u521
  1242     059D  2D9F               	goto	u520
  1243     059E                     u521:
  1244     059E  2D82               	goto	l1121
  1245     059F                     u520:
  1246     059F                     l1129:
  1247     059F  087B               	movf	___lwmod@dividend+1,w
  1248     05A0  00F9               	movwf	?___lwmod+1
  1249     05A1  087A               	movf	___lwmod@dividend,w
  1250     05A2  00F8               	movwf	?___lwmod
  1251     05A3                     l533:
  1252     05A3  0008               	return
  1253     05A4                     __end_of___lwmod:
  1254                           
  1255                           	psect	text3
  1256     05E6                     __ptext3:	
  1257 ;; *************** function ___lwdiv *****************
  1258 ;; Defined at:
  1259 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  divisor         2    0[COMMON] unsigned int 
  1262 ;;  dividend        2    2[COMMON] unsigned int 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  quotient        2    5[COMMON] unsigned int 
  1265 ;;  counter         1    7[COMMON] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  2    0[COMMON] unsigned int 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         4       0       0       0       0
  1276 ;;      Locals:         3       0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0
  1278 ;;      Totals:         8       0       0       0       0
  1279 ;;Total ram usage:        8 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_sprintf
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288     05E6                     ___lwdiv:	
  1289                           ;psect for function ___lwdiv
  1290                           
  1291     05E6                     l1085:	
  1292                           ;incstack = 0
  1293                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1294                           
  1295     05E6  01F5               	clrf	___lwdiv@quotient
  1296     05E7  01F6               	clrf	___lwdiv@quotient+1
  1297     05E8                     l1087:
  1298     05E8  0870               	movf	___lwdiv@divisor,w
  1299     05E9  0471               	iorwf	___lwdiv@divisor+1,w
  1300     05EA  1903               	btfsc	3,2
  1301     05EB  2DED               	goto	u401
  1302     05EC  2DEE               	goto	u400
  1303     05ED                     u401:
  1304     05ED  2E25               	goto	l1107
  1305     05EE                     u400:
  1306     05EE                     l1089:
  1307     05EE  01F7               	clrf	___lwdiv@counter
  1308     05EF  0AF7               	incf	___lwdiv@counter,f
  1309     05F0  2DFC               	goto	l1095
  1310     05F1                     l1091:
  1311     05F1  3001               	movlw	1
  1312     05F2                     u415:
  1313     05F2  1003               	clrc
  1314     05F3  0DF0               	rlf	___lwdiv@divisor,f
  1315     05F4  0DF1               	rlf	___lwdiv@divisor+1,f
  1316     05F5  3EFF               	addlw	-1
  1317     05F6  1D03               	skipz
  1318     05F7  2DF2               	goto	u415
  1319     05F8                     l1093:
  1320     05F8  3001               	movlw	1
  1321     05F9  00F4               	movwf	??___lwdiv
  1322     05FA  0874               	movf	??___lwdiv,w
  1323     05FB  07F7               	addwf	___lwdiv@counter,f
  1324     05FC                     l1095:
  1325     05FC  1FF1               	btfss	___lwdiv@divisor+1,7
  1326     05FD  2DFF               	goto	u421
  1327     05FE  2E00               	goto	u420
  1328     05FF                     u421:
  1329     05FF  2DF1               	goto	l1091
  1330     0600                     u420:
  1331     0600                     l1097:
  1332     0600  3001               	movlw	1
  1333     0601                     u435:
  1334     0601  1003               	clrc
  1335     0602  0DF5               	rlf	___lwdiv@quotient,f
  1336     0603  0DF6               	rlf	___lwdiv@quotient+1,f
  1337     0604  3EFF               	addlw	-1
  1338     0605  1D03               	skipz
  1339     0606  2E01               	goto	u435
  1340     0607  0871               	movf	___lwdiv@divisor+1,w
  1341     0608  0273               	subwf	___lwdiv@dividend+1,w
  1342     0609  1D03               	skipz
  1343     060A  2E0D               	goto	u445
  1344     060B  0870               	movf	___lwdiv@divisor,w
  1345     060C  0272               	subwf	___lwdiv@dividend,w
  1346     060D                     u445:
  1347     060D  1C03               	skipc
  1348     060E  2E10               	goto	u441
  1349     060F  2E11               	goto	u440
  1350     0610                     u441:
  1351     0610  2E18               	goto	l1103
  1352     0611                     u440:
  1353     0611                     l1099:
  1354     0611  0870               	movf	___lwdiv@divisor,w
  1355     0612  02F2               	subwf	___lwdiv@dividend,f
  1356     0613  0871               	movf	___lwdiv@divisor+1,w
  1357     0614  1C03               	skipc
  1358     0615  03F3               	decf	___lwdiv@dividend+1,f
  1359     0616  02F3               	subwf	___lwdiv@dividend+1,f
  1360     0617                     l1101:
  1361     0617  1475               	bsf	___lwdiv@quotient,0
  1362     0618                     l1103:
  1363     0618  3001               	movlw	1
  1364     0619                     u455:
  1365     0619  1003               	clrc
  1366     061A  0CF1               	rrf	___lwdiv@divisor+1,f
  1367     061B  0CF0               	rrf	___lwdiv@divisor,f
  1368     061C  3EFF               	addlw	-1
  1369     061D  1D03               	skipz
  1370     061E  2E19               	goto	u455
  1371     061F                     l1105:
  1372     061F  3001               	movlw	1
  1373     0620  02F7               	subwf	___lwdiv@counter,f
  1374     0621  1D03               	btfss	3,2
  1375     0622  2E24               	goto	u461
  1376     0623  2E25               	goto	u460
  1377     0624                     u461:
  1378     0624  2E00               	goto	l1097
  1379     0625                     u460:
  1380     0625                     l1107:
  1381     0625  0876               	movf	___lwdiv@quotient+1,w
  1382     0626  00F1               	movwf	?___lwdiv+1
  1383     0627  0875               	movf	___lwdiv@quotient,w
  1384     0628  00F0               	movwf	?___lwdiv
  1385     0629                     l523:
  1386     0629  0008               	return
  1387     062A                     __end_of___lwdiv:
  1388                           
  1389                           	psect	text4
  1390     04AC                     __ptext4:	
  1391 ;; *************** function _spiRead *****************
  1392 ;; Defined at:
  1393 ;;		line 38 in file "SPI.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      unsigned char 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 1
  1414 ;; This function calls:
  1415 ;;		_spiReceiveWait
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421     04AC                     _spiRead:	
  1422                           ;psect for function _spiRead
  1423                           
  1424     04AC                     l1155:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1427                           
  1428                           
  1429                           ;SPI.c: 40:     spiReceiveWait();
  1430     04AC  120A  118A  24A5  120A  118A  	fcall	_spiReceiveWait
  1431     04B1                     l1157:
  1432                           
  1433                           ;SPI.c: 41:     return(SSPBUF);
  1434     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1435     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1436     04B3  0813               	movf	19,w	;volatile
  1437     04B4                     l140:
  1438     04B4  0008               	return
  1439     04B5                     __end_of_spiRead:
  1440                           
  1441                           	psect	text5
  1442     04A5                     __ptext5:	
  1443 ;; *************** function _spiReceiveWait *****************
  1444 ;; Defined at:
  1445 ;;		line 20 in file "SPI.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		None
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_spiRead
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472     04A5                     _spiReceiveWait:	
  1473                           ;psect for function _spiReceiveWait
  1474                           
  1475     04A5                     l1083:	
  1476                           ;incstack = 0
  1477                           ; Regs used in _spiReceiveWait: []
  1478                           
  1479     04A5                     l126:	
  1480                           ;SPI.c: 22:     while ( !SSPSTATbits.BF );
  1481                           
  1482     04A5  1683               	bsf	3,5	;RP0=1, select bank1
  1483     04A6  1303               	bcf	3,6	;RP1=0, select bank1
  1484     04A7  1C14               	btfss	20,0	;volatile
  1485     04A8  2CAA               	goto	u391
  1486     04A9  2CAB               	goto	u390
  1487     04AA                     u391:
  1488     04AA  2CA5               	goto	l126
  1489     04AB                     u390:
  1490     04AB                     l129:
  1491     04AB  0008               	return
  1492     04AC                     __end_of_spiReceiveWait:
  1493                           
  1494                           	psect	text6
  1495     0514                     __ptext6:	
  1496 ;; *************** function _setup *****************
  1497 ;; Defined at:
  1498 ;;		line 88 in file "main.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0, pclath, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 1
  1519 ;; This function calls:
  1520 ;;		_spiInit
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526     0514                     _setup:	
  1527                           ;psect for function _setup
  1528                           
  1529     0514                     l1133:	
  1530                           ;incstack = 0
  1531                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1532                           
  1533                           
  1534                           ;main.c: 89:     ANSEL = 0;
  1535     0514  1683               	bsf	3,5	;RP0=1, select bank3
  1536     0515  1703               	bsf	3,6	;RP1=1, select bank3
  1537     0516  0188               	clrf	8	;volatile
  1538                           
  1539                           ;main.c: 90:     ANSELH = 0;
  1540     0517  0189               	clrf	9	;volatile
  1541                           
  1542                           ;main.c: 91:     TRISB = 0;
  1543     0518  1683               	bsf	3,5	;RP0=1, select bank1
  1544     0519  1303               	bcf	3,6	;RP1=0, select bank1
  1545     051A  0186               	clrf	6	;volatile
  1546                           
  1547                           ;main.c: 92:     TRISD = 0;
  1548     051B  0188               	clrf	8	;volatile
  1549                           
  1550                           ;main.c: 93:     PORTB = 0;
  1551     051C  1283               	bcf	3,5	;RP0=0, select bank0
  1552     051D  1303               	bcf	3,6	;RP1=0, select bank0
  1553     051E  0186               	clrf	6	;volatile
  1554                           
  1555                           ;main.c: 94:     PORTD = 0;
  1556     051F  0188               	clrf	8	;volatile
  1557     0520                     l1135:
  1558                           
  1559                           ;main.c: 95:     TRISCbits.TRISC2 = 0;
  1560     0520  1683               	bsf	3,5	;RP0=1, select bank1
  1561     0521  1303               	bcf	3,6	;RP1=0, select bank1
  1562     0522  1107               	bcf	7,2	;volatile
  1563     0523                     l1137:
  1564                           
  1565                           ;main.c: 96:     PORTCbits.RC2 = 1;
  1566     0523  1283               	bcf	3,5	;RP0=0, select bank0
  1567     0524  1303               	bcf	3,6	;RP1=0, select bank0
  1568     0525  1507               	bsf	7,2	;volatile
  1569     0526                     l1139:
  1570                           
  1571                           ;main.c: 97:     OSCCONbits.IRCF = 0b110;
  1572     0526  1683               	bsf	3,5	;RP0=1, select bank1
  1573     0527  1303               	bcf	3,6	;RP1=0, select bank1
  1574     0528  080F               	movf	15,w	;volatile
  1575     0529  398F               	andlw	-113
  1576     052A  3860               	iorlw	96
  1577     052B  008F               	movwf	15	;volatile
  1578     052C                     l1141:
  1579                           
  1580                           ;main.c: 98:     OSCCONbits.SCS = 1;
  1581     052C  140F               	bsf	15,0	;volatile
  1582     052D                     l1143:
  1583                           
  1584                           ;main.c: 99:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1585     052D  01F0               	clrf	spiInit@sDataSample
  1586     052E  01F1               	clrf	spiInit@sClockIdle
  1587     052F  01F2               	clrf	spiInit@sTransmitEdge
  1588     0530  3020               	movlw	32
  1589     0531  120A  118A  24C2  120A  118A  	fcall	_spiInit
  1590     0536                     l51:
  1591     0536  0008               	return
  1592     0537                     __end_of_setup:
  1593                           
  1594                           	psect	text7
  1595     04C2                     __ptext7:	
  1596 ;; *************** function _spiInit *****************
  1597 ;; Defined at:
  1598 ;;		line 3 in file "SPI.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  sType           1    wreg     enum E1292
  1601 ;;  sDataSample     1    0[COMMON] enum E1300
  1602 ;;  sClockIdle      1    1[COMMON] enum E1304
  1603 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  sType           1    3[COMMON] enum E1292
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         3       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0
  1618 ;;      Totals:         4       0       0       0       0
  1619 ;;Total ram usage:        4 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_setup
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628     04C2                     _spiInit:	
  1629                           ;psect for function _spiInit
  1630                           
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1634                           ;spiInit@sType stored from wreg
  1635     04C2  00F3               	movwf	spiInit@sType
  1636     04C3                     l1043:
  1637                           
  1638                           ;SPI.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 4: {;SPI.c: 5:     TRISC5 = 0;
  1639     04C3  1683               	bsf	3,5	;RP0=1, select bank1
  1640     04C4  1303               	bcf	3,6	;RP1=0, select bank1
  1641     04C5  1287               	bcf	7,5	;volatile
  1642                           
  1643                           ;SPI.c: 6:     if(sType & 0b00000100)
  1644     04C6  1D73               	btfss	spiInit@sType,2
  1645     04C7  2CC9               	goto	u371
  1646     04C8  2CCA               	goto	u370
  1647     04C9                     u371:
  1648     04C9  2CCE               	goto	l1049
  1649     04CA                     u370:
  1650     04CA                     l1045:
  1651                           
  1652                           ;SPI.c: 7:     {;SPI.c: 8:         SSPSTAT = sTransmitEdge;
  1653     04CA  0872               	movf	spiInit@sTransmitEdge,w
  1654     04CB  0094               	movwf	20	;volatile
  1655     04CC                     l1047:
  1656                           
  1657                           ;SPI.c: 9:         TRISC3 = 1;
  1658     04CC  1587               	bsf	7,3	;volatile
  1659                           
  1660                           ;SPI.c: 10:     }
  1661     04CD  2CD2               	goto	l122
  1662     04CE                     l1049:
  1663                           
  1664                           ;SPI.c: 12:     {;SPI.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1665     04CE  0870               	movf	spiInit@sDataSample,w
  1666     04CF  0472               	iorwf	spiInit@sTransmitEdge,w
  1667     04D0  0094               	movwf	20	;volatile
  1668     04D1                     l1051:
  1669                           
  1670                           ;SPI.c: 14:         TRISC3 = 0;
  1671     04D1  1187               	bcf	7,3	;volatile
  1672     04D2                     l122:	
  1673                           ;SPI.c: 15:     }
  1674                           
  1675                           
  1676                           ;SPI.c: 17:     SSPCON = sType | sClockIdle;
  1677     04D2  0873               	movf	spiInit@sType,w
  1678     04D3  0471               	iorwf	spiInit@sClockIdle,w
  1679     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1680     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1681     04D6  0094               	movwf	20	;volatile
  1682     04D7                     l123:
  1683     04D7  0008               	return
  1684     04D8                     __end_of_spiInit:
  1685                           
  1686                           	psect	text8
  1687     05A4                     __ptext8:	
  1688 ;; *************** function _Lcd_Write_String *****************
  1689 ;; Defined at:
  1690 ;;		line 88 in file "LCD.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  a               2    5[COMMON] PTR unsigned char 
  1693 ;;		 -> STR_2(4), valor(1), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  i               2   10[COMMON] int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         2       0       0       0       0
  1706 ;;      Locals:         2       0       0       0       0
  1707 ;;      Temps:          3       0       0       0       0
  1708 ;;      Totals:         7       0       0       0       0
  1709 ;;Total ram usage:        7 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 2
  1712 ;; This function calls:
  1713 ;;		_Lcd_Write_Char
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719     05A4                     _Lcd_Write_String:	
  1720                           ;psect for function _Lcd_Write_String
  1721                           
  1722     05A4                     l1235:	
  1723                           ;incstack = 0
  1724                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1725                           
  1726                           
  1727                           ;LCD.c: 89:     int i;;LCD.c: 90:     for (i = 0; a[i] != '\0'; i++)
  1728     05A4  01FA               	clrf	Lcd_Write_String@i
  1729     05A5  01FB               	clrf	Lcd_Write_String@i+1
  1730     05A6  2DC9               	goto	l1241
  1731     05A7                     l1237:
  1732                           
  1733                           ;LCD.c: 91:         Lcd_Write_Char(a[i]);
  1734     05A7  087A               	movf	Lcd_Write_String@i,w
  1735     05A8  0775               	addwf	Lcd_Write_String@a,w
  1736     05A9  00F8               	movwf	??_Lcd_Write_String+1
  1737     05AA  0876               	movf	Lcd_Write_String@a+1,w
  1738     05AB  00F7               	movwf	??_Lcd_Write_String
  1739     05AC  1803               	skipnc
  1740     05AD  0AF7               	incf	??_Lcd_Write_String,f
  1741     05AE  1FFA               	btfss	Lcd_Write_String@i,7
  1742     05AF  2DB1               	goto	u620
  1743     05B0  03F7               	decf	??_Lcd_Write_String,f
  1744     05B1                     u620:
  1745     05B1  0877               	movf	??_Lcd_Write_String,w
  1746     05B2  00F9               	movwf	??_Lcd_Write_String+2
  1747     05B3  0879               	movf	??_Lcd_Write_String+2,w
  1748     05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1749     05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1750     05B6  00FF               	movwf	btemp+1
  1751     05B7  0878               	movf	??_Lcd_Write_String+1,w
  1752     05B8  0084               	movwf	4
  1753     05B9  120A  118A  2003  120A  118A  	fcall	stringtab
  1754     05BE  120A  118A  2537  120A  118A  	fcall	_Lcd_Write_Char
  1755     05C3                     l1239:
  1756     05C3  3001               	movlw	1
  1757     05C4  07FA               	addwf	Lcd_Write_String@i,f
  1758     05C5  1803               	skipnc
  1759     05C6  0AFB               	incf	Lcd_Write_String@i+1,f
  1760     05C7  3000               	movlw	0
  1761     05C8  07FB               	addwf	Lcd_Write_String@i+1,f
  1762     05C9                     l1241:
  1763     05C9  087A               	movf	Lcd_Write_String@i,w
  1764     05CA  0775               	addwf	Lcd_Write_String@a,w
  1765     05CB  00F8               	movwf	??_Lcd_Write_String+1
  1766     05CC  0876               	movf	Lcd_Write_String@a+1,w
  1767     05CD  00F7               	movwf	??_Lcd_Write_String
  1768     05CE  1803               	skipnc
  1769     05CF  0AF7               	incf	??_Lcd_Write_String,f
  1770     05D0  1FFA               	btfss	Lcd_Write_String@i,7
  1771     05D1  2DD3               	goto	u630
  1772     05D2  03F7               	decf	??_Lcd_Write_String,f
  1773     05D3                     u630:
  1774     05D3  0877               	movf	??_Lcd_Write_String,w
  1775     05D4  00F9               	movwf	??_Lcd_Write_String+2
  1776     05D5  0879               	movf	??_Lcd_Write_String+2,w
  1777     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1778     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1779     05D8  00FF               	movwf	btemp+1
  1780     05D9  0878               	movf	??_Lcd_Write_String+1,w
  1781     05DA  0084               	movwf	4
  1782     05DB  120A  118A  2003  120A  118A  	fcall	stringtab
  1783     05E0  3A00               	xorlw	0
  1784     05E1  1D03               	skipz
  1785     05E2  2DE4               	goto	u641
  1786     05E3  2DE5               	goto	u640
  1787     05E4                     u641:
  1788     05E4  2DA7               	goto	l1237
  1789     05E5                     u640:
  1790     05E5                     l100:
  1791     05E5  0008               	return
  1792     05E6                     __end_of_Lcd_Write_String:
  1793                           
  1794                           	psect	text9
  1795     0537                     __ptext9:	
  1796 ;; *************** function _Lcd_Write_Char *****************
  1797 ;; Defined at:
  1798 ;;		line 73 in file "LCD.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  a               1    wreg     unsigned char 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  a               1    4[COMMON] unsigned char 
  1803 ;;  y               1    3[COMMON] unsigned char 
  1804 ;;  temp            1    2[COMMON] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         3       0       0       0       0
  1816 ;;      Temps:          1       0       0       0       0
  1817 ;;      Totals:         4       0       0       0       0
  1818 ;;Total ram usage:        4 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 1
  1821 ;; This function calls:
  1822 ;;		_Lcd_Port
  1823 ;; This function is called by:
  1824 ;;		_Lcd_Write_String
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828     0537                     _Lcd_Write_Char:	
  1829                           ;psect for function _Lcd_Write_Char
  1830                           
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1834                           ;Lcd_Write_Char@a stored from wreg
  1835     0537  00F4               	movwf	Lcd_Write_Char@a
  1836     0538                     l1063:
  1837                           
  1838                           ;LCD.c: 74:     char temp, y;;LCD.c: 75:     temp = a & 0x0F;
  1839     0538  0874               	movf	Lcd_Write_Char@a,w
  1840     0539  390F               	andlw	15
  1841     053A  00F2               	movwf	Lcd_Write_Char@temp
  1842                           
  1843                           ;LCD.c: 76:     y = a & 0xF0;
  1844     053B  0874               	movf	Lcd_Write_Char@a,w
  1845     053C  39F0               	andlw	240
  1846     053D  00F3               	movwf	Lcd_Write_Char@y
  1847     053E                     l1065:
  1848                           
  1849                           ;LCD.c: 77:     PORTDbits.RD2 = 1;
  1850     053E  1283               	bcf	3,5	;RP0=0, select bank0
  1851     053F  1303               	bcf	3,6	;RP1=0, select bank0
  1852     0540  1508               	bsf	8,2	;volatile
  1853     0541                     l1067:
  1854                           
  1855                           ;LCD.c: 78:     Lcd_Port(y >> 4);
  1856     0541  0873               	movf	Lcd_Write_Char@y,w
  1857     0542  00F1               	movwf	??_Lcd_Write_Char
  1858     0543  3004               	movlw	4
  1859     0544                     u385:
  1860     0544  1003               	clrc
  1861     0545  0CF1               	rrf	??_Lcd_Write_Char,f
  1862     0546  3EFF               	addlw	-1
  1863     0547  1D03               	skipz
  1864     0548  2D44               	goto	u385
  1865     0549  0871               	movf	??_Lcd_Write_Char,w
  1866     054A  120A  118A  24F2  120A  118A  	fcall	_Lcd_Port
  1867     054F                     l1069:
  1868                           
  1869                           ;LCD.c: 79:     RD3 = 1;
  1870     054F  1283               	bcf	3,5	;RP0=0, select bank0
  1871     0550  1303               	bcf	3,6	;RP1=0, select bank0
  1872     0551  1588               	bsf	8,3	;volatile
  1873     0552                     l1071:
  1874                           
  1875                           ;LCD.c: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1876     0552  300D               	movlw	13
  1877     0553  00F1               	movwf	??_Lcd_Write_Char
  1878     0554                     u677:
  1879     0554  0BF1               	decfsz	??_Lcd_Write_Char,f
  1880     0555  2D54               	goto	u677
  1881     0556                     l1073:
  1882                           
  1883                           ;LCD.c: 81:     RD3 = 0;
  1884     0556  1283               	bcf	3,5	;RP0=0, select bank0
  1885     0557  1303               	bcf	3,6	;RP1=0, select bank0
  1886     0558  1188               	bcf	8,3	;volatile
  1887     0559                     l1075:
  1888                           
  1889                           ;LCD.c: 82:     Lcd_Port(temp);
  1890     0559  0872               	movf	Lcd_Write_Char@temp,w
  1891     055A  120A  118A  24F2  120A  118A  	fcall	_Lcd_Port
  1892     055F                     l1077:
  1893                           
  1894                           ;LCD.c: 83:     RD3 = 1;
  1895     055F  1283               	bcf	3,5	;RP0=0, select bank0
  1896     0560  1303               	bcf	3,6	;RP1=0, select bank0
  1897     0561  1588               	bsf	8,3	;volatile
  1898     0562                     l1079:
  1899                           
  1900                           ;LCD.c: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1901     0562  300D               	movlw	13
  1902     0563  00F1               	movwf	??_Lcd_Write_Char
  1903     0564                     u687:
  1904     0564  0BF1               	decfsz	??_Lcd_Write_Char,f
  1905     0565  2D64               	goto	u687
  1906     0566                     l1081:
  1907                           
  1908                           ;LCD.c: 85:     RD3 = 0;
  1909     0566  1283               	bcf	3,5	;RP0=0, select bank0
  1910     0567  1303               	bcf	3,6	;RP1=0, select bank0
  1911     0568  1188               	bcf	8,3	;volatile
  1912     0569                     l94:
  1913     0569  0008               	return
  1914     056A                     __end_of_Lcd_Write_Char:
  1915                           
  1916                           	psect	text10
  1917     062A                     __ptext10:	
  1918 ;; *************** function _Lcd_Set_Cursor *****************
  1919 ;; Defined at:
  1920 ;;		line 38 in file "LCD.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  a               1    wreg     unsigned char 
  1923 ;;  b               1    4[COMMON] unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  a               1    6[COMMON] unsigned char 
  1926 ;;  temp            1    9[COMMON] unsigned char 
  1927 ;;  y               1    8[COMMON] unsigned char 
  1928 ;;  z               1    7[COMMON] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         1       0       0       0       0
  1939 ;;      Locals:         4       0       0       0       0
  1940 ;;      Temps:          1       0       0       0       0
  1941 ;;      Totals:         6       0       0       0       0
  1942 ;;Total ram usage:        6 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 2
  1945 ;; This function calls:
  1946 ;;		_Lcd_Cmd
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952     062A                     _Lcd_Set_Cursor:	
  1953                           ;psect for function _Lcd_Set_Cursor
  1954                           
  1955                           
  1956                           ;incstack = 0
  1957                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1958                           ;Lcd_Set_Cursor@a stored from wreg
  1959     062A  00F6               	movwf	Lcd_Set_Cursor@a
  1960     062B                     l1215:
  1961                           
  1962                           ;LCD.c: 39:     char temp, z, y;;LCD.c: 40:     if (a == 1) {
  1963     062B  0376               	decf	Lcd_Set_Cursor@a,w
  1964     062C  1D03               	btfss	3,2
  1965     062D  2E2F               	goto	u581
  1966     062E  2E30               	goto	u580
  1967     062F                     u581:
  1968     062F  2E4D               	goto	l1225
  1969     0630                     u580:
  1970     0630                     l1217:
  1971                           
  1972                           ;LCD.c: 41:         temp = 0x80 + b - 1;
  1973     0630  0874               	movf	Lcd_Set_Cursor@b,w
  1974     0631  3E7F               	addlw	127
  1975     0632  00F9               	movwf	Lcd_Set_Cursor@temp
  1976                           
  1977                           ;LCD.c: 42:         z = temp >> 4;
  1978     0633  0879               	movf	Lcd_Set_Cursor@temp,w
  1979     0634  00F5               	movwf	??_Lcd_Set_Cursor
  1980     0635  3004               	movlw	4
  1981     0636                     u595:
  1982     0636  1003               	clrc
  1983     0637  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1984     0638  3EFF               	addlw	-1
  1985     0639  1D03               	skipz
  1986     063A  2E36               	goto	u595
  1987     063B  0875               	movf	??_Lcd_Set_Cursor,w
  1988     063C  00F7               	movwf	Lcd_Set_Cursor@z
  1989     063D                     l1219:
  1990                           
  1991                           ;LCD.c: 43:         y = temp & 0x0F;
  1992     063D  0879               	movf	Lcd_Set_Cursor@temp,w
  1993     063E  390F               	andlw	15
  1994     063F  00F8               	movwf	Lcd_Set_Cursor@y
  1995     0640                     l1221:
  1996                           
  1997                           ;LCD.c: 44:         Lcd_Cmd(z);
  1998     0640  0877               	movf	Lcd_Set_Cursor@z,w
  1999     0641  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2000     0646                     l1223:
  2001                           
  2002                           ;LCD.c: 45:         Lcd_Cmd(y);
  2003     0646  0878               	movf	Lcd_Set_Cursor@y,w
  2004     0647  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2005                           
  2006                           ;LCD.c: 46:     } else if (a == 2) {
  2007     064C  2E6F               	goto	l88
  2008     064D                     l1225:
  2009     064D  3002               	movlw	2
  2010     064E  0676               	xorwf	Lcd_Set_Cursor@a,w
  2011     064F  1D03               	btfss	3,2
  2012     0650  2E52               	goto	u601
  2013     0651  2E53               	goto	u600
  2014     0652                     u601:
  2015     0652  2E6F               	goto	l88
  2016     0653                     u600:
  2017     0653                     l1227:
  2018                           
  2019                           ;LCD.c: 47:         temp = 0xC0 + b - 1;
  2020     0653  0874               	movf	Lcd_Set_Cursor@b,w
  2021     0654  3EBF               	addlw	191
  2022     0655  00F9               	movwf	Lcd_Set_Cursor@temp
  2023                           
  2024                           ;LCD.c: 48:         z = temp >> 4;
  2025     0656  0879               	movf	Lcd_Set_Cursor@temp,w
  2026     0657  00F5               	movwf	??_Lcd_Set_Cursor
  2027     0658  3004               	movlw	4
  2028     0659                     u615:
  2029     0659  1003               	clrc
  2030     065A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2031     065B  3EFF               	addlw	-1
  2032     065C  1D03               	skipz
  2033     065D  2E59               	goto	u615
  2034     065E  0875               	movf	??_Lcd_Set_Cursor,w
  2035     065F  00F7               	movwf	Lcd_Set_Cursor@z
  2036     0660                     l1229:
  2037                           
  2038                           ;LCD.c: 49:         y = temp & 0x0F;
  2039     0660  0879               	movf	Lcd_Set_Cursor@temp,w
  2040     0661  390F               	andlw	15
  2041     0662  00F8               	movwf	Lcd_Set_Cursor@y
  2042     0663                     l1231:
  2043                           
  2044                           ;LCD.c: 50:         Lcd_Cmd(z);
  2045     0663  0877               	movf	Lcd_Set_Cursor@z,w
  2046     0664  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2047     0669                     l1233:
  2048                           
  2049                           ;LCD.c: 51:         Lcd_Cmd(y);
  2050     0669  0878               	movf	Lcd_Set_Cursor@y,w
  2051     066A  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2052     066F                     l88:
  2053     066F  0008               	return
  2054     0670                     __end_of_Lcd_Set_Cursor:
  2055                           
  2056                           	psect	text11
  2057     0670                     __ptext11:	
  2058 ;; *************** function _Lcd_Init *****************
  2059 ;; Defined at:
  2060 ;;		line 55 in file "LCD.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0
  2076 ;;      Temps:          2       0       0       0       0
  2077 ;;      Totals:         2       0       0       0       0
  2078 ;;Total ram usage:        2 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 2
  2081 ;; This function calls:
  2082 ;;		_Lcd_Cmd
  2083 ;;		_Lcd_Port
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089     0670                     _Lcd_Init:	
  2090                           ;psect for function _Lcd_Init
  2091                           
  2092     0670                     l1145:	
  2093                           ;incstack = 0
  2094                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2095                           
  2096                           
  2097                           ;LCD.c: 56:     Lcd_Port(0x00);
  2098     0670  3000               	movlw	0
  2099     0671  120A  118A  24F2  120A  118A  	fcall	_Lcd_Port
  2100     0676                     l1147:
  2101                           
  2102                           ;LCD.c: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2103     0676  301A               	movlw	26
  2104     0677  00F5               	movwf	??_Lcd_Init+1
  2105     0678  30F8               	movlw	248
  2106     0679  00F4               	movwf	??_Lcd_Init
  2107     067A                     u697:
  2108     067A  0BF4               	decfsz	??_Lcd_Init,f
  2109     067B  2E7A               	goto	u697
  2110     067C  0BF5               	decfsz	??_Lcd_Init+1,f
  2111     067D  2E7A               	goto	u697
  2112     067E  0000               	nop
  2113     067F                     l1149:
  2114                           
  2115                           ;LCD.c: 58:     Lcd_Cmd(0x03);
  2116     067F  3003               	movlw	3
  2117     0680  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2118                           
  2119                           ;LCD.c: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2120     0685  3007               	movlw	7
  2121     0686  00F5               	movwf	??_Lcd_Init+1
  2122     0687  307D               	movlw	125
  2123     0688  00F4               	movwf	??_Lcd_Init
  2124     0689                     u707:
  2125     0689  0BF4               	decfsz	??_Lcd_Init,f
  2126     068A  2E89               	goto	u707
  2127     068B  0BF5               	decfsz	??_Lcd_Init+1,f
  2128     068C  2E89               	goto	u707
  2129     068D                     l1151:
  2130                           
  2131                           ;LCD.c: 60:     Lcd_Cmd(0x03);
  2132     068D  3003               	movlw	3
  2133     068E  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2134     0693                     l1153:
  2135                           
  2136                           ;LCD.c: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2137     0693  300F               	movlw	15
  2138     0694  00F5               	movwf	??_Lcd_Init+1
  2139     0695  3047               	movlw	71
  2140     0696  00F4               	movwf	??_Lcd_Init
  2141     0697                     u717:
  2142     0697  0BF4               	decfsz	??_Lcd_Init,f
  2143     0698  2E97               	goto	u717
  2144     0699  0BF5               	decfsz	??_Lcd_Init+1,f
  2145     069A  2E97               	goto	u717
  2146     069B  2E9C               	nop2
  2147                           
  2148                           ;LCD.c: 62:     Lcd_Cmd(0x03);
  2149     069C  3003               	movlw	3
  2150     069D  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2151                           
  2152                           ;LCD.c: 64:     Lcd_Cmd(0x02);
  2153     06A2  3002               	movlw	2
  2154     06A3  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2155                           
  2156                           ;LCD.c: 65:     Lcd_Cmd(0x02);
  2157     06A8  3002               	movlw	2
  2158     06A9  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2159                           
  2160                           ;LCD.c: 66:     Lcd_Cmd(0x08);
  2161     06AE  3008               	movlw	8
  2162     06AF  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2163                           
  2164                           ;LCD.c: 67:     Lcd_Cmd(0x00);
  2165     06B4  3000               	movlw	0
  2166     06B5  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2167                           
  2168                           ;LCD.c: 68:     Lcd_Cmd(0x0C);
  2169     06BA  300C               	movlw	12
  2170     06BB  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2171                           
  2172                           ;LCD.c: 69:     Lcd_Cmd(0x00);
  2173     06C0  3000               	movlw	0
  2174     06C1  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2175                           
  2176                           ;LCD.c: 70:     Lcd_Cmd(0x06);
  2177     06C6  3006               	movlw	6
  2178     06C7  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2179     06CC                     l91:
  2180     06CC  0008               	return
  2181     06CD                     __end_of_Lcd_Init:
  2182                           
  2183                           	psect	text12
  2184     04B5                     __ptext12:	
  2185 ;; *************** function _Lcd_Clear *****************
  2186 ;; Defined at:
  2187 ;;		line 33 in file "LCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2201 ;;      Params:         0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0
  2204 ;;      Totals:         0       0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 2
  2208 ;; This function calls:
  2209 ;;		_Lcd_Cmd
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215     04B5                     _Lcd_Clear:	
  2216                           ;psect for function _Lcd_Clear
  2217                           
  2218     04B5                     l1213:	
  2219                           ;incstack = 0
  2220                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2221                           
  2222                           
  2223                           ;LCD.c: 34:     Lcd_Cmd(0);
  2224     04B5  3000               	movlw	0
  2225     04B6  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2226                           
  2227                           ;LCD.c: 35:     Lcd_Cmd(1);
  2228     04BB  3001               	movlw	1
  2229     04BC  120A  118A  24D8  120A  118A  	fcall	_Lcd_Cmd
  2230     04C1                     l82:
  2231     04C1  0008               	return
  2232     04C2                     __end_of_Lcd_Clear:
  2233                           
  2234                           	psect	text13
  2235     04D8                     __ptext13:	
  2236 ;; *************** function _Lcd_Cmd *****************
  2237 ;; Defined at:
  2238 ;;		line 25 in file "LCD.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  a               1    wreg     unsigned char 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  a               1    3[COMMON] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0, pclath, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         0       0       0       0       0
  2253 ;;      Locals:         1       0       0       0       0
  2254 ;;      Temps:          2       0       0       0       0
  2255 ;;      Totals:         3       0       0       0       0
  2256 ;;Total ram usage:        3 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 1
  2259 ;; This function calls:
  2260 ;;		_Lcd_Port
  2261 ;; This function is called by:
  2262 ;;		_Lcd_Clear
  2263 ;;		_Lcd_Set_Cursor
  2264 ;;		_Lcd_Init
  2265 ;;		_Lcd_Shift_Right
  2266 ;;		_Lcd_Shift_Left
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270     04D8                     _Lcd_Cmd:	
  2271                           ;psect for function _Lcd_Cmd
  2272                           
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2276                           ;Lcd_Cmd@a stored from wreg
  2277     04D8  00F3               	movwf	Lcd_Cmd@a
  2278     04D9                     l1053:
  2279                           
  2280                           ;LCD.c: 26:     PORTDbits.RD2 = 0;
  2281     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2282     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2283     04DB  1108               	bcf	8,2	;volatile
  2284     04DC                     l1055:
  2285                           
  2286                           ;LCD.c: 27:     Lcd_Port(a);
  2287     04DC  0873               	movf	Lcd_Cmd@a,w
  2288     04DD  120A  118A  24F2  120A  118A  	fcall	_Lcd_Port
  2289     04E2                     l1057:
  2290                           
  2291                           ;LCD.c: 28:     RD3 = 1;
  2292     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2293     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2294     04E4  1588               	bsf	8,3	;volatile
  2295     04E5                     l1059:
  2296                           
  2297                           ;LCD.c: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2298     04E5  3006               	movlw	6
  2299     04E6  00F2               	movwf	??_Lcd_Cmd+1
  2300     04E7  3030               	movlw	48
  2301     04E8  00F1               	movwf	??_Lcd_Cmd
  2302     04E9                     u727:
  2303     04E9  0BF1               	decfsz	??_Lcd_Cmd,f
  2304     04EA  2CE9               	goto	u727
  2305     04EB  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2306     04EC  2CE9               	goto	u727
  2307     04ED  0000               	nop
  2308     04EE                     l1061:
  2309                           
  2310                           ;LCD.c: 30:     RD3 = 0;
  2311     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2312     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2313     04F0  1188               	bcf	8,3	;volatile
  2314     04F1                     l79:
  2315     04F1  0008               	return
  2316     04F2                     __end_of_Lcd_Cmd:
  2317                           
  2318                           	psect	text14
  2319     04F2                     __ptext14:	
  2320 ;; *************** function _Lcd_Port *****************
  2321 ;; Defined at:
  2322 ;;		line 3 in file "LCD.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  a               1    wreg     unsigned char 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  a               1    0[COMMON] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       0       0       0       0
  2337 ;;      Locals:         1       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0
  2339 ;;      Totals:         1       0       0       0       0
  2340 ;;Total ram usage:        1 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_Lcd_Cmd
  2346 ;;		_Lcd_Init
  2347 ;;		_Lcd_Write_Char
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     04F2                     _Lcd_Port:	
  2352                           ;psect for function _Lcd_Port
  2353                           
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in _Lcd_Port: [wreg]
  2357                           ;Lcd_Port@a stored from wreg
  2358     04F2  00F0               	movwf	Lcd_Port@a
  2359     04F3                     l1033:
  2360                           
  2361                           ;LCD.c: 4:     if (a & 1)
  2362     04F3  1C70               	btfss	Lcd_Port@a,0
  2363     04F4  2CF6               	goto	u331
  2364     04F5  2CF7               	goto	u330
  2365     04F6                     u331:
  2366     04F6  2CFB               	goto	l68
  2367     04F7                     u330:
  2368     04F7                     l1035:
  2369                           
  2370                           ;LCD.c: 5:         RD4 = 1;
  2371     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2372     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2373     04F9  1608               	bsf	8,4	;volatile
  2374     04FA  2CFE               	goto	l69
  2375     04FB                     l68:	
  2376                           ;LCD.c: 6:     else
  2377                           
  2378                           
  2379                           ;LCD.c: 7:         RD4 = 0;
  2380     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2381     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2382     04FD  1208               	bcf	8,4	;volatile
  2383     04FE                     l69:
  2384                           
  2385                           ;LCD.c: 9:     if (a & 2)
  2386     04FE  1CF0               	btfss	Lcd_Port@a,1
  2387     04FF  2D01               	goto	u341
  2388     0500  2D02               	goto	u340
  2389     0501                     u341:
  2390     0501  2D04               	goto	l70
  2391     0502                     u340:
  2392     0502                     l1037:
  2393                           
  2394                           ;LCD.c: 10:         RD5 = 1;
  2395     0502  1688               	bsf	8,5	;volatile
  2396     0503  2D05               	goto	l71
  2397     0504                     l70:	
  2398                           ;LCD.c: 11:     else
  2399                           
  2400                           
  2401                           ;LCD.c: 12:         RD5 = 0;
  2402     0504  1288               	bcf	8,5	;volatile
  2403     0505                     l71:
  2404                           
  2405                           ;LCD.c: 14:     if (a & 4)
  2406     0505  1D70               	btfss	Lcd_Port@a,2
  2407     0506  2D08               	goto	u351
  2408     0507  2D09               	goto	u350
  2409     0508                     u351:
  2410     0508  2D0B               	goto	l72
  2411     0509                     u350:
  2412     0509                     l1039:
  2413                           
  2414                           ;LCD.c: 15:         RD6 = 1;
  2415     0509  1708               	bsf	8,6	;volatile
  2416     050A  2D0C               	goto	l73
  2417     050B                     l72:	
  2418                           ;LCD.c: 16:     else
  2419                           
  2420                           
  2421                           ;LCD.c: 17:         RD6 = 0;
  2422     050B  1308               	bcf	8,6	;volatile
  2423     050C                     l73:
  2424                           
  2425                           ;LCD.c: 19:     if (a & 8)
  2426     050C  1DF0               	btfss	Lcd_Port@a,3
  2427     050D  2D0F               	goto	u361
  2428     050E  2D10               	goto	u360
  2429     050F                     u361:
  2430     050F  2D12               	goto	l74
  2431     0510                     u360:
  2432     0510                     l1041:
  2433                           
  2434                           ;LCD.c: 20:         RD7 = 1;
  2435     0510  1788               	bsf	8,7	;volatile
  2436     0511  2D13               	goto	l76
  2437     0512                     l74:	
  2438                           ;LCD.c: 21:     else
  2439                           
  2440                           
  2441                           ;LCD.c: 22:         RD7 = 0;
  2442     0512  1388               	bcf	8,7	;volatile
  2443     0513                     l76:
  2444     0513  0008               	return
  2445     0514                     __end_of_Lcd_Port:
  2446     007E                     btemp	set	126	;btemp
  2447     007E                     wtemp0	set	126
  2448                           
  2449                           	psect	idloc
  2450                           
  2451                           ;Config register IDLOC0 @ 0x2000
  2452                           ;	unspecified, using default values
  2453     2000                     	org	8192
  2454     2000  3FFF               	dw	16383
  2455                           
  2456                           ;Config register IDLOC1 @ 0x2001
  2457                           ;	unspecified, using default values
  2458     2001                     	org	8193
  2459     2001  3FFF               	dw	16383
  2460                           
  2461                           ;Config register IDLOC2 @ 0x2002
  2462                           ;	unspecified, using default values
  2463     2002                     	org	8194
  2464     2002  3FFF               	dw	16383
  2465                           
  2466                           ;Config register IDLOC3 @ 0x2003
  2467                           ;	unspecified, using default values
  2468     2003                     	org	8195
  2469     2003  3FFF               	dw	16383
  2470                           
  2471                           	psect	config
  2472                           
  2473                           ;Config register CONFIG1 @ 0x2007
  2474                           ;	Oscillator Selection bits
  2475                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2476                           ;	Watchdog Timer Enable bit
  2477                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2478                           ;	Power-up Timer Enable bit
  2479                           ;	PWRTE = OFF, PWRT disabled
  2480                           ;	RE3/MCLR pin function select bit
  2481                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2482                           ;	Code Protection bit
  2483                           ;	CP = OFF, Program memory code protection is disabled
  2484                           ;	Data Code Protection bit
  2485                           ;	CPD = OFF, Data memory code protection is disabled
  2486                           ;	Brown Out Reset Selection bits
  2487                           ;	BOREN = OFF, BOR disabled
  2488                           ;	Internal External Switchover bit
  2489                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2490                           ;	Fail-Safe Clock Monitor Enabled bit
  2491                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2492                           ;	Low Voltage Programming Enable bit
  2493                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2494                           ;	In-Circuit Debugger Mode bit
  2495                           ;	DEBUG = 0x1, unprogrammed default
  2496     2007                     	org	8199
  2497     2007  20D6               	dw	8406
  2498                           
  2499                           ;Config register CONFIG2 @ 0x2008
  2500                           ;	Brown-out Reset Selection bit
  2501                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2502                           ;	Flash Program Memory Self Write Enable bits
  2503                           ;	WRT = OFF, Write protection off
  2504     2008                     	org	8200
  2505     2008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), RAM(DATA[512]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), valor(BANK0[1]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2784
                                             13 BANK0      1     1      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    17      4    1164
                                              0 BANK0     13     9      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 02 23:26:53 2023

                       pc 0002               _SSPSTATbits 0094                        l51 0536  
                      l70 0504                        l71 0505                        l72 050B  
                      l73 050C                        l74 0512                        l82 04C1  
                      l91 06CC                        l76 0513                        l68 04FB  
                      l69 04FE                        l94 0569                        l79 04F1  
                      l88 066F                        fsr 0004                       l100 05E5  
                     l122 04D2                       l123 04D7                       l140 04B4  
                     l126 04A5                       l129 04AB                       l247 07F6  
                     _ADC 002E                       l523 0629                       l533 05A3  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u400 05EE  
                     u401 05ED                       u330 04F7                       u331 04F6  
                     u340 0502                       u420 0600                       u500 058C  
                     u341 0501                       u421 05FF                       u501 058B  
                     u350 0509                       u351 0508                       u415 05F2  
                     u360 0510                       u600 0653                       u440 0611  
                     u520 059F                       u361 050F                       u601 0652  
                     u441 0610                       u521 059E                       u505 0588  
                     u370 04CA                       u530 0738                       u371 04C9  
                     u435 0601                       u515 0593                       u531 0737  
                     u620 05B1                       u460 0625                       u540 0790  
                     u461 0624                       u445 060D                       u541 078F  
                     u630 05D3                       u390 04AB                       u470 0570  
                     u550 079B                       u615 0659                       u391 04AA  
                     u455 0619                       u471 056F                       u551 079A  
                     u640 05E5                       u560 07E0                       u385 0544  
                     u641 05E4                       u561 07DF                       u545 078C  
                     u490 0582                       u570 07F0                       u707 0689  
                     u491 0581                       u571 07EF                       u580 0630  
                     u717 0697                       u581 062F                       u485 0574  
                     u727 04E9                       u657 06DE                       u595 0636  
                     u667 06EE                       u677 0554                       u687 0564  
                     u697 067A                       fsr0 0004                       indf 0000  
                    l1101 0617                      l1103 0618                      l1111 056A  
                    l1041 0510                      l1033 04F3                      l1105 061F  
                    l1121 0582                      l1113 0570                      l1201 07D7  
                    l1035 04F7                      l1051 04D1                      l1043 04C3  
                    l1107 0625                      l1123 058C                      l1115 0573  
                    l1203 07E0                      l1037 0502                      l1061 04EE  
                    l1053 04D9                      l1213 04B5                      l1221 0640  
                    l1045 04CA                      l1141 052C                      l1133 0514  
                    l1125 0592                      l1117 057A                      l1205 07F0  
                    l1039 0509                      l1055 04DC                      l1151 068D  
                    l1231 0663                      l1223 0646                      l1215 062B  
                    l1071 0552                      l1063 0538                      l1047 04CC  
                    l1143 052D                      l1135 0520                      l1127 0599  
                    l1119 057E                      l1057 04E2                      l1153 0693  
                    l1145 0670                      l1233 0669                      l1217 0630  
                    l1225 064D                      l1081 0566                      l1073 0556  
                    l1065 053E                      l1241 05C9                      l1049 04CE  
                    l1137 0523                      l1129 059F                      l1161 072D  
                    l1059 04E5                      l1147 0676                      l1227 0653  
                    l1219 063D                      l1075 0559                      l1067 0541  
                    l1235 05A4                      l1139 0526                      l1083 04A5  
                    l1155 04AC                      l1091 05F1                      l1171 0748  
                    l1163 0732                      l1251 06F2                      l1243 06CD  
                    l1149 067F                      l1229 0660                      l1077 055F  
                    l1069 054F                      l1237 05A7                      l1157 04B1  
                    l1093 05F8                      l1085 05E6                      l1181 0773  
                    l1165 0738                      l1261 0718                      l1253 06F5  
                    l1245 06D7                      l1079 0562                      l1239 05C3  
                    l1095 05FC                      l1087 05E8                      l1191 0791  
                    l1175 074D                      l1167 073F                      l1263 0720  
                    l1255 0702                      l1247 06DA                      l1097 0600  
                    l1089 05EE                      l1193 079B                      l1177 0767  
                    l1169 0746                      l1257 0707                      l1249 06E2  
                    l1099 0611                      l1195 079E                      l1187 0775  
                    l1179 076F                      l1259 070F                      l1197 07CA  
                    l1199 07D1                      l1289 075F                      STR_1 0021  
                    STR_2 001D         ?_Lcd_Write_String 0075                      _main 06CD  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         __end_of_Lcd_Cmd 04F2                     ?_main 0070                     _ANSEL 0188  
         __end_of___lwdiv 062A           __end_of___lwmod 05A4                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
         __end_of_dpowers 001D                     _valor 0030                     _setup 0514  
                   pclath 000A           __end_of_spiInit 04D8           __end_of_spiRead 04B5  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07F7  
        __end_of_Lcd_Init 06CD          __end_of_Lcd_Port 0514           __initialization 07F7  
            __end_of_main 072D                    ??_main 002D                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
               ??___lwdiv 0074                 ??___lwmod 007C                 ??_spiInit 0073  
               ??_spiRead 0070                 ??_sprintf 0024           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 04C2            __pcstackCOMMON 0070  
           __end_of_setup 0537            _Lcd_Set_Cursor 062A                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0074                __pbssBANK0 002E  
              __pmaintext 06CD    __end_of_Lcd_Set_Cursor 0670                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 0537                   _Lcd_Cmd 04D8                   ___lwdiv 05E6  
                 ___lwmod 056A           ?_Lcd_Set_Cursor 0074                   __ptext1 072D  
                 __ptext2 056A                   __ptext3 05E6                   __ptext4 04AC  
                 __ptext5 04A5                   __ptext6 0514                   __ptext7 04C2  
                 __ptext8 05A4                   __ptext9 0537                   _dpowers 0013  
                 _spiInit 04C2                   _spiRead 04AC                   _sprintf 072D  
  __end_of_Lcd_Write_Char 056A      end_of_initialization 07FC                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _PORTDbits 0008                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
               _Lcd_Clear 04B5            _spiReceiveWait 04A5          _Lcd_Write_String 05A4  
     start_initialization 07F7    __end_of_spiReceiveWait 04AC                ?_Lcd_Clear 0070  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070               sprintf@flag 0027  
             sprintf@prec 002B          ___lwdiv@dividend 0072           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070                  ?___lwmod 0078  
               __pstrings 0003                  ?_spiInit 0070                  ?_spiRead 0070  
        ___lwdiv@quotient 0075                  ?_sprintf 0020      spiInit@sTransmitEdge 0072  
      spiInit@sDataSample 0070                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
             __stringbase 0012          ??_Lcd_Write_Char 0071                  _Lcd_Init 0670  
                _Lcd_Port 04F2  __end_of_Lcd_Write_String 05E6        __end_of__stringtab 0013  
              sprintf@val 0029           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 062A                  __ptext11 0670                  __ptext12 04B5  
                __ptext13 04D8                  __ptext14 04F2              spiInit@sType 0073  
       spiInit@sClockIdle 0071        Lcd_Write_Char@temp 0072                 sprintf@ap 0028  
               sprintf@sp 0020          ___lwmod@dividend 007A          ??_spiReceiveWait 0070  
               stringcode 000D                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                sprintf@c 002C                  sprintf@f 0022           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 000D                  stringtab 0003  
