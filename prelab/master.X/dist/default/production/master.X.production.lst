

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 00:18:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     008F                     	;# 
   108     0090                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0095                     	;# 
   116     0096                     	;# 
   117     0097                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     0105                     	;# 
   127     0107                     	;# 
   128     0108                     	;# 
   129     0109                     	;# 
   130     010C                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0185                     	;# 
   136     0187                     	;# 
   137     0188                     	;# 
   138     0189                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     008F                     	;# 
   186     0090                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0095                     	;# 
   194     0096                     	;# 
   195     0097                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009A                     	;# 
   199     009B                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009E                     	;# 
   203     009F                     	;# 
   204     0105                     	;# 
   205     0107                     	;# 
   206     0108                     	;# 
   207     0109                     	;# 
   208     010C                     	;# 
   209     010C                     	;# 
   210     010D                     	;# 
   211     010E                     	;# 
   212     010F                     	;# 
   213     0185                     	;# 
   214     0187                     	;# 
   215     0188                     	;# 
   216     0189                     	;# 
   217     018C                     	;# 
   218     018D                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     000E                     	;# 
   234     000E                     	;# 
   235     000F                     	;# 
   236     0010                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0015                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001B                     	;# 
   250     001C                     	;# 
   251     001D                     	;# 
   252     001E                     	;# 
   253     001F                     	;# 
   254     0081                     	;# 
   255     0085                     	;# 
   256     0086                     	;# 
   257     0087                     	;# 
   258     0088                     	;# 
   259     0089                     	;# 
   260     008C                     	;# 
   261     008D                     	;# 
   262     008E                     	;# 
   263     008F                     	;# 
   264     0090                     	;# 
   265     0091                     	;# 
   266     0092                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0095                     	;# 
   272     0096                     	;# 
   273     0097                     	;# 
   274     0098                     	;# 
   275     0099                     	;# 
   276     009A                     	;# 
   277     009B                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     0105                     	;# 
   283     0107                     	;# 
   284     0108                     	;# 
   285     0109                     	;# 
   286     010C                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     0185                     	;# 
   292     0187                     	;# 
   293     0188                     	;# 
   294     0189                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297     0000                     	;# 
   298     0001                     	;# 
   299     0002                     	;# 
   300     0003                     	;# 
   301     0004                     	;# 
   302     0005                     	;# 
   303     0006                     	;# 
   304     0007                     	;# 
   305     0008                     	;# 
   306     0009                     	;# 
   307     000A                     	;# 
   308     000B                     	;# 
   309     000C                     	;# 
   310     000D                     	;# 
   311     000E                     	;# 
   312     000E                     	;# 
   313     000F                     	;# 
   314     0010                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0013                     	;# 
   318     0014                     	;# 
   319     0015                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0017                     	;# 
   323     0018                     	;# 
   324     0019                     	;# 
   325     001A                     	;# 
   326     001B                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001D                     	;# 
   330     001E                     	;# 
   331     001F                     	;# 
   332     0081                     	;# 
   333     0085                     	;# 
   334     0086                     	;# 
   335     0087                     	;# 
   336     0088                     	;# 
   337     0089                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     008F                     	;# 
   342     0090                     	;# 
   343     0091                     	;# 
   344     0092                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0094                     	;# 
   349     0095                     	;# 
   350     0096                     	;# 
   351     0097                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009A                     	;# 
   355     009B                     	;# 
   356     009C                     	;# 
   357     009D                     	;# 
   358     009E                     	;# 
   359     009F                     	;# 
   360     0105                     	;# 
   361     0107                     	;# 
   362     0108                     	;# 
   363     0109                     	;# 
   364     010C                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     010E                     	;# 
   368     010F                     	;# 
   369     0185                     	;# 
   370     0187                     	;# 
   371     0188                     	;# 
   372     0189                     	;# 
   373     018C                     	;# 
   374     018D                     	;# 
   375     0013                     _SSPBUF	set	19
   376     0014                     _SSPCON	set	20
   377     0008                     _PORTDbits	set	8
   378     0006                     _PORTB	set	6
   379     0008                     _PORTD	set	8
   380     0007                     _PORTCbits	set	7
   381     0043                     _RD3	set	67
   382     0047                     _RD7	set	71
   383     0046                     _RD6	set	70
   384     0045                     _RD5	set	69
   385     0044                     _RD4	set	68
   386     0094                     _SSPSTATbits	set	148
   387     0094                     _SSPSTAT	set	148
   388     008F                     _OSCCONbits	set	143
   389     0087                     _TRISCbits	set	135
   390     0088                     _TRISD	set	136
   391     0086                     _TRISB	set	134
   392     043B                     _TRISC3	set	1083
   393     043D                     _TRISC5	set	1085
   394     0189                     _ANSELH	set	393
   395     0188                     _ANSEL	set	392
   396                           
   397                           	psect	strings
   398     0003                     __pstrings:
   399     0003                     stringtab:
   400     0003                     __stringtab:
   401     0003                     stringcode:	
   402                           ;	String table - string pointers are 1 byte each
   403                           
   404     0003                     stringdir:
   405     0003  3000               	movlw	high stringdir
   406     0004  008A               	movwf	10
   407     0005  0804               	movf	4,w
   408     0006  0A84               	incf	4,f
   409     0007  0782               	addwf	2,f
   410     0008                     __stringbase:
   411     0008  3400               	retlw	0
   412     0009                     __end_of__stringtab:
   413     0009                     STR_1:
   414     0009  3441               	retlw	65	;'A'
   415     000A  3444               	retlw	68	;'D'
   416     000B  3443               	retlw	67	;'C'
   417     000C  3400               	retlw	0
   418                           
   419                           	psect	cinit
   420     07F5                     start_initialization:	
   421                           ; #config settings
   422                           
   423     07F5                     __initialization:
   424                           
   425                           ; Clear objects allocated to BANK0
   426     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   427     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   428     07F7  01A0               	clrf	__pbssBANK0& (0+127)
   429     07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   430     07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   431     07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   432     07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   433     07FC                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436     07FC                     __end_of__initialization:
   437     07FC  0183               	clrf	3
   438     07FD  120A  118A  2F40   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssBANK0
   441     0020                     __pbssBANK0:
   442     0020                     _unidad:
   443     0020                     	ds	1
   444     0021                     _decenas:
   445     0021                     	ds	1
   446     0022                     _centenas:
   447     0022                     	ds	1
   448     0023                     _valor:
   449     0023                     	ds	1
   450     0024                     _ADC:
   451     0024                     	ds	1
   452                           
   453                           	psect	cstackCOMMON
   454     0070                     __pcstackCOMMON:
   455     0070                     ?_setup:
   456     0070                     ?_Lcd_Init:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?_Lcd_Clear:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?_Lcd_Write_String:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?_spiWrite:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ??_spiWrite:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ?_spiRead:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ??_spiRead:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     ?_Lcd_Write_Char:	
   478                           ; 1 bytes @ 0x0
   479                           
   480     0070                     ?_spiInit:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0070                     ?_main:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ?_Lcd_Port:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ??_Lcd_Port:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_Lcd_Cmd:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_spiReceiveWait:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ??_spiReceiveWait:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?___awdiv:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     Lcd_Port@a:	
   505                           ; 2 bytes @ 0x0
   506                           
   507     0070                     spiInit@sDataSample:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     spiWrite@dat:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ___awdiv@divisor:	
   514                           ; 1 bytes @ 0x0
   515                           
   516                           
   517                           ; 2 bytes @ 0x0
   518     0070                     	ds	1
   519     0071                     ??_Lcd_Write_Char:
   520     0071                     ??_Lcd_Cmd:	
   521                           ; 1 bytes @ 0x1
   522                           
   523     0071                     spiInit@sClockIdle:	
   524                           ; 1 bytes @ 0x1
   525                           
   526                           
   527                           ; 1 bytes @ 0x1
   528     0071                     	ds	1
   529     0072                     Lcd_Write_Char@temp:
   530     0072                     spiInit@sTransmitEdge:	
   531                           ; 1 bytes @ 0x2
   532                           
   533     0072                     ___awdiv@dividend:	
   534                           ; 1 bytes @ 0x2
   535                           
   536                           
   537                           ; 2 bytes @ 0x2
   538     0072                     	ds	1
   539     0073                     ??_spiInit:
   540     0073                     Lcd_Cmd@a:	
   541                           ; 1 bytes @ 0x3
   542                           
   543     0073                     Lcd_Write_Char@y:	
   544                           ; 1 bytes @ 0x3
   545                           
   546     0073                     spiInit@sType:	
   547                           ; 1 bytes @ 0x3
   548                           
   549                           
   550                           ; 1 bytes @ 0x3
   551     0073                     	ds	1
   552     0074                     ??_setup:
   553     0074                     ??_Lcd_Init:	
   554                           ; 1 bytes @ 0x4
   555                           
   556     0074                     ??_Lcd_Clear:	
   557                           ; 1 bytes @ 0x4
   558                           
   559     0074                     ?_Lcd_Set_Cursor:	
   560                           ; 1 bytes @ 0x4
   561                           
   562     0074                     ??___awdiv:	
   563                           ; 1 bytes @ 0x4
   564                           
   565     0074                     Lcd_Set_Cursor@b:	
   566                           ; 1 bytes @ 0x4
   567                           
   568     0074                     Lcd_Write_Char@a:	
   569                           ; 1 bytes @ 0x4
   570                           
   571                           
   572                           ; 1 bytes @ 0x4
   573     0074                     	ds	1
   574     0075                     ??_Lcd_Set_Cursor:
   575     0075                     ??_Lcd_Write_String:	
   576                           ; 1 bytes @ 0x5
   577                           
   578     0075                     ___awdiv@counter:	
   579                           ; 1 bytes @ 0x5
   580                           
   581     0075                     Lcd_Write_String@i:	
   582                           ; 1 bytes @ 0x5
   583                           
   584                           
   585                           ; 2 bytes @ 0x5
   586     0075                     	ds	1
   587     0076                     Lcd_Set_Cursor@a:
   588     0076                     ___awdiv@sign:	
   589                           ; 1 bytes @ 0x6
   590                           
   591                           
   592                           ; 1 bytes @ 0x6
   593     0076                     	ds	1
   594     0077                     Lcd_Set_Cursor@z:
   595     0077                     Lcd_Write_String@a:	
   596                           ; 1 bytes @ 0x7
   597                           
   598     0077                     ___awdiv@quotient:	
   599                           ; 1 bytes @ 0x7
   600                           
   601                           
   602                           ; 2 bytes @ 0x7
   603     0077                     	ds	1
   604     0078                     Lcd_Set_Cursor@y:
   605                           
   606                           ; 1 bytes @ 0x8
   607     0078                     	ds	1
   608     0079                     ?___awmod:
   609     0079                     Lcd_Set_Cursor@temp:	
   610                           ; 2 bytes @ 0x9
   611                           
   612     0079                     ___awmod@divisor:	
   613                           ; 1 bytes @ 0x9
   614                           
   615                           
   616                           ; 2 bytes @ 0x9
   617     0079                     	ds	2
   618     007B                     ___awmod@dividend:
   619                           
   620                           ; 2 bytes @ 0xB
   621     007B                     	ds	2
   622     007D                     ??___awmod:
   623                           
   624                           ; 1 bytes @ 0xD
   625     007D                     	ds	1
   626                           
   627                           	psect	cstackBANK0
   628     0025                     __pcstackBANK0:
   629     0025                     ___awmod@counter:
   630                           
   631                           ; 1 bytes @ 0x0
   632     0025                     	ds	1
   633     0026                     ___awmod@sign:
   634                           
   635                           ; 1 bytes @ 0x1
   636     0026                     	ds	1
   637     0027                     ??_main:
   638                           
   639                           ; 1 bytes @ 0x2
   640     0027                     	ds	2
   641                           
   642                           	psect	maintext
   643     0740                     __pmaintext:	
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 62 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : B00/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0
   665 ;;      Temps:          0       2       0       0       0
   666 ;;      Totals:         0       2       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels required when called: 3
   669 ;; This function calls:
   670 ;;		_Lcd_Clear
   671 ;;		_Lcd_Init
   672 ;;		_Lcd_Set_Cursor
   673 ;;		_Lcd_Write_Char
   674 ;;		_Lcd_Write_String
   675 ;;		___awdiv
   676 ;;		___awmod
   677 ;;		_setup
   678 ;;		_spiRead
   679 ;;		_spiWrite
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685     0740                     _main:	
   686                           ;psect for function _main
   687                           
   688     0740                     l1170:	
   689                           ;incstack = 0
   690                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   691                           
   692                           
   693                           ;main.c: 63:     setup();
   694     0740  120A  118A  2560  120A  118A  	fcall	_setup
   695                           
   696                           ;main.c: 64:     Lcd_Init();
   697     0745  120A  118A  267C  120A  118A  	fcall	_Lcd_Init
   698                           
   699                           ;main.c: 65:     Lcd_Clear();
   700     074A  120A  118A  2501  120A  118A  	fcall	_Lcd_Clear
   701                           
   702                           ;main.c: 66:     Lcd_Set_Cursor(1,1);
   703     074F  01F4               	clrf	Lcd_Set_Cursor@b
   704     0750  0AF4               	incf	Lcd_Set_Cursor@b,f
   705     0751  3001               	movlw	1
   706     0752  120A  118A  25DB  120A  118A  	fcall	_Lcd_Set_Cursor
   707     0757                     l1172:
   708                           
   709                           ;main.c: 67:     Lcd_Write_String("ADC");
   710     0757  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   711     0758  120A  118A  2583  120A  118A  	fcall	_Lcd_Write_String
   712     075D                     l1174:
   713                           
   714                           ;main.c: 72:         PORTCbits.RC2 = 0;
   715     075D  1283               	bcf	3,5	;RP0=0, select bank0
   716     075E  1303               	bcf	3,6	;RP1=0, select bank0
   717     075F  1107               	bcf	7,2	;volatile
   718     0760                     l1176:
   719                           
   720                           ;main.c: 73:         _delay((unsigned long)((1)*(4000000/4000.0)));
   721     0760  30C7               	movlw	199
   722     0761  1283               	bcf	3,5	;RP0=0, select bank0
   723     0762  1303               	bcf	3,6	;RP1=0, select bank0
   724     0763  00A7               	movwf	??_main
   725     0764                     u637:
   726     0764  2F65               	nop2
   727     0765  0BA7               	decfsz	??_main,f
   728     0766  2F64               	goto	u637
   729     0767  2F68               	nop2
   730     0768                     l1178:
   731                           
   732                           ;main.c: 75:        spiWrite(PORTD);
   733     0768  1283               	bcf	3,5	;RP0=0, select bank0
   734     0769  1303               	bcf	3,6	;RP1=0, select bank0
   735     076A  0808               	movf	8,w	;volatile
   736     076B  120A  118A  24EB  120A  118A  	fcall	_spiWrite
   737     0770                     l1180:
   738                           
   739                           ;main.c: 76:        ADC = spiRead();
   740     0770  120A  118A  24F8  120A  118A  	fcall	_spiRead
   741     0775  1283               	bcf	3,5	;RP0=0, select bank0
   742     0776  1303               	bcf	3,6	;RP1=0, select bank0
   743     0777  00A4               	movwf	_ADC
   744     0778                     l1182:
   745                           
   746                           ;main.c: 78:         _delay((unsigned long)((1)*(4000000/4000.0)));
   747     0778  30C7               	movlw	199
   748     0779  1283               	bcf	3,5	;RP0=0, select bank0
   749     077A  1303               	bcf	3,6	;RP1=0, select bank0
   750     077B  00A7               	movwf	??_main
   751     077C                     u647:
   752     077C  2F7D               	nop2
   753     077D  0BA7               	decfsz	??_main,f
   754     077E  2F7C               	goto	u647
   755     077F  2F80               	nop2
   756     0780                     l1184:
   757                           
   758                           ;main.c: 79:         PORTCbits.RC2 = 1;
   759     0780  1283               	bcf	3,5	;RP0=0, select bank0
   760     0781  1303               	bcf	3,6	;RP1=0, select bank0
   761     0782  1507               	bsf	7,2	;volatile
   762     0783                     l1186:
   763                           
   764                           ;main.c: 81:         PORTB = ADC;
   765     0783  0824               	movf	_ADC,w
   766     0784  0086               	movwf	6	;volatile
   767     0785                     l1188:
   768                           
   769                           ;main.c: 83:         centenas = (ADC/100);
   770     0785  3064               	movlw	100
   771     0786  00F0               	movwf	___awdiv@divisor
   772     0787  3000               	movlw	0
   773     0788  00F1               	movwf	___awdiv@divisor+1
   774     0789  0824               	movf	_ADC,w
   775     078A  00A7               	movwf	??_main
   776     078B  01A8               	clrf	??_main+1
   777     078C  0827               	movf	??_main,w
   778     078D  00F2               	movwf	___awdiv@dividend
   779     078E  0828               	movf	??_main+1,w
   780     078F  00F3               	movwf	___awdiv@dividend+1
   781     0790  120A  118A  26D9  120A  118A  	fcall	___awdiv
   782     0795  0870               	movf	?___awdiv,w
   783     0796  1283               	bcf	3,5	;RP0=0, select bank0
   784     0797  1303               	bcf	3,6	;RP1=0, select bank0
   785     0798  00A2               	movwf	_centenas
   786     0799                     l1190:
   787                           
   788                           ;main.c: 84:         decenas = (ADC/10)%10;
   789     0799  300A               	movlw	10
   790     079A  00F9               	movwf	___awmod@divisor
   791     079B  3000               	movlw	0
   792     079C  00FA               	movwf	___awmod@divisor+1
   793     079D  300A               	movlw	10
   794     079E  00F0               	movwf	___awdiv@divisor
   795     079F  3000               	movlw	0
   796     07A0  00F1               	movwf	___awdiv@divisor+1
   797     07A1  0824               	movf	_ADC,w
   798     07A2  00A7               	movwf	??_main
   799     07A3  01A8               	clrf	??_main+1
   800     07A4  0827               	movf	??_main,w
   801     07A5  00F2               	movwf	___awdiv@dividend
   802     07A6  0828               	movf	??_main+1,w
   803     07A7  00F3               	movwf	___awdiv@dividend+1
   804     07A8  120A  118A  26D9  120A  118A  	fcall	___awdiv
   805     07AD  0871               	movf	?___awdiv+1,w
   806     07AE  00FC               	movwf	___awmod@dividend+1
   807     07AF  0870               	movf	?___awdiv,w
   808     07B0  00FB               	movwf	___awmod@dividend
   809     07B1  120A  118A  2621  120A  118A  	fcall	___awmod
   810     07B6  0879               	movf	?___awmod,w
   811     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   812     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   813     07B9  00A1               	movwf	_decenas
   814     07BA                     l1192:
   815                           
   816                           ;main.c: 85:         unidad = ADC%10;
   817     07BA  300A               	movlw	10
   818     07BB  00F9               	movwf	___awmod@divisor
   819     07BC  3000               	movlw	0
   820     07BD  00FA               	movwf	___awmod@divisor+1
   821     07BE  0824               	movf	_ADC,w
   822     07BF  00A7               	movwf	??_main
   823     07C0  01A8               	clrf	??_main+1
   824     07C1  0827               	movf	??_main,w
   825     07C2  00FB               	movwf	___awmod@dividend
   826     07C3  0828               	movf	??_main+1,w
   827     07C4  00FC               	movwf	___awmod@dividend+1
   828     07C5  120A  118A  2621  120A  118A  	fcall	___awmod
   829     07CA  0879               	movf	?___awmod,w
   830     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   831     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   832     07CD  00A0               	movwf	_unidad
   833     07CE                     l1194:
   834                           
   835                           ;main.c: 87:         Lcd_Set_Cursor(2,1);
   836     07CE  01F4               	clrf	Lcd_Set_Cursor@b
   837     07CF  0AF4               	incf	Lcd_Set_Cursor@b,f
   838     07D0  3002               	movlw	2
   839     07D1  120A  118A  25DB  120A  118A  	fcall	_Lcd_Set_Cursor
   840     07D6                     l1196:
   841                           
   842                           ;main.c: 88:         Lcd_Write_Char(centenas + 48);
   843     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   844     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   845     07D8  0822               	movf	_centenas,w
   846     07D9  3E30               	addlw	48
   847     07DA  120A  118A  25A8  120A  118A  	fcall	_Lcd_Write_Char
   848     07DF                     l1198:
   849                           
   850                           ;main.c: 89:         Lcd_Write_Char(decenas + 48);
   851     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   852     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   853     07E1  0821               	movf	_decenas,w
   854     07E2  3E30               	addlw	48
   855     07E3  120A  118A  25A8  120A  118A  	fcall	_Lcd_Write_Char
   856     07E8                     l1200:
   857                           
   858                           ;main.c: 90:         Lcd_Write_Char(unidad + 48);
   859     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   860     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   861     07EA  0820               	movf	_unidad,w
   862     07EB  3E30               	addlw	48
   863     07EC  120A  118A  25A8  120A  118A  	fcall	_Lcd_Write_Char
   864     07F1  2F5D               	goto	l1174
   865     07F2  120A  118A  2800   	ljmp	start
   866     07F5                     __end_of_main:
   867                           
   868                           	psect	text1
   869     04EB                     __ptext1:	
   870 ;; *************** function _spiWrite *****************
   871 ;; Defined at:
   872 ;;		line 25 in file "SPI.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  dat             1    wreg     unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  dat             1    0[COMMON] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         1       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         1       0       0       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899     04EB                     _spiWrite:	
   900                           ;psect for function _spiWrite
   901                           
   902                           
   903                           ;incstack = 0
   904                           ; Regs used in _spiWrite: [wreg]
   905                           ;spiWrite@dat stored from wreg
   906     04EB  00F0               	movwf	spiWrite@dat
   907     04EC                     l1080:
   908                           
   909                           ;SPI.c: 25: void spiWrite(char dat);SPI.c: 26: {;SPI.c: 27:     SSPBUF = dat;
   910     04EC  0870               	movf	spiWrite@dat,w
   911     04ED  1283               	bcf	3,5	;RP0=0, select bank0
   912     04EE  1303               	bcf	3,6	;RP1=0, select bank0
   913     04EF  0093               	movwf	19	;volatile
   914     04F0                     l140:
   915     04F0  0008               	return
   916     04F1                     __end_of_spiWrite:
   917                           
   918                           	psect	text2
   919     04F8                     __ptext2:	
   920 ;; *************** function _spiRead *****************
   921 ;; Defined at:
   922 ;;		line 38 in file "SPI.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      unsigned char 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0
   939 ;;      Totals:         0       0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 1
   943 ;; This function calls:
   944 ;;		_spiReceiveWait
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950     04F8                     _spiRead:	
   951                           ;psect for function _spiRead
   952                           
   953     04F8                     l1082:	
   954                           ;incstack = 0
   955                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   956                           
   957                           
   958                           ;SPI.c: 40:     spiReceiveWait();
   959     04F8  120A  118A  24F1  120A  118A  	fcall	_spiReceiveWait
   960     04FD                     l1084:
   961                           
   962                           ;SPI.c: 41:     return(SSPBUF);
   963     04FD  1283               	bcf	3,5	;RP0=0, select bank0
   964     04FE  1303               	bcf	3,6	;RP1=0, select bank0
   965     04FF  0813               	movf	19,w	;volatile
   966     0500                     l148:
   967     0500  0008               	return
   968     0501                     __end_of_spiRead:
   969                           
   970                           	psect	text3
   971     04F1                     __ptext3:	
   972 ;; *************** function _spiReceiveWait *****************
   973 ;; Defined at:
   974 ;;		line 20 in file "SPI.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		None
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0
   991 ;;      Totals:         0       0       0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_spiRead
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001     04F1                     _spiReceiveWait:	
  1002                           ;psect for function _spiReceiveWait
  1003                           
  1004     04F1                     l1026:	
  1005                           ;incstack = 0
  1006                           ; Regs used in _spiReceiveWait: []
  1007                           
  1008     04F1                     l134:	
  1009                           ;SPI.c: 22:     while ( !SSPSTATbits.BF );
  1010                           
  1011     04F1  1683               	bsf	3,5	;RP0=1, select bank1
  1012     04F2  1303               	bcf	3,6	;RP1=0, select bank1
  1013     04F3  1C14               	btfss	20,0	;volatile
  1014     04F4  2CF6               	goto	u381
  1015     04F5  2CF7               	goto	u380
  1016     04F6                     u381:
  1017     04F6  2CF1               	goto	l134
  1018     04F7                     u380:
  1019     04F7                     l137:
  1020     04F7  0008               	return
  1021     04F8                     __end_of_spiReceiveWait:
  1022                           
  1023                           	psect	text4
  1024     0560                     __ptext4:	
  1025 ;; *************** function _setup *****************
  1026 ;; Defined at:
  1027 ;;		line 97 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1041 ;;      Params:         0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 1
  1048 ;; This function calls:
  1049 ;;		_spiInit
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055     0560                     _setup:	
  1056                           ;psect for function _setup
  1057                           
  1058     0560                     l1028:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1061                           
  1062                           
  1063                           ;main.c: 98:     ANSEL = 0;
  1064     0560  1683               	bsf	3,5	;RP0=1, select bank3
  1065     0561  1703               	bsf	3,6	;RP1=1, select bank3
  1066     0562  0188               	clrf	8	;volatile
  1067                           
  1068                           ;main.c: 99:     ANSELH = 0;
  1069     0563  0189               	clrf	9	;volatile
  1070                           
  1071                           ;main.c: 100:     TRISB = 0;
  1072     0564  1683               	bsf	3,5	;RP0=1, select bank1
  1073     0565  1303               	bcf	3,6	;RP1=0, select bank1
  1074     0566  0186               	clrf	6	;volatile
  1075                           
  1076                           ;main.c: 101:     TRISD = 0;
  1077     0567  0188               	clrf	8	;volatile
  1078                           
  1079                           ;main.c: 102:     PORTB = 0;
  1080     0568  1283               	bcf	3,5	;RP0=0, select bank0
  1081     0569  1303               	bcf	3,6	;RP1=0, select bank0
  1082     056A  0186               	clrf	6	;volatile
  1083                           
  1084                           ;main.c: 103:     PORTD = 0;
  1085     056B  0188               	clrf	8	;volatile
  1086     056C                     l1030:
  1087                           
  1088                           ;main.c: 104:     TRISCbits.TRISC2 = 0;
  1089     056C  1683               	bsf	3,5	;RP0=1, select bank1
  1090     056D  1303               	bcf	3,6	;RP1=0, select bank1
  1091     056E  1107               	bcf	7,2	;volatile
  1092     056F                     l1032:
  1093                           
  1094                           ;main.c: 105:     PORTCbits.RC2 = 1;
  1095     056F  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0570  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0571  1507               	bsf	7,2	;volatile
  1098     0572                     l1034:
  1099                           
  1100                           ;main.c: 106:     OSCCONbits.IRCF = 0b110;
  1101     0572  1683               	bsf	3,5	;RP0=1, select bank1
  1102     0573  1303               	bcf	3,6	;RP1=0, select bank1
  1103     0574  080F               	movf	15,w	;volatile
  1104     0575  398F               	andlw	-113
  1105     0576  3860               	iorlw	96
  1106     0577  008F               	movwf	15	;volatile
  1107     0578                     l1036:
  1108                           
  1109                           ;main.c: 107:     OSCCONbits.SCS = 1;
  1110     0578  140F               	bsf	15,0	;volatile
  1111     0579                     l1038:
  1112                           
  1113                           ;main.c: 108:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1114     0579  01F0               	clrf	spiInit@sDataSample
  1115     057A  01F1               	clrf	spiInit@sClockIdle
  1116     057B  01F2               	clrf	spiInit@sTransmitEdge
  1117     057C  3020               	movlw	32
  1118     057D  120A  118A  250E  120A  118A  	fcall	_spiInit
  1119     0582                     l59:
  1120     0582  0008               	return
  1121     0583                     __end_of_setup:
  1122                           
  1123                           	psect	text5
  1124     050E                     __ptext5:	
  1125 ;; *************** function _spiInit *****************
  1126 ;; Defined at:
  1127 ;;		line 3 in file "SPI.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  sType           1    wreg     enum E1292
  1130 ;;  sDataSample     1    0[COMMON] enum E1300
  1131 ;;  sClockIdle      1    1[COMMON] enum E1304
  1132 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  sType           1    3[COMMON] enum E1292
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         3       0       0       0       0
  1145 ;;      Locals:         1       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0
  1147 ;;      Totals:         4       0       0       0       0
  1148 ;;Total ram usage:        4 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_setup
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157     050E                     _spiInit:	
  1158                           ;psect for function _spiInit
  1159                           
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1163                           ;spiInit@sType stored from wreg
  1164     050E  00F3               	movwf	spiInit@sType
  1165     050F                     l1006:
  1166                           
  1167                           ;SPI.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 4: {;SPI.c: 5:     TRISC5 = 0;
  1168     050F  1683               	bsf	3,5	;RP0=1, select bank1
  1169     0510  1303               	bcf	3,6	;RP1=0, select bank1
  1170     0511  1287               	bcf	7,5	;volatile
  1171                           
  1172                           ;SPI.c: 6:     if(sType & 0b00000100)
  1173     0512  1D73               	btfss	spiInit@sType,2
  1174     0513  2D15               	goto	u371
  1175     0514  2D16               	goto	u370
  1176     0515                     u371:
  1177     0515  2D1A               	goto	l1012
  1178     0516                     u370:
  1179     0516                     l1008:
  1180                           
  1181                           ;SPI.c: 7:     {;SPI.c: 8:         SSPSTAT = sTransmitEdge;
  1182     0516  0872               	movf	spiInit@sTransmitEdge,w
  1183     0517  0094               	movwf	20	;volatile
  1184     0518                     l1010:
  1185                           
  1186                           ;SPI.c: 9:         TRISC3 = 1;
  1187     0518  1587               	bsf	7,3	;volatile
  1188                           
  1189                           ;SPI.c: 10:     }
  1190     0519  2D1E               	goto	l130
  1191     051A                     l1012:
  1192                           
  1193                           ;SPI.c: 12:     {;SPI.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
  1194     051A  0870               	movf	spiInit@sDataSample,w
  1195     051B  0472               	iorwf	spiInit@sTransmitEdge,w
  1196     051C  0094               	movwf	20	;volatile
  1197     051D                     l1014:
  1198                           
  1199                           ;SPI.c: 14:         TRISC3 = 0;
  1200     051D  1187               	bcf	7,3	;volatile
  1201     051E                     l130:	
  1202                           ;SPI.c: 15:     }
  1203                           
  1204                           
  1205                           ;SPI.c: 17:     SSPCON = sType | sClockIdle;
  1206     051E  0873               	movf	spiInit@sType,w
  1207     051F  0471               	iorwf	spiInit@sClockIdle,w
  1208     0520  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0521  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0522  0094               	movwf	20	;volatile
  1211     0523                     l131:
  1212     0523  0008               	return
  1213     0524                     __end_of_spiInit:
  1214                           
  1215                           	psect	text6
  1216     0621                     __ptext6:	
  1217 ;; *************** function ___awmod *****************
  1218 ;; Defined at:
  1219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  divisor         2    9[COMMON] int 
  1222 ;;  dividend        2   11[COMMON] int 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  sign            1    1[BANK0 ] unsigned char 
  1225 ;;  counter         1    0[BANK0 ] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  2    9[COMMON] int 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         4       0       0       0       0
  1236 ;;      Locals:         0       2       0       0       0
  1237 ;;      Temps:          1       0       0       0       0
  1238 ;;      Totals:         5       2       0       0       0
  1239 ;;Total ram usage:        7 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248     0621                     ___awmod:	
  1249                           ;psect for function ___awmod
  1250                           
  1251     0621                     l1132:	
  1252                           ;incstack = 0
  1253                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1254                           
  1255     0621  1283               	bcf	3,5	;RP0=0, select bank0
  1256     0622  1303               	bcf	3,6	;RP1=0, select bank0
  1257     0623  01A6               	clrf	___awmod@sign
  1258     0624                     l1134:
  1259     0624  1FFC               	btfss	___awmod@dividend+1,7
  1260     0625  2E27               	goto	u541
  1261     0626  2E28               	goto	u540
  1262     0627                     u541:
  1263     0627  2E2F               	goto	l1140
  1264     0628                     u540:
  1265     0628                     l1136:
  1266     0628  09FB               	comf	___awmod@dividend,f
  1267     0629  09FC               	comf	___awmod@dividend+1,f
  1268     062A  0AFB               	incf	___awmod@dividend,f
  1269     062B  1903               	skipnz
  1270     062C  0AFC               	incf	___awmod@dividend+1,f
  1271     062D                     l1138:
  1272     062D  01A6               	clrf	___awmod@sign
  1273     062E  0AA6               	incf	___awmod@sign,f
  1274     062F                     l1140:
  1275     062F  1FFA               	btfss	___awmod@divisor+1,7
  1276     0630  2E32               	goto	u551
  1277     0631  2E33               	goto	u550
  1278     0632                     u551:
  1279     0632  2E38               	goto	l1144
  1280     0633                     u550:
  1281     0633                     l1142:
  1282     0633  09F9               	comf	___awmod@divisor,f
  1283     0634  09FA               	comf	___awmod@divisor+1,f
  1284     0635  0AF9               	incf	___awmod@divisor,f
  1285     0636  1903               	skipnz
  1286     0637  0AFA               	incf	___awmod@divisor+1,f
  1287     0638                     l1144:
  1288     0638  0879               	movf	___awmod@divisor,w
  1289     0639  047A               	iorwf	___awmod@divisor+1,w
  1290     063A  1903               	btfsc	3,2
  1291     063B  2E3D               	goto	u561
  1292     063C  2E3E               	goto	u560
  1293     063D                     u561:
  1294     063D  2E6D               	goto	l1162
  1295     063E                     u560:
  1296     063E                     l1146:
  1297     063E  01A5               	clrf	___awmod@counter
  1298     063F  0AA5               	incf	___awmod@counter,f
  1299     0640  2E4C               	goto	l1152
  1300     0641                     l1148:
  1301     0641  3001               	movlw	1
  1302     0642                     u575:
  1303     0642  1003               	clrc
  1304     0643  0DF9               	rlf	___awmod@divisor,f
  1305     0644  0DFA               	rlf	___awmod@divisor+1,f
  1306     0645  3EFF               	addlw	-1
  1307     0646  1D03               	skipz
  1308     0647  2E42               	goto	u575
  1309     0648                     l1150:
  1310     0648  3001               	movlw	1
  1311     0649  00FD               	movwf	??___awmod
  1312     064A  087D               	movf	??___awmod,w
  1313     064B  07A5               	addwf	___awmod@counter,f
  1314     064C                     l1152:
  1315     064C  1FFA               	btfss	___awmod@divisor+1,7
  1316     064D  2E4F               	goto	u581
  1317     064E  2E50               	goto	u580
  1318     064F                     u581:
  1319     064F  2E41               	goto	l1148
  1320     0650                     u580:
  1321     0650                     l1154:
  1322     0650  087A               	movf	___awmod@divisor+1,w
  1323     0651  027C               	subwf	___awmod@dividend+1,w
  1324     0652  1D03               	skipz
  1325     0653  2E56               	goto	u595
  1326     0654  0879               	movf	___awmod@divisor,w
  1327     0655  027B               	subwf	___awmod@dividend,w
  1328     0656                     u595:
  1329     0656  1C03               	skipc
  1330     0657  2E59               	goto	u591
  1331     0658  2E5A               	goto	u590
  1332     0659                     u591:
  1333     0659  2E60               	goto	l1158
  1334     065A                     u590:
  1335     065A                     l1156:
  1336     065A  0879               	movf	___awmod@divisor,w
  1337     065B  02FB               	subwf	___awmod@dividend,f
  1338     065C  087A               	movf	___awmod@divisor+1,w
  1339     065D  1C03               	skipc
  1340     065E  03FC               	decf	___awmod@dividend+1,f
  1341     065F  02FC               	subwf	___awmod@dividend+1,f
  1342     0660                     l1158:
  1343     0660  3001               	movlw	1
  1344     0661                     u605:
  1345     0661  1003               	clrc
  1346     0662  0CFA               	rrf	___awmod@divisor+1,f
  1347     0663  0CF9               	rrf	___awmod@divisor,f
  1348     0664  3EFF               	addlw	-1
  1349     0665  1D03               	skipz
  1350     0666  2E61               	goto	u605
  1351     0667                     l1160:
  1352     0667  3001               	movlw	1
  1353     0668  02A5               	subwf	___awmod@counter,f
  1354     0669  1D03               	btfss	3,2
  1355     066A  2E6C               	goto	u611
  1356     066B  2E6D               	goto	u610
  1357     066C                     u611:
  1358     066C  2E50               	goto	l1154
  1359     066D                     u610:
  1360     066D                     l1162:
  1361     066D  0826               	movf	___awmod@sign,w
  1362     066E  1903               	btfsc	3,2
  1363     066F  2E71               	goto	u621
  1364     0670  2E72               	goto	u620
  1365     0671                     u621:
  1366     0671  2E77               	goto	l1166
  1367     0672                     u620:
  1368     0672                     l1164:
  1369     0672  09FB               	comf	___awmod@dividend,f
  1370     0673  09FC               	comf	___awmod@dividend+1,f
  1371     0674  0AFB               	incf	___awmod@dividend,f
  1372     0675  1903               	skipnz
  1373     0676  0AFC               	incf	___awmod@dividend+1,f
  1374     0677                     l1166:
  1375     0677  087C               	movf	___awmod@dividend+1,w
  1376     0678  00FA               	movwf	?___awmod+1
  1377     0679  087B               	movf	___awmod@dividend,w
  1378     067A  00F9               	movwf	?___awmod
  1379     067B                     l400:
  1380     067B  0008               	return
  1381     067C                     __end_of___awmod:
  1382                           
  1383                           	psect	text7
  1384     06D9                     __ptext7:	
  1385 ;; *************** function ___awdiv *****************
  1386 ;; Defined at:
  1387 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  divisor         2    0[COMMON] int 
  1390 ;;  dividend        2    2[COMMON] int 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  quotient        2    7[COMMON] int 
  1393 ;;  sign            1    6[COMMON] unsigned char 
  1394 ;;  counter         1    5[COMMON] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  2    0[COMMON] int 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         4       0       0       0       0
  1405 ;;      Locals:         4       0       0       0       0
  1406 ;;      Temps:          1       0       0       0       0
  1407 ;;      Totals:         9       0       0       0       0
  1408 ;;Total ram usage:        9 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417     06D9                     ___awdiv:	
  1418                           ;psect for function ___awdiv
  1419                           
  1420     06D9                     l1088:	
  1421                           ;incstack = 0
  1422                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1423                           
  1424     06D9  01F6               	clrf	___awdiv@sign
  1425     06DA                     l1090:
  1426     06DA  1FF1               	btfss	___awdiv@divisor+1,7
  1427     06DB  2EDD               	goto	u441
  1428     06DC  2EDE               	goto	u440
  1429     06DD                     u441:
  1430     06DD  2EE5               	goto	l1096
  1431     06DE                     u440:
  1432     06DE                     l1092:
  1433     06DE  09F0               	comf	___awdiv@divisor,f
  1434     06DF  09F1               	comf	___awdiv@divisor+1,f
  1435     06E0  0AF0               	incf	___awdiv@divisor,f
  1436     06E1  1903               	skipnz
  1437     06E2  0AF1               	incf	___awdiv@divisor+1,f
  1438     06E3                     l1094:
  1439     06E3  01F6               	clrf	___awdiv@sign
  1440     06E4  0AF6               	incf	___awdiv@sign,f
  1441     06E5                     l1096:
  1442     06E5  1FF3               	btfss	___awdiv@dividend+1,7
  1443     06E6  2EE8               	goto	u451
  1444     06E7  2EE9               	goto	u450
  1445     06E8                     u451:
  1446     06E8  2EF2               	goto	l1102
  1447     06E9                     u450:
  1448     06E9                     l1098:
  1449     06E9  09F2               	comf	___awdiv@dividend,f
  1450     06EA  09F3               	comf	___awdiv@dividend+1,f
  1451     06EB  0AF2               	incf	___awdiv@dividend,f
  1452     06EC  1903               	skipnz
  1453     06ED  0AF3               	incf	___awdiv@dividend+1,f
  1454     06EE                     l1100:
  1455     06EE  3001               	movlw	1
  1456     06EF  00F4               	movwf	??___awdiv
  1457     06F0  0874               	movf	??___awdiv,w
  1458     06F1  06F6               	xorwf	___awdiv@sign,f
  1459     06F2                     l1102:
  1460     06F2  01F7               	clrf	___awdiv@quotient
  1461     06F3  01F8               	clrf	___awdiv@quotient+1
  1462     06F4                     l1104:
  1463     06F4  0870               	movf	___awdiv@divisor,w
  1464     06F5  0471               	iorwf	___awdiv@divisor+1,w
  1465     06F6  1903               	btfsc	3,2
  1466     06F7  2EF9               	goto	u461
  1467     06F8  2EFA               	goto	u460
  1468     06F9                     u461:
  1469     06F9  2F31               	goto	l1124
  1470     06FA                     u460:
  1471     06FA                     l1106:
  1472     06FA  01F5               	clrf	___awdiv@counter
  1473     06FB  0AF5               	incf	___awdiv@counter,f
  1474     06FC  2F08               	goto	l1112
  1475     06FD                     l1108:
  1476     06FD  3001               	movlw	1
  1477     06FE                     u475:
  1478     06FE  1003               	clrc
  1479     06FF  0DF0               	rlf	___awdiv@divisor,f
  1480     0700  0DF1               	rlf	___awdiv@divisor+1,f
  1481     0701  3EFF               	addlw	-1
  1482     0702  1D03               	skipz
  1483     0703  2EFE               	goto	u475
  1484     0704                     l1110:
  1485     0704  3001               	movlw	1
  1486     0705  00F4               	movwf	??___awdiv
  1487     0706  0874               	movf	??___awdiv,w
  1488     0707  07F5               	addwf	___awdiv@counter,f
  1489     0708                     l1112:
  1490     0708  1FF1               	btfss	___awdiv@divisor+1,7
  1491     0709  2F0B               	goto	u481
  1492     070A  2F0C               	goto	u480
  1493     070B                     u481:
  1494     070B  2EFD               	goto	l1108
  1495     070C                     u480:
  1496     070C                     l1114:
  1497     070C  3001               	movlw	1
  1498     070D                     u495:
  1499     070D  1003               	clrc
  1500     070E  0DF7               	rlf	___awdiv@quotient,f
  1501     070F  0DF8               	rlf	___awdiv@quotient+1,f
  1502     0710  3EFF               	addlw	-1
  1503     0711  1D03               	skipz
  1504     0712  2F0D               	goto	u495
  1505     0713  0871               	movf	___awdiv@divisor+1,w
  1506     0714  0273               	subwf	___awdiv@dividend+1,w
  1507     0715  1D03               	skipz
  1508     0716  2F19               	goto	u505
  1509     0717  0870               	movf	___awdiv@divisor,w
  1510     0718  0272               	subwf	___awdiv@dividend,w
  1511     0719                     u505:
  1512     0719  1C03               	skipc
  1513     071A  2F1C               	goto	u501
  1514     071B  2F1D               	goto	u500
  1515     071C                     u501:
  1516     071C  2F24               	goto	l1120
  1517     071D                     u500:
  1518     071D                     l1116:
  1519     071D  0870               	movf	___awdiv@divisor,w
  1520     071E  02F2               	subwf	___awdiv@dividend,f
  1521     071F  0871               	movf	___awdiv@divisor+1,w
  1522     0720  1C03               	skipc
  1523     0721  03F3               	decf	___awdiv@dividend+1,f
  1524     0722  02F3               	subwf	___awdiv@dividend+1,f
  1525     0723                     l1118:
  1526     0723  1477               	bsf	___awdiv@quotient,0
  1527     0724                     l1120:
  1528     0724  3001               	movlw	1
  1529     0725                     u515:
  1530     0725  1003               	clrc
  1531     0726  0CF1               	rrf	___awdiv@divisor+1,f
  1532     0727  0CF0               	rrf	___awdiv@divisor,f
  1533     0728  3EFF               	addlw	-1
  1534     0729  1D03               	skipz
  1535     072A  2F25               	goto	u515
  1536     072B                     l1122:
  1537     072B  3001               	movlw	1
  1538     072C  02F5               	subwf	___awdiv@counter,f
  1539     072D  1D03               	btfss	3,2
  1540     072E  2F30               	goto	u521
  1541     072F  2F31               	goto	u520
  1542     0730                     u521:
  1543     0730  2F0C               	goto	l1114
  1544     0731                     u520:
  1545     0731                     l1124:
  1546     0731  0876               	movf	___awdiv@sign,w
  1547     0732  1903               	btfsc	3,2
  1548     0733  2F35               	goto	u531
  1549     0734  2F36               	goto	u530
  1550     0735                     u531:
  1551     0735  2F3B               	goto	l1128
  1552     0736                     u530:
  1553     0736                     l1126:
  1554     0736  09F7               	comf	___awdiv@quotient,f
  1555     0737  09F8               	comf	___awdiv@quotient+1,f
  1556     0738  0AF7               	incf	___awdiv@quotient,f
  1557     0739  1903               	skipnz
  1558     073A  0AF8               	incf	___awdiv@quotient+1,f
  1559     073B                     l1128:
  1560     073B  0878               	movf	___awdiv@quotient+1,w
  1561     073C  00F1               	movwf	?___awdiv+1
  1562     073D  0877               	movf	___awdiv@quotient,w
  1563     073E  00F0               	movwf	?___awdiv
  1564     073F                     l387:
  1565     073F  0008               	return
  1566     0740                     __end_of___awdiv:
  1567                           
  1568                           	psect	text8
  1569     0583                     __ptext8:	
  1570 ;; *************** function _Lcd_Write_String *****************
  1571 ;; Defined at:
  1572 ;;		line 88 in file "LCD.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  a               1    wreg     PTR unsigned char 
  1575 ;;		 -> STR_1(4), 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  a               1    7[COMMON] PTR unsigned char 
  1578 ;;		 -> STR_1(4), 
  1579 ;;  i               2    5[COMMON] int 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         3       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         3       0       0       0       0
  1593 ;;Total ram usage:        3 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 2
  1596 ;; This function calls:
  1597 ;;		_Lcd_Write_Char
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603     0583                     _Lcd_Write_String:	
  1604                           ;psect for function _Lcd_Write_String
  1605                           
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1609                           ;Lcd_Write_String@a stored from wreg
  1610     0583  00F7               	movwf	Lcd_Write_String@a
  1611     0584                     l1072:
  1612                           
  1613                           ;LCD.c: 89:     int i;;LCD.c: 90:     for (i = 0; a[i] != '\0'; i++)
  1614     0584  01F5               	clrf	Lcd_Write_String@i
  1615     0585  01F6               	clrf	Lcd_Write_String@i+1
  1616     0586  2D9A               	goto	l1078
  1617     0587                     l1074:
  1618                           
  1619                           ;LCD.c: 91:         Lcd_Write_Char(a[i]);
  1620     0587  0875               	movf	Lcd_Write_String@i,w
  1621     0588  0777               	addwf	Lcd_Write_String@a,w
  1622     0589  0084               	movwf	4
  1623     058A  120A  118A  2003  120A  118A  	fcall	stringdir
  1624     058F  120A  118A  25A8  120A  118A  	fcall	_Lcd_Write_Char
  1625     0594                     l1076:
  1626     0594  3001               	movlw	1
  1627     0595  07F5               	addwf	Lcd_Write_String@i,f
  1628     0596  1803               	skipnc
  1629     0597  0AF6               	incf	Lcd_Write_String@i+1,f
  1630     0598  3000               	movlw	0
  1631     0599  07F6               	addwf	Lcd_Write_String@i+1,f
  1632     059A                     l1078:
  1633     059A  0875               	movf	Lcd_Write_String@i,w
  1634     059B  0777               	addwf	Lcd_Write_String@a,w
  1635     059C  0084               	movwf	4
  1636     059D  120A  118A  2003  120A  118A  	fcall	stringdir
  1637     05A2  3A00               	xorlw	0
  1638     05A3  1D03               	skipz
  1639     05A4  2DA6               	goto	u431
  1640     05A5  2DA7               	goto	u430
  1641     05A6                     u431:
  1642     05A6  2D87               	goto	l1074
  1643     05A7                     u430:
  1644     05A7                     l108:
  1645     05A7  0008               	return
  1646     05A8                     __end_of_Lcd_Write_String:
  1647                           
  1648                           	psect	text9
  1649     05A8                     __ptext9:	
  1650 ;; *************** function _Lcd_Write_Char *****************
  1651 ;; Defined at:
  1652 ;;		line 73 in file "LCD.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  a               1    wreg     unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  a               1    4[COMMON] unsigned char 
  1657 ;;  y               1    3[COMMON] unsigned char 
  1658 ;;  temp            1    2[COMMON] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         3       0       0       0       0
  1670 ;;      Temps:          1       0       0       0       0
  1671 ;;      Totals:         4       0       0       0       0
  1672 ;;Total ram usage:        4 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 1
  1675 ;; This function calls:
  1676 ;;		_Lcd_Port
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;;		_Lcd_Write_String
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683     05A8                     _Lcd_Write_Char:	
  1684                           ;psect for function _Lcd_Write_Char
  1685                           
  1686                           
  1687                           ;incstack = 0
  1688                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1689                           ;Lcd_Write_Char@a stored from wreg
  1690     05A8  00F4               	movwf	Lcd_Write_Char@a
  1691     05A9                     l986:
  1692                           
  1693                           ;LCD.c: 74:     char temp, y;;LCD.c: 75:     temp = a & 0x0F;
  1694     05A9  0874               	movf	Lcd_Write_Char@a,w
  1695     05AA  390F               	andlw	15
  1696     05AB  00F2               	movwf	Lcd_Write_Char@temp
  1697                           
  1698                           ;LCD.c: 76:     y = a & 0xF0;
  1699     05AC  0874               	movf	Lcd_Write_Char@a,w
  1700     05AD  39F0               	andlw	240
  1701     05AE  00F3               	movwf	Lcd_Write_Char@y
  1702     05AF                     l988:
  1703                           
  1704                           ;LCD.c: 77:     PORTDbits.RD2 = 1;
  1705     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1706     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1707     05B1  1508               	bsf	8,2	;volatile
  1708     05B2                     l990:
  1709                           
  1710                           ;LCD.c: 78:     Lcd_Port(y >> 4);
  1711     05B2  0873               	movf	Lcd_Write_Char@y,w
  1712     05B3  00F1               	movwf	??_Lcd_Write_Char
  1713     05B4  3004               	movlw	4
  1714     05B5                     u365:
  1715     05B5  1003               	clrc
  1716     05B6  0CF1               	rrf	??_Lcd_Write_Char,f
  1717     05B7  3EFF               	addlw	-1
  1718     05B8  1D03               	skipz
  1719     05B9  2DB5               	goto	u365
  1720     05BA  0871               	movf	??_Lcd_Write_Char,w
  1721     05BB  120A  118A  253E  120A  118A  	fcall	_Lcd_Port
  1722     05C0                     l992:
  1723                           
  1724                           ;LCD.c: 79:     RD3 = 1;
  1725     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1726     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1727     05C2  1588               	bsf	8,3	;volatile
  1728     05C3                     l994:
  1729                           
  1730                           ;LCD.c: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1731     05C3  300D               	movlw	13
  1732     05C4  00F1               	movwf	??_Lcd_Write_Char
  1733     05C5                     u657:
  1734     05C5  0BF1               	decfsz	??_Lcd_Write_Char,f
  1735     05C6  2DC5               	goto	u657
  1736     05C7                     l996:
  1737                           
  1738                           ;LCD.c: 81:     RD3 = 0;
  1739     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1740     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1741     05C9  1188               	bcf	8,3	;volatile
  1742     05CA                     l998:
  1743                           
  1744                           ;LCD.c: 82:     Lcd_Port(temp);
  1745     05CA  0872               	movf	Lcd_Write_Char@temp,w
  1746     05CB  120A  118A  253E  120A  118A  	fcall	_Lcd_Port
  1747     05D0                     l1000:
  1748                           
  1749                           ;LCD.c: 83:     RD3 = 1;
  1750     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1751     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1752     05D2  1588               	bsf	8,3	;volatile
  1753     05D3                     l1002:
  1754                           
  1755                           ;LCD.c: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1756     05D3  300D               	movlw	13
  1757     05D4  00F1               	movwf	??_Lcd_Write_Char
  1758     05D5                     u667:
  1759     05D5  0BF1               	decfsz	??_Lcd_Write_Char,f
  1760     05D6  2DD5               	goto	u667
  1761     05D7                     l1004:
  1762                           
  1763                           ;LCD.c: 85:     RD3 = 0;
  1764     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1765     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1766     05D9  1188               	bcf	8,3	;volatile
  1767     05DA                     l102:
  1768     05DA  0008               	return
  1769     05DB                     __end_of_Lcd_Write_Char:
  1770                           
  1771                           	psect	text10
  1772     05DB                     __ptext10:	
  1773 ;; *************** function _Lcd_Set_Cursor *****************
  1774 ;; Defined at:
  1775 ;;		line 38 in file "LCD.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  a               1    wreg     unsigned char 
  1778 ;;  b               1    4[COMMON] unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  a               1    6[COMMON] unsigned char 
  1781 ;;  temp            1    9[COMMON] unsigned char 
  1782 ;;  y               1    8[COMMON] unsigned char 
  1783 ;;  z               1    7[COMMON] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         1       0       0       0       0
  1794 ;;      Locals:         4       0       0       0       0
  1795 ;;      Temps:          1       0       0       0       0
  1796 ;;      Totals:         6       0       0       0       0
  1797 ;;Total ram usage:        6 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 2
  1800 ;; This function calls:
  1801 ;;		_Lcd_Cmd
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807     05DB                     _Lcd_Set_Cursor:	
  1808                           ;psect for function _Lcd_Set_Cursor
  1809                           
  1810                           
  1811                           ;incstack = 0
  1812                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1813                           ;Lcd_Set_Cursor@a stored from wreg
  1814     05DB  00F6               	movwf	Lcd_Set_Cursor@a
  1815     05DC                     l1052:
  1816                           
  1817                           ;LCD.c: 39:     char temp, z, y;;LCD.c: 40:     if (a == 1) {
  1818     05DC  0376               	decf	Lcd_Set_Cursor@a,w
  1819     05DD  1D03               	btfss	3,2
  1820     05DE  2DE0               	goto	u391
  1821     05DF  2DE1               	goto	u390
  1822     05E0                     u391:
  1823     05E0  2DFE               	goto	l1062
  1824     05E1                     u390:
  1825     05E1                     l1054:
  1826                           
  1827                           ;LCD.c: 41:         temp = 0x80 + b - 1;
  1828     05E1  0874               	movf	Lcd_Set_Cursor@b,w
  1829     05E2  3E7F               	addlw	127
  1830     05E3  00F9               	movwf	Lcd_Set_Cursor@temp
  1831                           
  1832                           ;LCD.c: 42:         z = temp >> 4;
  1833     05E4  0879               	movf	Lcd_Set_Cursor@temp,w
  1834     05E5  00F5               	movwf	??_Lcd_Set_Cursor
  1835     05E6  3004               	movlw	4
  1836     05E7                     u405:
  1837     05E7  1003               	clrc
  1838     05E8  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1839     05E9  3EFF               	addlw	-1
  1840     05EA  1D03               	skipz
  1841     05EB  2DE7               	goto	u405
  1842     05EC  0875               	movf	??_Lcd_Set_Cursor,w
  1843     05ED  00F7               	movwf	Lcd_Set_Cursor@z
  1844     05EE                     l1056:
  1845                           
  1846                           ;LCD.c: 43:         y = temp & 0x0F;
  1847     05EE  0879               	movf	Lcd_Set_Cursor@temp,w
  1848     05EF  390F               	andlw	15
  1849     05F0  00F8               	movwf	Lcd_Set_Cursor@y
  1850     05F1                     l1058:
  1851                           
  1852                           ;LCD.c: 44:         Lcd_Cmd(z);
  1853     05F1  0877               	movf	Lcd_Set_Cursor@z,w
  1854     05F2  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  1855     05F7                     l1060:
  1856                           
  1857                           ;LCD.c: 45:         Lcd_Cmd(y);
  1858     05F7  0878               	movf	Lcd_Set_Cursor@y,w
  1859     05F8  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  1860                           
  1861                           ;LCD.c: 46:     } else if (a == 2) {
  1862     05FD  2E20               	goto	l96
  1863     05FE                     l1062:
  1864     05FE  3002               	movlw	2
  1865     05FF  0676               	xorwf	Lcd_Set_Cursor@a,w
  1866     0600  1D03               	btfss	3,2
  1867     0601  2E03               	goto	u411
  1868     0602  2E04               	goto	u410
  1869     0603                     u411:
  1870     0603  2E20               	goto	l96
  1871     0604                     u410:
  1872     0604                     l1064:
  1873                           
  1874                           ;LCD.c: 47:         temp = 0xC0 + b - 1;
  1875     0604  0874               	movf	Lcd_Set_Cursor@b,w
  1876     0605  3EBF               	addlw	191
  1877     0606  00F9               	movwf	Lcd_Set_Cursor@temp
  1878                           
  1879                           ;LCD.c: 48:         z = temp >> 4;
  1880     0607  0879               	movf	Lcd_Set_Cursor@temp,w
  1881     0608  00F5               	movwf	??_Lcd_Set_Cursor
  1882     0609  3004               	movlw	4
  1883     060A                     u425:
  1884     060A  1003               	clrc
  1885     060B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1886     060C  3EFF               	addlw	-1
  1887     060D  1D03               	skipz
  1888     060E  2E0A               	goto	u425
  1889     060F  0875               	movf	??_Lcd_Set_Cursor,w
  1890     0610  00F7               	movwf	Lcd_Set_Cursor@z
  1891     0611                     l1066:
  1892                           
  1893                           ;LCD.c: 49:         y = temp & 0x0F;
  1894     0611  0879               	movf	Lcd_Set_Cursor@temp,w
  1895     0612  390F               	andlw	15
  1896     0613  00F8               	movwf	Lcd_Set_Cursor@y
  1897     0614                     l1068:
  1898                           
  1899                           ;LCD.c: 50:         Lcd_Cmd(z);
  1900     0614  0877               	movf	Lcd_Set_Cursor@z,w
  1901     0615  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  1902     061A                     l1070:
  1903                           
  1904                           ;LCD.c: 51:         Lcd_Cmd(y);
  1905     061A  0878               	movf	Lcd_Set_Cursor@y,w
  1906     061B  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  1907     0620                     l96:
  1908     0620  0008               	return
  1909     0621                     __end_of_Lcd_Set_Cursor:
  1910                           
  1911                           	psect	text11
  1912     067C                     __ptext11:	
  1913 ;; *************** function _Lcd_Init *****************
  1914 ;; Defined at:
  1915 ;;		line 55 in file "LCD.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1929 ;;      Params:         0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0
  1931 ;;      Temps:          2       0       0       0       0
  1932 ;;      Totals:         2       0       0       0       0
  1933 ;;Total ram usage:        2 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 2
  1936 ;; This function calls:
  1937 ;;		_Lcd_Cmd
  1938 ;;		_Lcd_Port
  1939 ;; This function is called by:
  1940 ;;		_main
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944     067C                     _Lcd_Init:	
  1945                           ;psect for function _Lcd_Init
  1946                           
  1947     067C                     l1040:	
  1948                           ;incstack = 0
  1949                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1950                           
  1951                           
  1952                           ;LCD.c: 56:     Lcd_Port(0x00);
  1953     067C  3000               	movlw	0
  1954     067D  120A  118A  253E  120A  118A  	fcall	_Lcd_Port
  1955     0682                     l1042:
  1956                           
  1957                           ;LCD.c: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1958     0682  301A               	movlw	26
  1959     0683  00F5               	movwf	??_Lcd_Init+1
  1960     0684  30F8               	movlw	248
  1961     0685  00F4               	movwf	??_Lcd_Init
  1962     0686                     u677:
  1963     0686  0BF4               	decfsz	??_Lcd_Init,f
  1964     0687  2E86               	goto	u677
  1965     0688  0BF5               	decfsz	??_Lcd_Init+1,f
  1966     0689  2E86               	goto	u677
  1967     068A  0000               	nop
  1968     068B                     l1044:
  1969                           
  1970                           ;LCD.c: 58:     Lcd_Cmd(0x03);
  1971     068B  3003               	movlw	3
  1972     068C  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  1973                           
  1974                           ;LCD.c: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1975     0691  3007               	movlw	7
  1976     0692  00F5               	movwf	??_Lcd_Init+1
  1977     0693  307D               	movlw	125
  1978     0694  00F4               	movwf	??_Lcd_Init
  1979     0695                     u687:
  1980     0695  0BF4               	decfsz	??_Lcd_Init,f
  1981     0696  2E95               	goto	u687
  1982     0697  0BF5               	decfsz	??_Lcd_Init+1,f
  1983     0698  2E95               	goto	u687
  1984     0699                     l1046:
  1985                           
  1986                           ;LCD.c: 60:     Lcd_Cmd(0x03);
  1987     0699  3003               	movlw	3
  1988     069A  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  1989     069F                     l1048:
  1990                           
  1991                           ;LCD.c: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1992     069F  300F               	movlw	15
  1993     06A0  00F5               	movwf	??_Lcd_Init+1
  1994     06A1  3047               	movlw	71
  1995     06A2  00F4               	movwf	??_Lcd_Init
  1996     06A3                     u697:
  1997     06A3  0BF4               	decfsz	??_Lcd_Init,f
  1998     06A4  2EA3               	goto	u697
  1999     06A5  0BF5               	decfsz	??_Lcd_Init+1,f
  2000     06A6  2EA3               	goto	u697
  2001     06A7  2EA8               	nop2
  2002                           
  2003                           ;LCD.c: 62:     Lcd_Cmd(0x03);
  2004     06A8  3003               	movlw	3
  2005     06A9  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2006                           
  2007                           ;LCD.c: 64:     Lcd_Cmd(0x02);
  2008     06AE  3002               	movlw	2
  2009     06AF  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2010                           
  2011                           ;LCD.c: 65:     Lcd_Cmd(0x02);
  2012     06B4  3002               	movlw	2
  2013     06B5  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2014                           
  2015                           ;LCD.c: 66:     Lcd_Cmd(0x08);
  2016     06BA  3008               	movlw	8
  2017     06BB  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2018                           
  2019                           ;LCD.c: 67:     Lcd_Cmd(0x00);
  2020     06C0  3000               	movlw	0
  2021     06C1  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2022                           
  2023                           ;LCD.c: 68:     Lcd_Cmd(0x0C);
  2024     06C6  300C               	movlw	12
  2025     06C7  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2026                           
  2027                           ;LCD.c: 69:     Lcd_Cmd(0x00);
  2028     06CC  3000               	movlw	0
  2029     06CD  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2030                           
  2031                           ;LCD.c: 70:     Lcd_Cmd(0x06);
  2032     06D2  3006               	movlw	6
  2033     06D3  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2034     06D8                     l99:
  2035     06D8  0008               	return
  2036     06D9                     __end_of_Lcd_Init:
  2037                           
  2038                           	psect	text12
  2039     0501                     __ptext12:	
  2040 ;; *************** function _Lcd_Clear *****************
  2041 ;; Defined at:
  2042 ;;		line 33 in file "LCD.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 2
  2063 ;; This function calls:
  2064 ;;		_Lcd_Cmd
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070     0501                     _Lcd_Clear:	
  2071                           ;psect for function _Lcd_Clear
  2072                           
  2073     0501                     l1050:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2076                           
  2077                           
  2078                           ;LCD.c: 34:     Lcd_Cmd(0);
  2079     0501  3000               	movlw	0
  2080     0502  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2081                           
  2082                           ;LCD.c: 35:     Lcd_Cmd(1);
  2083     0507  3001               	movlw	1
  2084     0508  120A  118A  2524  120A  118A  	fcall	_Lcd_Cmd
  2085     050D                     l90:
  2086     050D  0008               	return
  2087     050E                     __end_of_Lcd_Clear:
  2088                           
  2089                           	psect	text13
  2090     0524                     __ptext13:	
  2091 ;; *************** function _Lcd_Cmd *****************
  2092 ;; Defined at:
  2093 ;;		line 25 in file "LCD.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  a               1    wreg     unsigned char 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  a               1    3[COMMON] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       0       0       0       0
  2108 ;;      Locals:         1       0       0       0       0
  2109 ;;      Temps:          2       0       0       0       0
  2110 ;;      Totals:         3       0       0       0       0
  2111 ;;Total ram usage:        3 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 1
  2114 ;; This function calls:
  2115 ;;		_Lcd_Port
  2116 ;; This function is called by:
  2117 ;;		_Lcd_Clear
  2118 ;;		_Lcd_Set_Cursor
  2119 ;;		_Lcd_Init
  2120 ;;		_Lcd_Shift_Right
  2121 ;;		_Lcd_Shift_Left
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125     0524                     _Lcd_Cmd:	
  2126                           ;psect for function _Lcd_Cmd
  2127                           
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2131                           ;Lcd_Cmd@a stored from wreg
  2132     0524  00F3               	movwf	Lcd_Cmd@a
  2133     0525                     l1016:
  2134                           
  2135                           ;LCD.c: 26:     PORTDbits.RD2 = 0;
  2136     0525  1283               	bcf	3,5	;RP0=0, select bank0
  2137     0526  1303               	bcf	3,6	;RP1=0, select bank0
  2138     0527  1108               	bcf	8,2	;volatile
  2139     0528                     l1018:
  2140                           
  2141                           ;LCD.c: 27:     Lcd_Port(a);
  2142     0528  0873               	movf	Lcd_Cmd@a,w
  2143     0529  120A  118A  253E  120A  118A  	fcall	_Lcd_Port
  2144     052E                     l1020:
  2145                           
  2146                           ;LCD.c: 28:     RD3 = 1;
  2147     052E  1283               	bcf	3,5	;RP0=0, select bank0
  2148     052F  1303               	bcf	3,6	;RP1=0, select bank0
  2149     0530  1588               	bsf	8,3	;volatile
  2150     0531                     l1022:
  2151                           
  2152                           ;LCD.c: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2153     0531  3006               	movlw	6
  2154     0532  00F2               	movwf	??_Lcd_Cmd+1
  2155     0533  3030               	movlw	48
  2156     0534  00F1               	movwf	??_Lcd_Cmd
  2157     0535                     u707:
  2158     0535  0BF1               	decfsz	??_Lcd_Cmd,f
  2159     0536  2D35               	goto	u707
  2160     0537  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2161     0538  2D35               	goto	u707
  2162     0539  0000               	nop
  2163     053A                     l1024:
  2164                           
  2165                           ;LCD.c: 30:     RD3 = 0;
  2166     053A  1283               	bcf	3,5	;RP0=0, select bank0
  2167     053B  1303               	bcf	3,6	;RP1=0, select bank0
  2168     053C  1188               	bcf	8,3	;volatile
  2169     053D                     l87:
  2170     053D  0008               	return
  2171     053E                     __end_of_Lcd_Cmd:
  2172                           
  2173                           	psect	text14
  2174     053E                     __ptext14:	
  2175 ;; *************** function _Lcd_Port *****************
  2176 ;; Defined at:
  2177 ;;		line 3 in file "LCD.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  a               1    wreg     unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  a               1    0[COMMON] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2191 ;;      Params:         0       0       0       0       0
  2192 ;;      Locals:         1       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0
  2194 ;;      Totals:         1       0       0       0       0
  2195 ;;Total ram usage:        1 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_Lcd_Cmd
  2201 ;;		_Lcd_Init
  2202 ;;		_Lcd_Write_Char
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206     053E                     _Lcd_Port:	
  2207                           ;psect for function _Lcd_Port
  2208                           
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _Lcd_Port: [wreg]
  2212                           ;Lcd_Port@a stored from wreg
  2213     053E  00F0               	movwf	Lcd_Port@a
  2214     053F                     l976:
  2215                           
  2216                           ;LCD.c: 4:     if (a & 1)
  2217     053F  1C70               	btfss	Lcd_Port@a,0
  2218     0540  2D42               	goto	u321
  2219     0541  2D43               	goto	u320
  2220     0542                     u321:
  2221     0542  2D47               	goto	l76
  2222     0543                     u320:
  2223     0543                     l978:
  2224                           
  2225                           ;LCD.c: 5:         RD4 = 1;
  2226     0543  1283               	bcf	3,5	;RP0=0, select bank0
  2227     0544  1303               	bcf	3,6	;RP1=0, select bank0
  2228     0545  1608               	bsf	8,4	;volatile
  2229     0546  2D4A               	goto	l77
  2230     0547                     l76:	
  2231                           ;LCD.c: 6:     else
  2232                           
  2233                           
  2234                           ;LCD.c: 7:         RD4 = 0;
  2235     0547  1283               	bcf	3,5	;RP0=0, select bank0
  2236     0548  1303               	bcf	3,6	;RP1=0, select bank0
  2237     0549  1208               	bcf	8,4	;volatile
  2238     054A                     l77:
  2239                           
  2240                           ;LCD.c: 9:     if (a & 2)
  2241     054A  1CF0               	btfss	Lcd_Port@a,1
  2242     054B  2D4D               	goto	u331
  2243     054C  2D4E               	goto	u330
  2244     054D                     u331:
  2245     054D  2D50               	goto	l78
  2246     054E                     u330:
  2247     054E                     l980:
  2248                           
  2249                           ;LCD.c: 10:         RD5 = 1;
  2250     054E  1688               	bsf	8,5	;volatile
  2251     054F  2D51               	goto	l79
  2252     0550                     l78:	
  2253                           ;LCD.c: 11:     else
  2254                           
  2255                           
  2256                           ;LCD.c: 12:         RD5 = 0;
  2257     0550  1288               	bcf	8,5	;volatile
  2258     0551                     l79:
  2259                           
  2260                           ;LCD.c: 14:     if (a & 4)
  2261     0551  1D70               	btfss	Lcd_Port@a,2
  2262     0552  2D54               	goto	u341
  2263     0553  2D55               	goto	u340
  2264     0554                     u341:
  2265     0554  2D57               	goto	l80
  2266     0555                     u340:
  2267     0555                     l982:
  2268                           
  2269                           ;LCD.c: 15:         RD6 = 1;
  2270     0555  1708               	bsf	8,6	;volatile
  2271     0556  2D58               	goto	l81
  2272     0557                     l80:	
  2273                           ;LCD.c: 16:     else
  2274                           
  2275                           
  2276                           ;LCD.c: 17:         RD6 = 0;
  2277     0557  1308               	bcf	8,6	;volatile
  2278     0558                     l81:
  2279                           
  2280                           ;LCD.c: 19:     if (a & 8)
  2281     0558  1DF0               	btfss	Lcd_Port@a,3
  2282     0559  2D5B               	goto	u351
  2283     055A  2D5C               	goto	u350
  2284     055B                     u351:
  2285     055B  2D5E               	goto	l82
  2286     055C                     u350:
  2287     055C                     l984:
  2288                           
  2289                           ;LCD.c: 20:         RD7 = 1;
  2290     055C  1788               	bsf	8,7	;volatile
  2291     055D  2D5F               	goto	l84
  2292     055E                     l82:	
  2293                           ;LCD.c: 21:     else
  2294                           
  2295                           
  2296                           ;LCD.c: 22:         RD7 = 0;
  2297     055E  1388               	bcf	8,7	;volatile
  2298     055F                     l84:
  2299     055F  0008               	return
  2300     0560                     __end_of_Lcd_Port:
  2301     007E                     btemp	set	126	;btemp
  2302     007E                     wtemp0	set	126
  2303                           
  2304                           	psect	idloc
  2305                           
  2306                           ;Config register IDLOC0 @ 0x2000
  2307                           ;	unspecified, using default values
  2308     2000                     	org	8192
  2309     2000  3FFF               	dw	16383
  2310                           
  2311                           ;Config register IDLOC1 @ 0x2001
  2312                           ;	unspecified, using default values
  2313     2001                     	org	8193
  2314     2001  3FFF               	dw	16383
  2315                           
  2316                           ;Config register IDLOC2 @ 0x2002
  2317                           ;	unspecified, using default values
  2318     2002                     	org	8194
  2319     2002  3FFF               	dw	16383
  2320                           
  2321                           ;Config register IDLOC3 @ 0x2003
  2322                           ;	unspecified, using default values
  2323     2003                     	org	8195
  2324     2003  3FFF               	dw	16383
  2325                           
  2326                           	psect	config
  2327                           
  2328                           ;Config register CONFIG1 @ 0x2007
  2329                           ;	Oscillator Selection bits
  2330                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2331                           ;	Watchdog Timer Enable bit
  2332                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2333                           ;	Power-up Timer Enable bit
  2334                           ;	PWRTE = OFF, PWRT disabled
  2335                           ;	RE3/MCLR pin function select bit
  2336                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2337                           ;	Code Protection bit
  2338                           ;	CP = OFF, Program memory code protection is disabled
  2339                           ;	Data Code Protection bit
  2340                           ;	CPD = OFF, Data memory code protection is disabled
  2341                           ;	Brown Out Reset Selection bits
  2342                           ;	BOREN = OFF, BOR disabled
  2343                           ;	Internal External Switchover bit
  2344                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2345                           ;	Fail-Safe Clock Monitor Enabled bit
  2346                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2347                           ;	Low Voltage Programming Enable bit
  2348                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2349                           ;	In-Circuit Debugger Mode bit
  2350                           ;	DEBUG = 0x1, unprogrammed default
  2351     2007                     	org	8199
  2352     2007  20D6               	dw	8406
  2353                           
  2354                           ;Config register CONFIG2 @ 0x2008
  2355                           ;	Brown-out Reset Selection bit
  2356                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2357                           ;	Flash Program Memory Self Write Enable bits
  2358                           ;	WRT = OFF, Write protection off
  2359     2008                     	org	8200
  2360     2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _setup->_spiInit
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2905
                                              2 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 00:18:23 2023

                       pc 0002               _SSPSTATbits 0094                        l80 0557  
                      l81 0558                        l82 055E                        l90 050D  
                      l59 0582                        l84 055F                        l76 0547  
                      l77 054A                        l78 0550                        l79 0551  
                      l87 053D                        l96 0620                        l99 06D8  
            ___awdiv@sign 0076                        fsr 0004                       l102 05DA  
                     l130 051E                       l131 0523                       l108 05A7  
                     l140 04F0                       l134 04F1                       l400 067B  
                     l137 04F7                       l148 0500                       _ADC 0024  
                     l387 073F                       l980 054E                       l982 0555  
                     l990 05B2                       l984 055C                       l976 053F  
                     l992 05C0                       l978 0543                       l994 05C3  
                     l986 05A9                       l996 05C7                       l988 05AF  
                     l998 05CA                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u320 0543                       u321 0542                       u330 054E  
                     u410 0604                       u331 054D                       u411 0603  
                     u340 0555                       u500 071D                       u341 0554  
                     u405 05E7                       u501 071C                       u350 055C  
                     u430 05A7                       u351 055B                       u431 05A6  
                     u520 0731                       u440 06DE                       u425 060A  
                     u521 0730                       u505 0719                       u441 06DD  
                     u530 0736                       u450 06E9                       u610 066D  
                     u370 0516                       u531 0735                       u515 0725  
                     u451 06E8                       u611 066C                       u371 0515  
                     u460 06FA                       u620 0672                       u540 0628  
                     u380 04F7                       u365 05B5                       u461 06F9  
                     u621 0671                       u605 0661                       u541 0627  
                     u381 04F6                       u390 05E1                       u550 0633  
                     u391 05E0                       u551 0632                       u480 070C  
                     u560 063E                       u481 070B                       u561 063D  
                     u707 0535                       u475 06FE                       u580 0650  
                     u581 064F                       u637 0764                       u590 065A  
                     u495 070D                       u591 0659                       u575 0642  
                     u647 077C                       u657 05C5                       u667 05D5  
                     u595 0656                       u677 0686                       u687 0695  
                     u697 06A3                       fsr0 0004              ___awmod@sign 0026  
                    l1000 05D0                      l1002 05D3                      l1010 0518  
                    l1020 052E                      l1004 05D7                      l1100 06EE  
                    l1012 051A                      l1022 0531                      l1110 0704  
                    l1102 06F2                      l1014 051D                      l1006 050F  
                    l1030 056C                      l1024 053A                      l1016 0525  
                    l1040 067C                      l1120 0724                      l1112 0708  
                    l1104 06F4                      l1008 0516                      l1032 056F  
                    l1200 07E8                      l1018 0528                      l1050 0501  
                    l1042 0682                      l1122 072B                      l1114 070C  
                    l1106 06FA                      l1034 0572                      l1026 04F1  
                    l1044 068B                      l1060 05F7                      l1052 05DC  
                    l1116 071D                      l1108 06FD                      l1124 0731  
                    l1140 062F                      l1132 0621                      l1036 0578  
                    l1028 0560                      l1046 0699                      l1070 061A  
                    l1054 05E1                      l1062 05FE                      l1126 0736  
                    l1118 0723                      l1150 0648                      l1142 0633  
                    l1134 0624                      l1038 0579                      l1048 069F  
                    l1064 0604                      l1056 05EE                      l1072 0584  
                    l1128 073B                      l1160 0667                      l1152 064C  
                    l1144 0638                      l1136 0628                      l1080 04EC  
                    l1066 0611                      l1058 05F1                      l1074 0587  
                    l1090 06DA                      l1154 0650                      l1146 063E  
                    l1162 066D                      l1138 062D                      l1082 04F8  
                    l1170 0740                      l1068 0614                      l1076 0594  
                    l1092 06DE                      l1164 0672                      l1156 065A  
                    l1148 0641                      l1084 04FD                      l1180 0770  
                    l1172 0757                      l1078 059A                      l1094 06E3  
                    l1166 0677                      l1158 0660                      l1190 0799  
                    l1182 0778                      l1174 075D                      l1096 06E5  
                    l1088 06D9                      l1192 07BA                      l1184 0780  
                    l1176 0760                      l1098 06E9                      l1194 07CE  
                    l1186 0783                      l1178 0768                      l1196 07D6  
                    l1188 0785                      l1198 07DF                      STR_1 0009  
       ?_Lcd_Write_String 0070                      _main 0740                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 053E  
                   ?_main 0070           __end_of___awdiv 0740           __end_of___awmod 067C  
                   _ANSEL 0188           ___awdiv@divisor 0070           ___awdiv@counter 0075  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _valor 0023                     _setup 0560  
                   pclath 000A           __end_of_spiInit 0524           __end_of_spiRead 0501  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 06D9  
        __end_of_Lcd_Port 0560           __initialization 07F5              __end_of_main 07F5  
                  ??_main 0027          ___awdiv@dividend 0072                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
               ??___awdiv 0074                 ??___awmod 007D          ___awdiv@quotient 0077  
         ___awmod@divisor 0079           ___awmod@counter 0025                    _unidad 0020  
        __end_of_spiWrite 04F1                 ??_spiInit 0073                 ??_spiRead 0070  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 050E  
          __pcstackCOMMON 0070             __end_of_setup 0583            _Lcd_Set_Cursor 05DB  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0074  
              __pbssBANK0 0020                __pmaintext 0740    __end_of_Lcd_Set_Cursor 0621  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPSTAT 0094  
              __stringtab 0003            _Lcd_Write_Char 05A8                   _Lcd_Cmd 0524  
               ?_spiWrite 0070                   ___awdiv 06D9                   ___awmod 0621  
                 _decenas 0021           ?_Lcd_Set_Cursor 0074                   __ptext1 04EB  
                 __ptext2 04F8                   __ptext3 04F1                   __ptext4 0560  
                 __ptext5 050E                   __ptext6 0621                   __ptext7 06D9  
                 __ptext8 0583                   __ptext9 05A8          ___awmod@dividend 007B  
                 _spiInit 050E                   _spiRead 04F8    __end_of_Lcd_Write_Char 05DB  
    end_of_initialization 07FC                ??_spiWrite 0070                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _PORTDbits 0008                 _TRISCbits 0087  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077  
       Lcd_Write_String@i 0075                 _Lcd_Clear 0501            _spiReceiveWait 04F1  
        _Lcd_Write_String 0583       start_initialization 07F5    __end_of_spiReceiveWait 04F8  
              ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___latbits 0002             __pcstackBANK0 0025                  ?_Lcd_Cmd 0070  
         ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070  
                ?___awmod 0079                 __pstrings 0003                  ?_spiInit 0070  
                ?_spiRead 0070      spiInit@sTransmitEdge 0072        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074               __stringbase 0008  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 067C                  _Lcd_Port 053E  
__end_of_Lcd_Write_String 05A8        __end_of__stringtab 0009                  _centenas 0022  
                __ptext10 05DB                  __ptext11 067C                  __ptext12 0501  
                __ptext13 0524                  __ptext14 053E                  _spiWrite 04EB  
            spiInit@sType 0073         spiInit@sClockIdle 0071        Lcd_Write_Char@temp 0072  
        ??_spiReceiveWait 0070                 stringcode 0003                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079                  stringdir 0003                  stringtab 0003  
