

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 02 23:24:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0097                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     0105                     	;# 
   118     0107                     	;# 
   119     0108                     	;# 
   120     0109                     	;# 
   121     010C                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     0185                     	;# 
   127     0187                     	;# 
   128     0188                     	;# 
   129     0189                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0000                     	;# 
   211     0001                     	;# 
   212     0002                     	;# 
   213     0003                     	;# 
   214     0004                     	;# 
   215     0005                     	;# 
   216     0006                     	;# 
   217     0007                     	;# 
   218     0008                     	;# 
   219     0009                     	;# 
   220     000A                     	;# 
   221     000B                     	;# 
   222     000C                     	;# 
   223     000D                     	;# 
   224     000E                     	;# 
   225     000E                     	;# 
   226     000F                     	;# 
   227     0010                     	;# 
   228     0011                     	;# 
   229     0012                     	;# 
   230     0013                     	;# 
   231     0014                     	;# 
   232     0015                     	;# 
   233     0015                     	;# 
   234     0016                     	;# 
   235     0017                     	;# 
   236     0018                     	;# 
   237     0019                     	;# 
   238     001A                     	;# 
   239     001B                     	;# 
   240     001B                     	;# 
   241     001C                     	;# 
   242     001D                     	;# 
   243     001E                     	;# 
   244     001F                     	;# 
   245     0081                     	;# 
   246     0085                     	;# 
   247     0086                     	;# 
   248     0087                     	;# 
   249     0088                     	;# 
   250     0089                     	;# 
   251     008C                     	;# 
   252     008D                     	;# 
   253     008E                     	;# 
   254     008F                     	;# 
   255     0090                     	;# 
   256     0091                     	;# 
   257     0092                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0094                     	;# 
   262     0095                     	;# 
   263     0096                     	;# 
   264     0097                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009A                     	;# 
   268     009B                     	;# 
   269     009C                     	;# 
   270     009D                     	;# 
   271     009E                     	;# 
   272     009F                     	;# 
   273     0105                     	;# 
   274     0107                     	;# 
   275     0108                     	;# 
   276     0109                     	;# 
   277     010C                     	;# 
   278     010C                     	;# 
   279     010D                     	;# 
   280     010E                     	;# 
   281     010F                     	;# 
   282     0185                     	;# 
   283     0187                     	;# 
   284     0188                     	;# 
   285     0189                     	;# 
   286     018C                     	;# 
   287     018D                     	;# 
   288     0000                     	;# 
   289     0001                     	;# 
   290     0002                     	;# 
   291     0003                     	;# 
   292     0004                     	;# 
   293     0005                     	;# 
   294     0006                     	;# 
   295     0007                     	;# 
   296     0008                     	;# 
   297     0009                     	;# 
   298     000A                     	;# 
   299     000B                     	;# 
   300     000C                     	;# 
   301     000D                     	;# 
   302     000E                     	;# 
   303     000E                     	;# 
   304     000F                     	;# 
   305     0010                     	;# 
   306     0011                     	;# 
   307     0012                     	;# 
   308     0013                     	;# 
   309     0014                     	;# 
   310     0015                     	;# 
   311     0015                     	;# 
   312     0016                     	;# 
   313     0017                     	;# 
   314     0018                     	;# 
   315     0019                     	;# 
   316     001A                     	;# 
   317     001B                     	;# 
   318     001B                     	;# 
   319     001C                     	;# 
   320     001D                     	;# 
   321     001E                     	;# 
   322     001F                     	;# 
   323     0081                     	;# 
   324     0085                     	;# 
   325     0086                     	;# 
   326     0087                     	;# 
   327     0088                     	;# 
   328     0089                     	;# 
   329     008C                     	;# 
   330     008D                     	;# 
   331     008E                     	;# 
   332     008F                     	;# 
   333     0090                     	;# 
   334     0091                     	;# 
   335     0092                     	;# 
   336     0093                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0094                     	;# 
   340     0095                     	;# 
   341     0096                     	;# 
   342     0097                     	;# 
   343     0098                     	;# 
   344     0099                     	;# 
   345     009A                     	;# 
   346     009B                     	;# 
   347     009C                     	;# 
   348     009D                     	;# 
   349     009E                     	;# 
   350     009F                     	;# 
   351     0105                     	;# 
   352     0107                     	;# 
   353     0108                     	;# 
   354     0109                     	;# 
   355     010C                     	;# 
   356     010C                     	;# 
   357     010D                     	;# 
   358     010E                     	;# 
   359     010F                     	;# 
   360     0185                     	;# 
   361     0187                     	;# 
   362     0188                     	;# 
   363     0189                     	;# 
   364     018C                     	;# 
   365     018D                     	;# 
   366     000C                     _PIR1bits	set	12
   367     000B                     _INTCONbits	set	11
   368     0008                     _PORTD	set	8
   369     0005                     _PORTA	set	5
   370     0006                     _PORTB	set	6
   371     0013                     _SSPBUF	set	19
   372     0014                     _SSPCON	set	20
   373     001F                     _ADCON0	set	31
   374     001E                     _ADRESH	set	30
   375     001F                     _ADCON0bits	set	31
   376     0063                     _SSPIF	set	99
   377     0085                     _TRISAbits	set	133
   378     008C                     _PIE1bits	set	140
   379     008F                     _OSCCONbits	set	143
   380     0088                     _TRISD	set	136
   381     0086                     _TRISB	set	134
   382     0085                     _TRISA	set	133
   383     0094                     _SSPSTATbits	set	148
   384     0094                     _SSPSTAT	set	148
   385     009F                     _ADCON1bits	set	159
   386     009E                     _ADRESL	set	158
   387     043B                     _TRISC3	set	1083
   388     043D                     _TRISC5	set	1085
   389     0189                     _ANSELH	set	393
   390     0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393     000F                     start_initialization:	
   394                           ; #config settings
   395                           
   396     000F                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   400     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   401     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   402     0012                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405     0012                     __end_of__initialization:
   406     0012  0183               	clrf	3
   407     0013  120A  118A  283F   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410     0077                     __pbssCOMMON:
   411     0077                     _ADC:
   412     0077                     	ds	2
   413     0079                     _temporal:
   414     0079                     	ds	1
   415                           
   416                           	psect	cstackCOMMON
   417     0070                     __pcstackCOMMON:
   418     0070                     ?_setup:
   419     0070                     ?_setupADC:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0070                     ?_spiWrite:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ??_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ?_isr:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_main:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     spiWrite@dat:	
   435                           ; 1 bytes @ 0x0
   436                           
   437                           
   438                           ; 1 bytes @ 0x0
   439     0070                     	ds	1
   440     0071                     ??_isr:
   441                           
   442                           ; 1 bytes @ 0x1
   443     0071                     	ds	2
   444     0073                     ??_setupADC:
   445     0073                     ?_spiInit:	
   446                           ; 1 bytes @ 0x3
   447                           
   448     0073                     ?_ADC_Read:	
   449                           ; 1 bytes @ 0x3
   450                           
   451     0073                     spiInit@sDataSample:	
   452                           ; 2 bytes @ 0x3
   453                           
   454     0073                     ADC_Read@channel:	
   455                           ; 1 bytes @ 0x3
   456                           
   457                           
   458                           ; 2 bytes @ 0x3
   459     0073                     	ds	1
   460     0074                     spiInit@sClockIdle:
   461                           
   462                           ; 1 bytes @ 0x4
   463     0074                     	ds	1
   464     0075                     ??_ADC_Read:
   465     0075                     spiInit@sTransmitEdge:	
   466                           ; 1 bytes @ 0x5
   467                           
   468                           
   469                           ; 1 bytes @ 0x5
   470     0075                     	ds	1
   471     0076                     ??_spiInit:
   472     0076                     spiInit@sType:	
   473                           ; 1 bytes @ 0x6
   474                           
   475                           
   476                           ; 1 bytes @ 0x6
   477     0076                     	ds	1
   478     0077                     ??_setup:
   479     0077                     ??_main:	
   480                           ; 1 bytes @ 0x7
   481                           
   482                           
   483                           	psect	maintext
   484     003F                     __pmaintext:	
   485                           ; 1 bytes @ 0x7
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 63 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels required when called: 4
   511 ;; This function calls:
   512 ;;		_ADC_Read
   513 ;;		_setup
   514 ;;		_setupADC
   515 ;; This function is called by:
   516 ;;		Startup code after reset
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520     003F                     _main:	
   521                           ;psect for function _main
   522                           
   523     003F                     l846:	
   524                           ;incstack = 0
   525                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   526                           
   527                           
   528                           ;main.c: 64:     setup();
   529     003F  120A  118A  2016  120A  118A  	fcall	_setup
   530                           
   531                           ;main.c: 65:     setupADC();
   532     0044  120A  118A  207A  120A  118A  	fcall	_setupADC
   533     0049                     l110:	
   534                           ;main.c: 69:     while(1){
   535                           
   536                           
   537                           ;main.c: 70:        ADC = ADC_Read(0);
   538     0049  3000               	movlw	0
   539     004A  00F3               	movwf	ADC_Read@channel
   540     004B  00F4               	movwf	ADC_Read@channel+1
   541     004C  120A  118A  205D  120A  118A  	fcall	_ADC_Read
   542     0051  0874               	movf	?_ADC_Read+1,w
   543     0052  00F8               	movwf	_ADC+1
   544     0053  0873               	movf	?_ADC_Read,w
   545     0054  00F7               	movwf	_ADC
   546     0055                     l848:
   547                           
   548                           ;main.c: 71:        PORTB = ADC;
   549     0055  0877               	movf	_ADC,w
   550     0056  1283               	bcf	3,5	;RP0=0, select bank0
   551     0057  1303               	bcf	3,6	;RP1=0, select bank0
   552     0058  0086               	movwf	6	;volatile
   553     0059  2849               	goto	l110
   554     005A  120A  118A  280C   	ljmp	start
   555     005D                     __end_of_main:
   556                           
   557                           	psect	text1
   558     007A                     __ptext1:	
   559 ;; *************** function _setupADC *****************
   560 ;; Defined at:
   561 ;;		line 14 in file "ADC.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          1       0       0       0       0
   578 ;;      Totals:         1       0       0       0       0
   579 ;;Total ram usage:        1 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; Hardware stack levels required when called: 2
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589     007A                     _setupADC:	
   590                           ;psect for function _setupADC
   591                           
   592     007A                     l726:	
   593                           ;incstack = 0
   594                           ; Regs used in _setupADC: [wreg+status,2]
   595                           
   596                           
   597                           ;ADC.c: 15:     ANSEL = ANSEL | 0x01;
   598     007A  1683               	bsf	3,5	;RP0=1, select bank3
   599     007B  1703               	bsf	3,6	;RP1=1, select bank3
   600     007C  0808               	movf	8,w	;volatile
   601     007D  3801               	iorlw	1
   602     007E  0088               	movwf	8	;volatile
   603     007F                     l728:
   604                           
   605                           ;ADC.c: 16:     ADCON0 = 0x00;
   606     007F  1283               	bcf	3,5	;RP0=0, select bank0
   607     0080  1303               	bcf	3,6	;RP1=0, select bank0
   608     0081  019F               	clrf	31	;volatile
   609     0082                     l730:
   610                           
   611                           ;ADC.c: 17:     ADCON0bits.ADCS1 = 0;
   612     0082  139F               	bcf	31,7	;volatile
   613     0083                     l732:
   614                           
   615                           ;ADC.c: 18:     ADCON0bits.ADCS0 = 0;
   616     0083  131F               	bcf	31,6	;volatile
   617     0084                     l734:
   618                           
   619                           ;ADC.c: 19:     ADCON1bits.VCFG1 = 0;
   620     0084  1683               	bsf	3,5	;RP0=1, select bank1
   621     0085  1303               	bcf	3,6	;RP1=0, select bank1
   622     0086  129F               	bcf	31,5	;volatile
   623     0087                     l736:
   624                           
   625                           ;ADC.c: 20:     ADCON1bits.VCFG0 = 0;
   626     0087  121F               	bcf	31,4	;volatile
   627     0088                     l738:
   628                           
   629                           ;ADC.c: 22:     ADCON1bits.ADFM = 1;
   630     0088  179F               	bsf	31,7	;volatile
   631     0089                     l740:
   632                           
   633                           ;ADC.c: 23:     ADCON0bits.ADON = 1;
   634     0089  1283               	bcf	3,5	;RP0=0, select bank0
   635     008A  1303               	bcf	3,6	;RP1=0, select bank0
   636     008B  141F               	bsf	31,0	;volatile
   637                           
   638                           ;ADC.c: 24:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   639     008C  3021               	movlw	33
   640     008D  00F3               	movwf	??_setupADC
   641     008E                     u77:
   642     008E  0BF3               	decfsz	??_setupADC,f
   643     008F  288E               	goto	u77
   644     0090                     l23:
   645     0090  0008               	return
   646     0091                     __end_of_setupADC:
   647                           
   648                           	psect	text2
   649     0016                     __ptext2:	
   650 ;; *************** function _setup *****************
   651 ;; Defined at:
   652 ;;		line 78 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; Hardware stack levels required when called: 3
   673 ;; This function calls:
   674 ;;		_spiInit
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     0016                     _setup:	
   681                           ;psect for function _setup
   682                           
   683     0016                     l816:	
   684                           ;incstack = 0
   685                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   686                           
   687                           
   688                           ;main.c: 79:     ANSEL = 0;
   689     0016  1683               	bsf	3,5	;RP0=1, select bank3
   690     0017  1703               	bsf	3,6	;RP1=1, select bank3
   691     0018  0188               	clrf	8	;volatile
   692                           
   693                           ;main.c: 80:     ANSELH = 0;
   694     0019  0189               	clrf	9	;volatile
   695     001A                     l818:
   696                           
   697                           ;main.c: 82:     TRISA = 0b00100001;
   698     001A  3021               	movlw	33
   699     001B  1683               	bsf	3,5	;RP0=1, select bank1
   700     001C  1303               	bcf	3,6	;RP1=0, select bank1
   701     001D  0085               	movwf	5	;volatile
   702     001E                     l820:
   703                           
   704                           ;main.c: 83:     TRISB = 0;
   705     001E  0186               	clrf	6	;volatile
   706     001F                     l822:
   707                           
   708                           ;main.c: 84:     TRISD = 0;
   709     001F  0188               	clrf	8	;volatile
   710     0020                     l824:
   711                           
   712                           ;main.c: 86:     PORTA = 0;
   713     0020  1283               	bcf	3,5	;RP0=0, select bank0
   714     0021  1303               	bcf	3,6	;RP1=0, select bank0
   715     0022  0185               	clrf	5	;volatile
   716     0023                     l826:
   717                           
   718                           ;main.c: 87:     PORTB = 0;
   719     0023  0186               	clrf	6	;volatile
   720     0024                     l828:
   721                           
   722                           ;main.c: 88:     PORTD = 0;
   723     0024  0188               	clrf	8	;volatile
   724     0025                     l830:
   725                           
   726                           ;main.c: 90:     OSCCONbits.IRCF = 0b110;
   727     0025  1683               	bsf	3,5	;RP0=1, select bank1
   728     0026  1303               	bcf	3,6	;RP1=0, select bank1
   729     0027  080F               	movf	15,w	;volatile
   730     0028  398F               	andlw	-113
   731     0029  3860               	iorlw	96
   732     002A  008F               	movwf	15	;volatile
   733     002B                     l832:
   734                           
   735                           ;main.c: 91:     OSCCONbits.SCS = 1;
   736     002B  140F               	bsf	15,0	;volatile
   737     002C                     l834:
   738                           
   739                           ;main.c: 92:     INTCONbits.GIE = 1;
   740     002C  178B               	bsf	11,7	;volatile
   741     002D                     l836:
   742                           
   743                           ;main.c: 93:     INTCONbits.PEIE = 1;
   744     002D  170B               	bsf	11,6	;volatile
   745     002E                     l838:
   746                           
   747                           ;main.c: 94:     PIR1bits.SSPIF = 0;
   748     002E  1283               	bcf	3,5	;RP0=0, select bank0
   749     002F  1303               	bcf	3,6	;RP1=0, select bank0
   750     0030  118C               	bcf	12,3	;volatile
   751     0031                     l840:
   752                           
   753                           ;main.c: 95:     PIE1bits.SSPIE = 1;
   754     0031  1683               	bsf	3,5	;RP0=1, select bank1
   755     0032  1303               	bcf	3,6	;RP1=0, select bank1
   756     0033  158C               	bsf	12,3	;volatile
   757     0034                     l842:
   758                           
   759                           ;main.c: 96:     TRISAbits.TRISA5 = 1;
   760     0034  1685               	bsf	5,5	;volatile
   761     0035                     l844:
   762                           
   763                           ;main.c: 98:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   764     0035  01F3               	clrf	spiInit@sDataSample
   765     0036  01F4               	clrf	spiInit@sClockIdle
   766     0037  01F5               	clrf	spiInit@sTransmitEdge
   767     0038  3024               	movlw	36
   768     0039  120A  118A  2091  120A  118A  	fcall	_spiInit
   769     003E                     l116:
   770     003E  0008               	return
   771     003F                     __end_of_setup:
   772                           
   773                           	psect	text3
   774     0091                     __ptext3:	
   775 ;; *************** function _spiInit *****************
   776 ;; Defined at:
   777 ;;		line 12 in file "SPI.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  sType           1    wreg     enum E1292
   780 ;;  sDataSample     1    3[COMMON] enum E1300
   781 ;;  sClockIdle      1    4[COMMON] enum E1304
   782 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  sType           1    6[COMMON] enum E1292
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         3       0       0       0       0
   795 ;;      Locals:         1       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0
   797 ;;      Totals:         4       0       0       0       0
   798 ;;Total ram usage:        4 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; Hardware stack levels required when called: 2
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_setup
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808     0091                     _spiInit:	
   809                           ;psect for function _spiInit
   810                           
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   814                           ;spiInit@sType stored from wreg
   815     0091  00F6               	movwf	spiInit@sType
   816     0092                     l798:
   817                           
   818                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   819     0092  1683               	bsf	3,5	;RP0=1, select bank1
   820     0093  1303               	bcf	3,6	;RP1=0, select bank1
   821     0094  1287               	bcf	7,5	;volatile
   822                           
   823                           ;SPI.c: 15:     if(sType & 0b00000100)
   824     0095  1D76               	btfss	spiInit@sType,2
   825     0096  2898               	goto	u51
   826     0097  2899               	goto	u50
   827     0098                     u51:
   828     0098  289D               	goto	l804
   829     0099                     u50:
   830     0099                     l800:
   831                           
   832                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   833     0099  0875               	movf	spiInit@sTransmitEdge,w
   834     009A  0094               	movwf	20	;volatile
   835     009B                     l802:
   836                           
   837                           ;SPI.c: 18:         TRISC3 = 1;
   838     009B  1587               	bsf	7,3	;volatile
   839                           
   840                           ;SPI.c: 19:     }
   841     009C  28A1               	goto	l39
   842     009D                     l804:
   843                           
   844                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   845     009D  0873               	movf	spiInit@sDataSample,w
   846     009E  0475               	iorwf	spiInit@sTransmitEdge,w
   847     009F  0094               	movwf	20	;volatile
   848     00A0                     l806:
   849                           
   850                           ;SPI.c: 23:         TRISC3 = 0;
   851     00A0  1187               	bcf	7,3	;volatile
   852     00A1                     l39:	
   853                           ;SPI.c: 24:     }
   854                           
   855                           
   856                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   857     00A1  0876               	movf	spiInit@sType,w
   858     00A2  0474               	iorwf	spiInit@sClockIdle,w
   859     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   860     00A4  1303               	bcf	3,6	;RP1=0, select bank0
   861     00A5  0094               	movwf	20	;volatile
   862     00A6                     l40:
   863     00A6  0008               	return
   864     00A7                     __end_of_spiInit:
   865                           
   866                           	psect	text4
   867     005D                     __ptext4:	
   868 ;; *************** function _ADC_Read *****************
   869 ;; Defined at:
   870 ;;		line 5 in file "ADC.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  channel         2    3[COMMON] unsigned int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  2    3[COMMON] unsigned int 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         2       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          1       0       0       0       0
   887 ;;      Totals:         3       0       0       0       0
   888 ;;Total ram usage:        3 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 2
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898     005D                     _ADC_Read:	
   899                           ;psect for function _ADC_Read
   900                           
   901     005D                     l808:	
   902                           ;incstack = 0
   903                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   904                           
   905                           
   906                           ;ADC.c: 6:     ADCON0bits.CHS = channel;
   907     005D  0873               	movf	ADC_Read@channel,w
   908     005E  00F5               	movwf	??_ADC_Read
   909     005F  0DF5               	rlf	??_ADC_Read,f
   910     0060  0DF5               	rlf	??_ADC_Read,f
   911     0061  1283               	bcf	3,5	;RP0=0, select bank0
   912     0062  1303               	bcf	3,6	;RP1=0, select bank0
   913     0063  081F               	movf	31,w	;volatile
   914     0064  0675               	xorwf	??_ADC_Read,w
   915     0065  39C3               	andlw	-61
   916     0066  0675               	xorwf	??_ADC_Read,w
   917     0067  009F               	movwf	31	;volatile
   918     0068                     l810:
   919                           
   920                           ;ADC.c: 7:     ADCON0bits.GO = 1;
   921     0068  149F               	bsf	31,1	;volatile
   922     0069                     l17:	
   923                           ;ADC.c: 8:     while(ADCON0bits.GO);
   924                           
   925     0069  189F               	btfsc	31,1	;volatile
   926     006A  286C               	goto	u61
   927     006B  286D               	goto	u60
   928     006C                     u61:
   929     006C  2869               	goto	l17
   930     006D                     u60:
   931     006D                     l812:
   932                           
   933                           ;ADC.c: 9:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   934     006D  3021               	movlw	33
   935     006E  00F5               	movwf	??_ADC_Read
   936     006F                     u87:
   937     006F  0BF5               	decfsz	??_ADC_Read,f
   938     0070  286F               	goto	u87
   939                           
   940                           ;ADC.c: 10:     return ((ADRESH << 8)+ ADRESL);
   941     0071  1283               	bcf	3,5	;RP0=0, select bank0
   942     0072  1303               	bcf	3,6	;RP1=0, select bank0
   943     0073  081E               	movf	30,w	;volatile
   944     0074  00F4               	movwf	?_ADC_Read+1
   945     0075  1683               	bsf	3,5	;RP0=1, select bank1
   946     0076  1303               	bcf	3,6	;RP1=0, select bank1
   947     0077  081E               	movf	30,w	;volatile
   948     0078  00F3               	movwf	?_ADC_Read
   949     0079                     l20:
   950     0079  0008               	return
   951     007A                     __end_of_ADC_Read:
   952                           
   953                           	psect	text5
   954     00A7                     __ptext5:	
   955 ;; *************** function _isr *****************
   956 ;; Defined at:
   957 ;;		line 54 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0
   973 ;;      Temps:          2       0       0       0       0
   974 ;;      Totals:         2       0       0       0       0
   975 ;;Total ram usage:        2 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 1
   978 ;; This function calls:
   979 ;;		_spiWrite
   980 ;; This function is called by:
   981 ;;		Interrupt level 1
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985     00A7                     _isr:	
   986                           ;psect for function _isr
   987                           
   988     00A7                     i1l788:
   989                           
   990                           ;main.c: 55:    if(SSPIF == 1){
   991     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   992     00A8  1303               	bcf	3,6	;RP1=0, select bank0
   993     00A9  1D8C               	btfss	12,3	;volatile
   994     00AA  28AC               	goto	u4_21
   995     00AB  28AD               	goto	u4_20
   996     00AC                     u4_21:
   997     00AC  28B6               	goto	i1l105
   998     00AD                     u4_20:
   999     00AD                     i1l790:
  1000                           
  1001                           ;main.c: 56:         spiWrite(ADC);
  1002     00AD  0877               	movf	_ADC,w
  1003     00AE  120A  118A  20BD  120A  118A  	fcall	_spiWrite
  1004     00B3                     i1l792:
  1005                           
  1006                           ;main.c: 57:         SSPIF = 0;
  1007     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1008     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1009     00B5  118C               	bcf	12,3	;volatile
  1010     00B6                     i1l105:
  1011     00B6  0872               	movf	??_isr+1,w
  1012     00B7  008A               	movwf	10
  1013     00B8  0E71               	swapf	??_isr,w
  1014     00B9  0083               	movwf	3
  1015     00BA  0EFE               	swapf	btemp,f
  1016     00BB  0E7E               	swapf	btemp,w
  1017     00BC  0009               	retfie
  1018     00BD                     __end_of_isr:
  1019                           
  1020                           	psect	intentry
  1021     0004                     __pintentry:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1024                           
  1025     0004                     interrupt_function:
  1026     007E                     saved_w	set	btemp
  1027     0004  00FE               	movwf	btemp
  1028     0005  0E03               	swapf	3,w
  1029     0006  00F1               	movwf	??_isr
  1030     0007  080A               	movf	10,w
  1031     0008  00F2               	movwf	??_isr+1
  1032     0009  120A  118A  28A7   	ljmp	_isr
  1033                           
  1034                           	psect	text6
  1035     00BD                     __ptext6:	
  1036 ;; *************** function _spiWrite *****************
  1037 ;; Defined at:
  1038 ;;		line 34 in file "SPI.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  dat             1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  dat             1    0[COMMON] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_isr
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065     00BD                     _spiWrite:	
  1066                           ;psect for function _spiWrite
  1067                           
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _spiWrite: [wreg]
  1071                           ;spiWrite@dat stored from wreg
  1072     00BD  00F0               	movwf	spiWrite@dat
  1073     00BE                     i1l744:
  1074                           
  1075                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1076     00BE  0870               	movf	spiWrite@dat,w
  1077     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1078     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1079     00C1  0093               	movwf	19	;volatile
  1080     00C2                     i1l49:
  1081     00C2  0008               	return
  1082     00C3                     __end_of_spiWrite:
  1083     007E                     btemp	set	126	;btemp
  1084     007E                     wtemp0	set	126
  1085                           
  1086                           	psect	idloc
  1087                           
  1088                           ;Config register IDLOC0 @ 0x2000
  1089                           ;	unspecified, using default values
  1090     2000                     	org	8192
  1091     2000  3FFF               	dw	16383
  1092                           
  1093                           ;Config register IDLOC1 @ 0x2001
  1094                           ;	unspecified, using default values
  1095     2001                     	org	8193
  1096     2001  3FFF               	dw	16383
  1097                           
  1098                           ;Config register IDLOC2 @ 0x2002
  1099                           ;	unspecified, using default values
  1100     2002                     	org	8194
  1101     2002  3FFF               	dw	16383
  1102                           
  1103                           ;Config register IDLOC3 @ 0x2003
  1104                           ;	unspecified, using default values
  1105     2003                     	org	8195
  1106     2003  3FFF               	dw	16383
  1107                           
  1108                           	psect	config
  1109                           
  1110                           ;Config register CONFIG1 @ 0x2007
  1111                           ;	Oscillator Selection bits
  1112                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1113                           ;	Watchdog Timer Enable bit
  1114                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1115                           ;	Power-up Timer Enable bit
  1116                           ;	PWRTE = OFF, PWRT disabled
  1117                           ;	RE3/MCLR pin function select bit
  1118                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1119                           ;	Code Protection bit
  1120                           ;	CP = OFF, Program memory code protection is disabled
  1121                           ;	Data Code Protection bit
  1122                           ;	CPD = OFF, Data memory code protection is disabled
  1123                           ;	Brown Out Reset Selection bits
  1124                           ;	BOREN = OFF, BOR disabled
  1125                           ;	Internal External Switchover bit
  1126                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1127                           ;	Fail-Safe Clock Monitor Enabled bit
  1128                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1129                           ;	Low Voltage Programming Enable bit
  1130                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1131                           ;	In-Circuit Debugger Mode bit
  1132                           ;	DEBUG = 0x1, unprogrammed default
  1133     2007                     	org	8199
  1134     2007  20D6               	dw	8406
  1135                           
  1136                           ;Config register CONFIG2 @ 0x2008
  1137                           ;	Brown-out Reset Selection bit
  1138                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1139                           ;	Flash Program Memory Self Write Enable bits
  1140                           ;	WRT = OFF, Write protection off
  1141     2008                     	org	8200
  1142     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     458
                           _ADC_Read
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _setup
     _spiInit
   _setupADC

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 02 23:24:23 2023

            _SSPSTATbits 0094                       l20 0079                       l23 0090  
                     l40 00A6                       l17 0069                       l39 00A1  
                     u50 0099                       u51 0098                       u60 006D  
                     u61 006C                       u77 008E                       u87 006F  
                    l110 0049                      l116 003E                      _ADC 0077  
                    l800 0099                      l810 0068                      l802 009B  
                    l730 0082                      l812 006D                      l804 009D  
                    l820 001E                      l740 0089                      l732 0083  
                    l806 00A0                      l830 0025                      l822 001F  
                    l734 0084                      l726 007A                      l808 005D  
                    l840 0031                      l832 002B                      l824 0020  
                    l816 0016                      l736 0087                      l728 007F  
                    l842 0034                      l834 002C                      l826 0023  
                    l818 001A                      l738 0088                      l844 0035  
                    l836 002D                      l828 0024                      l838 002E  
                    l846 003F                      l848 0055                      l798 0092  
                    _isr 00A7                     ?_isr 0070                     i1l49 00C2  
                   u4_20 00AD                     u4_21 00AC                     _main 003F  
                   btemp 007E         __end_of_ADC_Read 007A                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l105 00B6                    i1l744 00BE                    i1l790 00AD  
                  i1l792 00B3                    i1l788 00A7                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0016                    pclath 000A          __end_of_spiInit 00A7  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 005D                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013          ADC_Read@channel 0073  
       __end_of_setupADC 0091                ?_ADC_Read 0073                   saved_w 007E  
       __end_of_spiWrite 00C3                ??_spiInit 0076  __end_of__initialization 0012  
         __pcstackCOMMON 0070            __end_of_setup 003F               ??_ADC_Read 0075  
                ??_setup 0077               __pmaintext 003F               __pintentry 0004  
                _SSPSTAT 0094                ?_setupADC 0070                ?_spiWrite 0070  
                __ptext1 007A                  __ptext2 0016                  __ptext3 0091  
                __ptext4 005D                  __ptext5 00A7                  __ptext6 00BD  
                _spiInit 0091     end_of_initialization 0012               ??_setupADC 0073  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 00BD              __pbssCOMMON 0077  
              ___latbits 0002                 _ADC_Read 005D                 ?_spiInit 0073  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _setupADC 007A                 _temporal 0079  
               _spiWrite 00BD             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
