

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 12:55:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     000C                     _PIR1bits	set	12
   369     000B                     _INTCONbits	set	11
   370     0005                     _PORTA	set	5
   371     0006                     _PORTB	set	6
   372     0008                     _PORTD	set	8
   373     0013                     _SSPBUF	set	19
   374     0014                     _SSPCON	set	20
   375     001F                     _ADCON0	set	31
   376     001E                     _ADRESH	set	30
   377     001F                     _ADCON0bits	set	31
   378     0063                     _SSPIF	set	99
   379     0085                     _TRISAbits	set	133
   380     008C                     _PIE1bits	set	140
   381     008F                     _OSCCONbits	set	143
   382     0088                     _TRISD	set	136
   383     0086                     _TRISB	set	134
   384     0094                     _SSPSTATbits	set	148
   385     0094                     _SSPSTAT	set	148
   386     009F                     _ADCON1bits	set	159
   387     043B                     _TRISC3	set	1083
   388     043D                     _TRISC5	set	1085
   389     0189                     _ANSELH	set	393
   390     0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393     000F                     start_initialization:	
   394                           ; #config settings
   395                           
   396     000F                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   400     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   401     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   402     0012                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405     0012                     __end_of__initialization:
   406     0012  0183               	clrf	3
   407     0013  120A  118A  283E   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410     0077                     __pbssCOMMON:
   411     0077                     _ADC:
   412     0077                     	ds	2
   413     0079                     _temporal:
   414     0079                     	ds	1
   415                           
   416                           	psect	cstackCOMMON
   417     0070                     __pcstackCOMMON:
   418     0070                     ?_setup:
   419     0070                     ?_setupADC:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0070                     ?_spiReceiveWait:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ??_spiReceiveWait:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ?_spiWrite:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ??_spiWrite:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_spiRead:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ??_spiRead:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ?_isr:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     spiWrite@dat:	
   447                           ; 1 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451     0070                     	ds	1
   452     0071                     ??_isr:
   453                           
   454                           ; 1 bytes @ 0x1
   455     0071                     	ds	2
   456     0073                     ??_setupADC:
   457     0073                     ?_spiInit:	
   458                           ; 1 bytes @ 0x3
   459                           
   460     0073                     ?_ADC_Read:	
   461                           ; 1 bytes @ 0x3
   462                           
   463     0073                     spiInit@sDataSample:	
   464                           ; 2 bytes @ 0x3
   465                           
   466     0073                     ADC_Read@channel:	
   467                           ; 1 bytes @ 0x3
   468                           
   469                           
   470                           ; 2 bytes @ 0x3
   471     0073                     	ds	1
   472     0074                     spiInit@sClockIdle:
   473                           
   474                           ; 1 bytes @ 0x4
   475     0074                     	ds	1
   476     0075                     ??_ADC_Read:
   477     0075                     spiInit@sTransmitEdge:	
   478                           ; 1 bytes @ 0x5
   479                           
   480                           
   481                           ; 1 bytes @ 0x5
   482     0075                     	ds	1
   483     0076                     ??_spiInit:
   484     0076                     spiInit@sType:	
   485                           ; 1 bytes @ 0x6
   486                           
   487                           
   488                           ; 1 bytes @ 0x6
   489     0076                     	ds	1
   490     0077                     ??_setup:
   491     0077                     ??_main:	
   492                           ; 1 bytes @ 0x7
   493                           
   494                           
   495                           	psect	maintext
   496     003E                     __pmaintext:	
   497                           ; 1 bytes @ 0x7
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 64 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : B00/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels required when called: 5
   523 ;; This function calls:
   524 ;;		_ADC_Read
   525 ;;		_setup
   526 ;;		_setupADC
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532     003E                     _main:	
   533                           ;psect for function _main
   534                           
   535     003E                     l824:	
   536                           ;incstack = 0
   537                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   538                           
   539                           
   540                           ;main.c: 65:     setup();
   541     003E  120A  118A  2016  120A  118A  	fcall	_setup
   542                           
   543                           ;main.c: 66:     setupADC();
   544     0043  120A  118A  2098  120A  118A  	fcall	_setupADC
   545     0048                     l108:	
   546                           ;main.c: 70:     while(1){
   547                           
   548                           
   549                           ;main.c: 71:        ADC = ADC_Read(0);
   550     0048  3000               	movlw	0
   551     0049  00F3               	movwf	ADC_Read@channel
   552     004A  00F4               	movwf	ADC_Read@channel+1
   553     004B  120A  118A  205C  120A  118A  	fcall	_ADC_Read
   554     0050  0874               	movf	?_ADC_Read+1,w
   555     0051  00F8               	movwf	_ADC+1
   556     0052  0873               	movf	?_ADC_Read,w
   557     0053  00F7               	movwf	_ADC
   558     0054                     l826:
   559                           
   560                           ;main.c: 72:        PORTB = ADC;
   561     0054  0877               	movf	_ADC,w
   562     0055  1283               	bcf	3,5	;RP0=0, select bank0
   563     0056  1303               	bcf	3,6	;RP1=0, select bank0
   564     0057  0086               	movwf	6	;volatile
   565     0058  2848               	goto	l108
   566     0059  120A  118A  280C   	ljmp	start
   567     005C                     __end_of_main:
   568                           
   569                           	psect	text1
   570     0098                     __ptext1:	
   571 ;; *************** function _setupADC *****************
   572 ;; Defined at:
   573 ;;		line 14 in file "ADC.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          1       0       0       0       0
   590 ;;      Totals:         1       0       0       0       0
   591 ;;Total ram usage:        1 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 3
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601     0098                     _setupADC:	
   602                           ;psect for function _setupADC
   603                           
   604     0098                     l726:	
   605                           ;incstack = 0
   606                           ; Regs used in _setupADC: [wreg+status,2]
   607                           
   608                           
   609                           ;ADC.c: 15:     ANSEL = ANSEL | 0x01;
   610     0098  1683               	bsf	3,5	;RP0=1, select bank3
   611     0099  1703               	bsf	3,6	;RP1=1, select bank3
   612     009A  0808               	movf	8,w	;volatile
   613     009B  3801               	iorlw	1
   614     009C  0088               	movwf	8	;volatile
   615     009D                     l728:
   616                           
   617                           ;ADC.c: 16:     ADCON0 = 0x00;
   618     009D  1283               	bcf	3,5	;RP0=0, select bank0
   619     009E  1303               	bcf	3,6	;RP1=0, select bank0
   620     009F  019F               	clrf	31	;volatile
   621     00A0                     l730:
   622                           
   623                           ;ADC.c: 17:     ADCON0bits.ADCS1 = 0;
   624     00A0  139F               	bcf	31,7	;volatile
   625     00A1                     l732:
   626                           
   627                           ;ADC.c: 18:     ADCON0bits.ADCS0 = 0;
   628     00A1  131F               	bcf	31,6	;volatile
   629     00A2                     l734:
   630                           
   631                           ;ADC.c: 19:     ADCON1bits.VCFG1 = 0;
   632     00A2  1683               	bsf	3,5	;RP0=1, select bank1
   633     00A3  1303               	bcf	3,6	;RP1=0, select bank1
   634     00A4  129F               	bcf	31,5	;volatile
   635     00A5                     l736:
   636                           
   637                           ;ADC.c: 20:     ADCON1bits.VCFG0 = 0;
   638     00A5  121F               	bcf	31,4	;volatile
   639     00A6                     l738:
   640                           
   641                           ;ADC.c: 22:     ADCON1bits.ADFM = 0;
   642     00A6  139F               	bcf	31,7	;volatile
   643     00A7                     l740:
   644                           
   645                           ;ADC.c: 23:     ADCON0bits.ADON = 1;
   646     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   647     00A8  1303               	bcf	3,6	;RP1=0, select bank0
   648     00A9  141F               	bsf	31,0	;volatile
   649                           
   650                           ;ADC.c: 24:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   651     00AA  3021               	movlw	33
   652     00AB  00F3               	movwf	??_setupADC
   653     00AC                     u77:
   654     00AC  0BF3               	decfsz	??_setupADC,f
   655     00AD  28AC               	goto	u77
   656     00AE                     l21:
   657     00AE  0008               	return
   658     00AF                     __end_of_setupADC:
   659                           
   660                           	psect	text2
   661     0016                     __ptext2:	
   662 ;; *************** function _setup *****************
   663 ;; Defined at:
   664 ;;		line 79 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 4
   685 ;; This function calls:
   686 ;;		_spiInit
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692     0016                     _setup:	
   693                           ;psect for function _setup
   694                           
   695     0016                     l804:	
   696                           ;incstack = 0
   697                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   698                           
   699                           
   700                           ;main.c: 80:     ANSEL = 0;
   701     0016  1683               	bsf	3,5	;RP0=1, select bank3
   702     0017  1703               	bsf	3,6	;RP1=1, select bank3
   703     0018  0188               	clrf	8	;volatile
   704                           
   705                           ;main.c: 81:     ANSELH = 0;
   706     0019  0189               	clrf	9	;volatile
   707                           
   708                           ;main.c: 83:     TRISB = 0;
   709     001A  1683               	bsf	3,5	;RP0=1, select bank1
   710     001B  1303               	bcf	3,6	;RP1=0, select bank1
   711     001C  0186               	clrf	6	;volatile
   712                           
   713                           ;main.c: 84:     TRISD = 0;
   714     001D  0188               	clrf	8	;volatile
   715                           
   716                           ;main.c: 86:     PORTA = 0;
   717     001E  1283               	bcf	3,5	;RP0=0, select bank0
   718     001F  1303               	bcf	3,6	;RP1=0, select bank0
   719     0020  0185               	clrf	5	;volatile
   720                           
   721                           ;main.c: 87:     PORTB = 0;
   722     0021  0186               	clrf	6	;volatile
   723                           
   724                           ;main.c: 88:     PORTD = 0;
   725     0022  0188               	clrf	8	;volatile
   726     0023                     l806:
   727                           
   728                           ;main.c: 90:     OSCCONbits.IRCF = 0b110;
   729     0023  1683               	bsf	3,5	;RP0=1, select bank1
   730     0024  1303               	bcf	3,6	;RP1=0, select bank1
   731     0025  080F               	movf	15,w	;volatile
   732     0026  398F               	andlw	-113
   733     0027  3860               	iorlw	96
   734     0028  008F               	movwf	15	;volatile
   735     0029                     l808:
   736                           
   737                           ;main.c: 91:     OSCCONbits.SCS = 1;
   738     0029  140F               	bsf	15,0	;volatile
   739     002A                     l810:
   740                           
   741                           ;main.c: 92:     INTCONbits.GIE = 1;
   742     002A  178B               	bsf	11,7	;volatile
   743     002B                     l812:
   744                           
   745                           ;main.c: 93:     INTCONbits.PEIE = 1;
   746     002B  170B               	bsf	11,6	;volatile
   747     002C                     l814:
   748                           
   749                           ;main.c: 94:     PIR1bits.SSPIF = 0;
   750     002C  1283               	bcf	3,5	;RP0=0, select bank0
   751     002D  1303               	bcf	3,6	;RP1=0, select bank0
   752     002E  118C               	bcf	12,3	;volatile
   753     002F                     l816:
   754                           
   755                           ;main.c: 95:     PIE1bits.SSPIE = 1;
   756     002F  1683               	bsf	3,5	;RP0=1, select bank1
   757     0030  1303               	bcf	3,6	;RP1=0, select bank1
   758     0031  158C               	bsf	12,3	;volatile
   759     0032                     l818:
   760                           
   761                           ;main.c: 96:     TRISAbits.TRISA5 = 1;
   762     0032  1685               	bsf	5,5	;volatile
   763     0033                     l820:
   764                           
   765                           ;main.c: 97:     TRISAbits.TRISA0 = 1;
   766     0033  1405               	bsf	5,0	;volatile
   767     0034                     l822:
   768                           
   769                           ;main.c: 99:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   770     0034  01F3               	clrf	spiInit@sDataSample
   771     0035  01F4               	clrf	spiInit@sClockIdle
   772     0036  01F5               	clrf	spiInit@sTransmitEdge
   773     0037  3024               	movlw	36
   774     0038  120A  118A  20AF  120A  118A  	fcall	_spiInit
   775     003D                     l114:
   776     003D  0008               	return
   777     003E                     __end_of_setup:
   778                           
   779                           	psect	text3
   780     00AF                     __ptext3:	
   781 ;; *************** function _spiInit *****************
   782 ;; Defined at:
   783 ;;		line 12 in file "SPI.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  sType           1    wreg     enum E1292
   786 ;;  sDataSample     1    3[COMMON] enum E1300
   787 ;;  sClockIdle      1    4[COMMON] enum E1304
   788 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  sType           1    6[COMMON] enum E1292
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         3       0       0       0       0
   801 ;;      Locals:         1       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0
   803 ;;      Totals:         4       0       0       0       0
   804 ;;Total ram usage:        4 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 3
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_setup
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814     00AF                     _spiInit:	
   815                           ;psect for function _spiInit
   816                           
   817                           
   818                           ;incstack = 0
   819                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   820                           ;spiInit@sType stored from wreg
   821     00AF  00F6               	movwf	spiInit@sType
   822     00B0                     l786:
   823                           
   824                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   825     00B0  1683               	bsf	3,5	;RP0=1, select bank1
   826     00B1  1303               	bcf	3,6	;RP1=0, select bank1
   827     00B2  1287               	bcf	7,5	;volatile
   828                           
   829                           ;SPI.c: 15:     if(sType & 0b00000100)
   830     00B3  1D76               	btfss	spiInit@sType,2
   831     00B4  28B6               	goto	u51
   832     00B5  28B7               	goto	u50
   833     00B6                     u51:
   834     00B6  28BB               	goto	l792
   835     00B7                     u50:
   836     00B7                     l788:
   837                           
   838                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   839     00B7  0875               	movf	spiInit@sTransmitEdge,w
   840     00B8  0094               	movwf	20	;volatile
   841     00B9                     l790:
   842                           
   843                           ;SPI.c: 18:         TRISC3 = 1;
   844     00B9  1587               	bsf	7,3	;volatile
   845                           
   846                           ;SPI.c: 19:     }
   847     00BA  28BF               	goto	l37
   848     00BB                     l792:
   849                           
   850                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   851     00BB  0873               	movf	spiInit@sDataSample,w
   852     00BC  0475               	iorwf	spiInit@sTransmitEdge,w
   853     00BD  0094               	movwf	20	;volatile
   854     00BE                     l794:
   855                           
   856                           ;SPI.c: 23:         TRISC3 = 0;
   857     00BE  1187               	bcf	7,3	;volatile
   858     00BF                     l37:	
   859                           ;SPI.c: 24:     }
   860                           
   861                           
   862                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   863     00BF  0876               	movf	spiInit@sType,w
   864     00C0  0474               	iorwf	spiInit@sClockIdle,w
   865     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   866     00C2  1303               	bcf	3,6	;RP1=0, select bank0
   867     00C3  0094               	movwf	20	;volatile
   868     00C4                     l38:
   869     00C4  0008               	return
   870     00C5                     __end_of_spiInit:
   871                           
   872                           	psect	text4
   873     005C                     __ptext4:	
   874 ;; *************** function _ADC_Read *****************
   875 ;; Defined at:
   876 ;;		line 5 in file "ADC.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  channel         2    3[COMMON] unsigned int 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  2    3[COMMON] unsigned int 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         2       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          2       0       0       0       0
   893 ;;      Totals:         4       0       0       0       0
   894 ;;Total ram usage:        4 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 3
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904     005C                     _ADC_Read:	
   905                           ;psect for function _ADC_Read
   906                           
   907     005C                     l796:	
   908                           ;incstack = 0
   909                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   910                           
   911                           
   912                           ;ADC.c: 6:     ADCON0bits.CHS = channel;
   913     005C  0873               	movf	ADC_Read@channel,w
   914     005D  00F5               	movwf	??_ADC_Read
   915     005E  0DF5               	rlf	??_ADC_Read,f
   916     005F  0DF5               	rlf	??_ADC_Read,f
   917     0060  1283               	bcf	3,5	;RP0=0, select bank0
   918     0061  1303               	bcf	3,6	;RP1=0, select bank0
   919     0062  081F               	movf	31,w	;volatile
   920     0063  0675               	xorwf	??_ADC_Read,w
   921     0064  39C3               	andlw	-61
   922     0065  0675               	xorwf	??_ADC_Read,w
   923     0066  009F               	movwf	31	;volatile
   924     0067                     l798:
   925                           
   926                           ;ADC.c: 7:     ADCON0bits.GO = 1;
   927     0067  149F               	bsf	31,1	;volatile
   928     0068                     l15:	
   929                           ;ADC.c: 8:     while(ADCON0bits.GO);
   930                           
   931     0068  189F               	btfsc	31,1	;volatile
   932     0069  286B               	goto	u61
   933     006A  286C               	goto	u60
   934     006B                     u61:
   935     006B  2868               	goto	l15
   936     006C                     u60:
   937     006C                     l800:
   938                           
   939                           ;ADC.c: 9:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   940     006C  3021               	movlw	33
   941     006D  00F5               	movwf	??_ADC_Read
   942     006E                     u87:
   943     006E  0BF5               	decfsz	??_ADC_Read,f
   944     006F  286E               	goto	u87
   945                           
   946                           ;ADC.c: 10:     return (ADRESH);
   947     0070  1283               	bcf	3,5	;RP0=0, select bank0
   948     0071  1303               	bcf	3,6	;RP1=0, select bank0
   949     0072  081E               	movf	30,w	;volatile
   950     0073  00F5               	movwf	??_ADC_Read
   951     0074  01F6               	clrf	??_ADC_Read+1
   952     0075  0875               	movf	??_ADC_Read,w
   953     0076  00F3               	movwf	?_ADC_Read
   954     0077  0876               	movf	??_ADC_Read+1,w
   955     0078  00F4               	movwf	?_ADC_Read+1
   956     0079                     l18:
   957     0079  0008               	return
   958     007A                     __end_of_ADC_Read:
   959                           
   960                           	psect	text5
   961     007A                     __ptext5:	
   962 ;; *************** function _isr *****************
   963 ;; Defined at:
   964 ;;		line 54 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, pclath, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0
   980 ;;      Temps:          2       0       0       0       0
   981 ;;      Totals:         2       0       0       0       0
   982 ;;Total ram usage:        2 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 2
   985 ;; This function calls:
   986 ;;		_spiRead
   987 ;;		_spiWrite
   988 ;; This function is called by:
   989 ;;		Interrupt level 1
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993     007A                     _isr:	
   994                           ;psect for function _isr
   995                           
   996     007A                     i1l776:
   997                           
   998                           ;main.c: 55:    if(SSPIF == 1){
   999     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1000     007B  1303               	bcf	3,6	;RP1=0, select bank0
  1001     007C  1D8C               	btfss	12,3	;volatile
  1002     007D  287F               	goto	u4_21
  1003     007E  2880               	goto	u4_20
  1004     007F                     u4_21:
  1005     007F  2891               	goto	i1l103
  1006     0080                     u4_20:
  1007     0080                     i1l778:
  1008                           
  1009                           ;main.c: 56:         PORTD = spiRead();
  1010     0080  120A  118A  20C5  120A  118A  	fcall	_spiRead
  1011     0085  1283               	bcf	3,5	;RP0=0, select bank0
  1012     0086  1303               	bcf	3,6	;RP1=0, select bank0
  1013     0087  0088               	movwf	8	;volatile
  1014                           
  1015                           ;main.c: 57:         spiWrite(ADC);
  1016     0088  0877               	movf	_ADC,w
  1017     0089  120A  118A  20D5  120A  118A  	fcall	_spiWrite
  1018     008E                     i1l780:
  1019                           
  1020                           ;main.c: 58:         SSPIF = 0;
  1021     008E  1283               	bcf	3,5	;RP0=0, select bank0
  1022     008F  1303               	bcf	3,6	;RP1=0, select bank0
  1023     0090  118C               	bcf	12,3	;volatile
  1024     0091                     i1l103:
  1025     0091  0872               	movf	??_isr+1,w
  1026     0092  008A               	movwf	10
  1027     0093  0E71               	swapf	??_isr,w
  1028     0094  0083               	movwf	3
  1029     0095  0EFE               	swapf	btemp,f
  1030     0096  0E7E               	swapf	btemp,w
  1031     0097  0009               	retfie
  1032     0098                     __end_of_isr:
  1033                           
  1034                           	psect	intentry
  1035     0004                     __pintentry:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1038                           
  1039     0004                     interrupt_function:
  1040     007E                     saved_w	set	btemp
  1041     0004  00FE               	movwf	btemp
  1042     0005  0E03               	swapf	3,w
  1043     0006  00F1               	movwf	??_isr
  1044     0007  080A               	movf	10,w
  1045     0008  00F2               	movwf	??_isr+1
  1046     0009  120A  118A  287A   	ljmp	_isr
  1047                           
  1048                           	psect	text6
  1049     00D5                     __ptext6:	
  1050 ;; *************** function _spiWrite *****************
  1051 ;; Defined at:
  1052 ;;		line 34 in file "SPI.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  dat             1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  dat             1    0[COMMON] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         1       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         1       0       0       0       0
  1070 ;;Total ram usage:        1 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_isr
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079     00D5                     _spiWrite:	
  1080                           ;psect for function _spiWrite
  1081                           
  1082                           
  1083                           ;incstack = 0
  1084                           ; Regs used in _spiWrite: [wreg]
  1085                           ;spiWrite@dat stored from wreg
  1086     00D5  00F0               	movwf	spiWrite@dat
  1087     00D6                     i1l742:
  1088                           
  1089                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1090     00D6  0870               	movf	spiWrite@dat,w
  1091     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1092     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1093     00D9  0093               	movwf	19	;volatile
  1094     00DA                     i1l47:
  1095     00DA  0008               	return
  1096     00DB                     __end_of_spiWrite:
  1097                           
  1098                           	psect	text7
  1099     00C5                     __ptext7:	
  1100 ;; *************** function _spiRead *****************
  1101 ;; Defined at:
  1102 ;;		line 47 in file "SPI.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      unsigned char 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; Hardware stack levels required when called: 1
  1123 ;; This function calls:
  1124 ;;		_spiReceiveWait
  1125 ;; This function is called by:
  1126 ;;		_isr
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130     00C5                     _spiRead:	
  1131                           ;psect for function _spiRead
  1132                           
  1133     00C5                     i1l744:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1136                           
  1137                           
  1138                           ;SPI.c: 49:     spiReceiveWait();
  1139     00C5  120A  118A  20CE  120A  118A  	fcall	_spiReceiveWait
  1140     00CA                     i1l746:
  1141                           
  1142                           ;SPI.c: 50:     return(SSPBUF);
  1143     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1144     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1145     00CC  0813               	movf	19,w	;volatile
  1146     00CD                     i1l55:
  1147     00CD  0008               	return
  1148     00CE                     __end_of_spiRead:
  1149                           
  1150                           	psect	text8
  1151     00CE                     __ptext8:	
  1152 ;; *************** function _spiReceiveWait *****************
  1153 ;; Defined at:
  1154 ;;		line 29 in file "SPI.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		None
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_spiRead
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181     00CE                     _spiReceiveWait:	
  1182                           ;psect for function _spiReceiveWait
  1183                           
  1184     00CE                     i1l716:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _spiReceiveWait: []
  1187                           
  1188     00CE                     i1l41:	
  1189                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1190                           
  1191     00CE  1683               	bsf	3,5	;RP0=1, select bank1
  1192     00CF  1303               	bcf	3,6	;RP1=0, select bank1
  1193     00D0  1C14               	btfss	20,0	;volatile
  1194     00D1  28D3               	goto	u2_21
  1195     00D2  28D4               	goto	u2_20
  1196     00D3                     u2_21:
  1197     00D3  28CE               	goto	i1l41
  1198     00D4                     u2_20:
  1199     00D4                     i1l44:
  1200     00D4  0008               	return
  1201     00D5                     __end_of_spiReceiveWait:
  1202     007E                     btemp	set	126	;btemp
  1203     007E                     wtemp0	set	126
  1204                           
  1205                           	psect	idloc
  1206                           
  1207                           ;Config register IDLOC0 @ 0x2000
  1208                           ;	unspecified, using default values
  1209     2000                     	org	8192
  1210     2000  3FFF               	dw	16383
  1211                           
  1212                           ;Config register IDLOC1 @ 0x2001
  1213                           ;	unspecified, using default values
  1214     2001                     	org	8193
  1215     2001  3FFF               	dw	16383
  1216                           
  1217                           ;Config register IDLOC2 @ 0x2002
  1218                           ;	unspecified, using default values
  1219     2002                     	org	8194
  1220     2002  3FFF               	dw	16383
  1221                           
  1222                           ;Config register IDLOC3 @ 0x2003
  1223                           ;	unspecified, using default values
  1224     2003                     	org	8195
  1225     2003  3FFF               	dw	16383
  1226                           
  1227                           	psect	config
  1228                           
  1229                           ;Config register CONFIG1 @ 0x2007
  1230                           ;	Oscillator Selection bits
  1231                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1232                           ;	Watchdog Timer Enable bit
  1233                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1234                           ;	Power-up Timer Enable bit
  1235                           ;	PWRTE = OFF, PWRT disabled
  1236                           ;	RE3/MCLR pin function select bit
  1237                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1238                           ;	Code Protection bit
  1239                           ;	CP = OFF, Program memory code protection is disabled
  1240                           ;	Data Code Protection bit
  1241                           ;	CPD = OFF, Data memory code protection is disabled
  1242                           ;	Brown Out Reset Selection bits
  1243                           ;	BOREN = OFF, BOR disabled
  1244                           ;	Internal External Switchover bit
  1245                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1246                           ;	Fail-Safe Clock Monitor Enabled bit
  1247                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1248                           ;	Low Voltage Programming Enable bit
  1249                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1250                           ;	In-Circuit Debugger Mode bit
  1251                           ;	DEBUG = 0x1, unprogrammed default
  1252     2007                     	org	8199
  1253     2007  20D6               	dw	8406
  1254                           
  1255                           ;Config register CONFIG2 @ 0x2008
  1256                           ;	Brown-out Reset Selection bit
  1257                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1258                           ;	Flash Program Memory Self Write Enable bits
  1259                           ;	WRT = OFF, Write protection off
  1260     2008                     	org	8200
  1261     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     458
                           _ADC_Read
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      98
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _setup
     _spiInit
   _setupADC

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 12:55:54 2023

            _SSPSTATbits 0094                       l21 00AE                       l15 0068  
                     l18 0079                       l37 00BF                       l38 00C4  
                     u50 00B7                       u51 00B6                       u60 006C  
                     u61 006B                       u77 00AC                       u87 006E  
                    l114 003D                      l108 0048                      _ADC 0077  
                    l800 006C                      l810 002A                      l730 00A0  
                    l820 0033                      l812 002B                      l804 0016  
                    l740 00A7                      l732 00A1                      l822 0034  
                    l814 002C                      l806 0023                      l734 00A2  
                    l726 0098                      l816 002F                      l808 0029  
                    l736 00A5                      l728 009D                      l824 003E  
                    l818 0032                      l738 00A6                      l826 0054  
                    l790 00B9                      l792 00BB                      l794 00BE  
                    l786 00B0                      l796 005C                      l788 00B7  
                    l798 0067                      _isr 007A                     ?_isr 0070  
                   i1l41 00CE                     i1l44 00D4                     i1l55 00CD  
                   i1l47 00DA                     u2_20 00D4                     u2_21 00D3  
                   u4_20 0080                     u4_21 007F                     _main 003E  
                   btemp 007E         __end_of_ADC_Read 007A                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l103 0091                    i1l716 00CE                    i1l742 00D6  
                  i1l744 00C5                    i1l746 00CA                    i1l780 008E  
                  i1l776 007A                    i1l778 0080                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _setup 0016  
                  pclath 000A          __end_of_spiInit 00C5          __end_of_spiRead 00CE  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 005C                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013          ADC_Read@channel 0073         __end_of_setupADC 00AF  
              ?_ADC_Read 0073                   saved_w 007E         __end_of_spiWrite 00DB  
              ??_spiInit 0076                ??_spiRead 0070  __end_of__initialization 0012  
         __pcstackCOMMON 0070            __end_of_setup 003E               ??_ADC_Read 0075  
                ??_setup 0077               __pmaintext 003E               __pintentry 0004  
                _SSPSTAT 0094                ?_setupADC 0070                ?_spiWrite 0070  
                __ptext1 0098                  __ptext2 0016                  __ptext3 00AF  
                __ptext4 005C                  __ptext5 007A                  __ptext6 00D5  
                __ptext7 00C5                  __ptext8 00CE                  _spiInit 00AF  
                _spiRead 00C5     end_of_initialization 0012               ??_setupADC 0073  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 00CE      start_initialization 000F              __end_of_isr 0098  
 __end_of_spiReceiveWait 00D5              __pbssCOMMON 0077                ___latbits 0002  
        ?_spiReceiveWait 0070                 _ADC_Read 005C                 ?_spiInit 0073  
               ?_spiRead 0070     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _setupADC 0098  
               _temporal 0079                 _spiWrite 00D5             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F  
