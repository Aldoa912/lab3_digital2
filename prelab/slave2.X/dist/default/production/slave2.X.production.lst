

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 23:10:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000E                     	;# 
   307     000F                     	;# 
   308     0010                     	;# 
   309     0011                     	;# 
   310     0012                     	;# 
   311     0013                     	;# 
   312     0014                     	;# 
   313     0015                     	;# 
   314     0015                     	;# 
   315     0016                     	;# 
   316     0017                     	;# 
   317     0018                     	;# 
   318     0019                     	;# 
   319     001A                     	;# 
   320     001B                     	;# 
   321     001B                     	;# 
   322     001C                     	;# 
   323     001D                     	;# 
   324     001E                     	;# 
   325     001F                     	;# 
   326     0081                     	;# 
   327     0085                     	;# 
   328     0086                     	;# 
   329     0087                     	;# 
   330     0088                     	;# 
   331     0089                     	;# 
   332     008C                     	;# 
   333     008D                     	;# 
   334     008E                     	;# 
   335     008F                     	;# 
   336     0090                     	;# 
   337     0091                     	;# 
   338     0092                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0094                     	;# 
   343     0095                     	;# 
   344     0096                     	;# 
   345     0097                     	;# 
   346     0098                     	;# 
   347     0099                     	;# 
   348     009A                     	;# 
   349     009B                     	;# 
   350     009C                     	;# 
   351     009D                     	;# 
   352     009E                     	;# 
   353     009F                     	;# 
   354     0105                     	;# 
   355     0107                     	;# 
   356     0108                     	;# 
   357     0109                     	;# 
   358     010C                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     0185                     	;# 
   364     0187                     	;# 
   365     0188                     	;# 
   366     0189                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     000C                     _PIR1bits	set	12
   370     0006                     _PORTB	set	6
   371     0005                     _PORTA	set	5
   372     0006                     _PORTBbits	set	6
   373     000B                     _INTCONbits	set	11
   374     0008                     _PORTD	set	8
   375     0013                     _SSPBUF	set	19
   376     0014                     _SSPCON	set	20
   377     001F                     _ADCON0	set	31
   378     001E                     _ADRESH	set	30
   379     001F                     _ADCON0bits	set	31
   380     0063                     _SSPIF	set	99
   381     0096                     _IOCB	set	150
   382     0095                     _WPUBbits	set	149
   383     0081                     _OPTION_REGbits	set	129
   384     0085                     _TRISAbits	set	133
   385     008C                     _PIE1bits	set	140
   386     008F                     _OSCCONbits	set	143
   387     0088                     _TRISD	set	136
   388     0086                     _TRISB	set	134
   389     0094                     _SSPSTATbits	set	148
   390     0094                     _SSPSTAT	set	148
   391     009F                     _ADCON1bits	set	159
   392     043B                     _TRISC3	set	1083
   393     043D                     _TRISC5	set	1085
   394     0189                     _ANSELH	set	393
   395     0188                     _ANSEL	set	392
   396                           
   397                           	psect	cinit
   398     000F                     start_initialization:	
   399                           ; #config settings
   400                           
   401     000F                     __initialization:
   402                           
   403                           ; Clear objects allocated to COMMON
   404     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   405     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   406     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   407     0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   408     0013  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   409     0014                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412     0014                     __end_of__initialization:
   413     0014  0183               	clrf	3
   414     0015  120A  118A  2925   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417     0077                     __pbssCOMMON:
   418     0077                     _ADC:
   419     0077                     	ds	2
   420     0079                     _bandera:
   421     0079                     	ds	1
   422     007A                     _contador:
   423     007A                     	ds	1
   424     007B                     _flag:
   425     007B                     	ds	1
   426                           
   427                           	psect	cstackCOMMON
   428     0070                     __pcstackCOMMON:
   429     0070                     ?_setup:
   430     0070                     ?_setupADC:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ?_spiReceiveWait:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ??_spiReceiveWait:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?_spiWrite:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ??_spiWrite:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_spiRead:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ??_spiRead:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_isr:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ?_ADC_Read:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     spiWrite@dat:	
   461                           ; 2 bytes @ 0x0
   462                           
   463     0070                     ADC_Read@channel:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 2 bytes @ 0x0
   468     0070                     	ds	2
   469     0072                     ??_ADC_Read:
   470                           
   471                           ; 1 bytes @ 0x2
   472     0072                     	ds	2
   473     0074                     ??_isr:
   474                           
   475                           ; 1 bytes @ 0x4
   476     0074                     	ds	3
   477                           
   478                           	psect	cstackBANK0
   479     0020                     __pcstackBANK0:
   480     0020                     ??_setupADC:
   481     0020                     ?_spiInit:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0020                     spiInit@sDataSample:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 1 bytes @ 0x0
   489     0020                     	ds	1
   490     0021                     spiInit@sClockIdle:
   491                           
   492                           ; 1 bytes @ 0x1
   493     0021                     	ds	1
   494     0022                     spiInit@sTransmitEdge:
   495                           
   496                           ; 1 bytes @ 0x2
   497     0022                     	ds	1
   498     0023                     ??_spiInit:
   499     0023                     spiInit@sType:	
   500                           ; 1 bytes @ 0x3
   501                           
   502                           
   503                           ; 1 bytes @ 0x3
   504     0023                     	ds	1
   505     0024                     ??_setup:
   506     0024                     ??_main:	
   507                           ; 1 bytes @ 0x4
   508                           
   509                           
   510                           	psect	maintext
   511     0125                     __pmaintext:	
   512                           ; 1 bytes @ 0x4
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 93 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2, status,0, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : B00/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels required when called: 5
   538 ;; This function calls:
   539 ;;		_setup
   540 ;;		_setupADC
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546     0125                     _main:	
   547                           ;psect for function _main
   548                           
   549     0125                     l1036:	
   550                           ;incstack = 0
   551                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   552                           
   553                           
   554                           ;main.c: 94:     setup();
   555     0125  120A  118A  209C  120A  118A  	fcall	_setup
   556                           
   557                           ;main.c: 95:     setupADC();
   558     012A  120A  118A  210B  120A  118A  	fcall	_setupADC
   559     012F                     l128:	
   560                           ;main.c: 99:     while(1){
   561                           
   562     012F                     l129:	
   563                           ;main.c: 101:     }
   564                           
   565     012F  292F               	goto	l128
   566     0130  120A  118A  280C   	ljmp	start
   567     0133                     __end_of_main:
   568                           
   569                           	psect	text1
   570     010B                     __ptext1:	
   571 ;; *************** function _setupADC *****************
   572 ;; Defined at:
   573 ;;		line 14 in file "ADC.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          0       1       0       0       0
   590 ;;      Totals:         0       1       0       0       0
   591 ;;Total ram usage:        1 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 3
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601     010B                     _setupADC:	
   602                           ;psect for function _setupADC
   603                           
   604     010B                     l880:	
   605                           ;incstack = 0
   606                           ; Regs used in _setupADC: [wreg+status,2]
   607                           
   608                           
   609                           ;ADC.c: 15:     ANSEL = ANSEL | 0x01;
   610     010B  1683               	bsf	3,5	;RP0=1, select bank3
   611     010C  1703               	bsf	3,6	;RP1=1, select bank3
   612     010D  0808               	movf	8,w	;volatile
   613     010E  3801               	iorlw	1
   614     010F  0088               	movwf	8	;volatile
   615     0110                     l882:
   616                           
   617                           ;ADC.c: 16:     ADCON0 = 0x00;
   618     0110  1283               	bcf	3,5	;RP0=0, select bank0
   619     0111  1303               	bcf	3,6	;RP1=0, select bank0
   620     0112  019F               	clrf	31	;volatile
   621     0113                     l884:
   622                           
   623                           ;ADC.c: 17:     ADCON0bits.ADCS1 = 0;
   624     0113  139F               	bcf	31,7	;volatile
   625     0114                     l886:
   626                           
   627                           ;ADC.c: 18:     ADCON0bits.ADCS0 = 0;
   628     0114  131F               	bcf	31,6	;volatile
   629     0115                     l888:
   630                           
   631                           ;ADC.c: 19:     ADCON1bits.VCFG1 = 0;
   632     0115  1683               	bsf	3,5	;RP0=1, select bank1
   633     0116  1303               	bcf	3,6	;RP1=0, select bank1
   634     0117  129F               	bcf	31,5	;volatile
   635     0118                     l890:
   636                           
   637                           ;ADC.c: 20:     ADCON1bits.VCFG0 = 0;
   638     0118  121F               	bcf	31,4	;volatile
   639     0119                     l892:
   640                           
   641                           ;ADC.c: 22:     ADCON1bits.ADFM = 0;
   642     0119  139F               	bcf	31,7	;volatile
   643     011A                     l894:
   644                           
   645                           ;ADC.c: 23:     ADCON0bits.ADON = 1;
   646     011A  1283               	bcf	3,5	;RP0=0, select bank0
   647     011B  1303               	bcf	3,6	;RP1=0, select bank0
   648     011C  141F               	bsf	31,0	;volatile
   649                           
   650                           ;ADC.c: 24:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   651     011D  3020               	movlw	32
   652     011E  1283               	bcf	3,5	;RP0=0, select bank0
   653     011F  1303               	bcf	3,6	;RP1=0, select bank0
   654     0120  00A0               	movwf	??_setupADC
   655     0121                     u197:
   656     0121  0BA0               	decfsz	??_setupADC,f
   657     0122  2921               	goto	u197
   658     0123  0000               	nop
   659     0124                     l21:
   660     0124  0008               	return
   661     0125                     __end_of_setupADC:
   662                           
   663                           	psect	text2
   664     009C                     __ptext2:	
   665 ;; *************** function _setup *****************
   666 ;; Defined at:
   667 ;;		line 107 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; Hardware stack levels required when called: 4
   688 ;; This function calls:
   689 ;;		_spiInit
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695     009C                     _setup:	
   696                           ;psect for function _setup
   697                           
   698     009C                     l992:	
   699                           ;incstack = 0
   700                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;main.c: 108:     ANSEL = 0;
   704     009C  1683               	bsf	3,5	;RP0=1, select bank3
   705     009D  1703               	bsf	3,6	;RP1=1, select bank3
   706     009E  0188               	clrf	8	;volatile
   707                           
   708                           ;main.c: 109:     ANSELH = 0;
   709     009F  0189               	clrf	9	;volatile
   710     00A0                     l994:
   711                           
   712                           ;main.c: 111:     TRISB = 0b00000011;
   713     00A0  3003               	movlw	3
   714     00A1  1683               	bsf	3,5	;RP0=1, select bank1
   715     00A2  1303               	bcf	3,6	;RP1=0, select bank1
   716     00A3  0086               	movwf	6	;volatile
   717     00A4                     l996:
   718                           
   719                           ;main.c: 112:     TRISD = 0;
   720     00A4  0188               	clrf	8	;volatile
   721     00A5                     l998:
   722                           
   723                           ;main.c: 114:     PORTA = 0;
   724     00A5  1283               	bcf	3,5	;RP0=0, select bank0
   725     00A6  1303               	bcf	3,6	;RP1=0, select bank0
   726     00A7  0185               	clrf	5	;volatile
   727     00A8                     l1000:
   728                           
   729                           ;main.c: 115:     PORTB = 0;
   730     00A8  0186               	clrf	6	;volatile
   731     00A9                     l1002:
   732                           
   733                           ;main.c: 116:     PORTD = 0;
   734     00A9  0188               	clrf	8	;volatile
   735     00AA                     l1004:
   736                           
   737                           ;main.c: 118:     OSCCONbits.IRCF = 0b110;
   738     00AA  1683               	bsf	3,5	;RP0=1, select bank1
   739     00AB  1303               	bcf	3,6	;RP1=0, select bank1
   740     00AC  080F               	movf	15,w	;volatile
   741     00AD  398F               	andlw	-113
   742     00AE  3860               	iorlw	96
   743     00AF  008F               	movwf	15	;volatile
   744     00B0                     l1006:
   745                           
   746                           ;main.c: 119:     OSCCONbits.SCS = 1;
   747     00B0  140F               	bsf	15,0	;volatile
   748     00B1                     l1008:
   749                           
   750                           ;main.c: 120:     INTCONbits.GIE = 1;
   751     00B1  178B               	bsf	11,7	;volatile
   752     00B2                     l1010:
   753                           
   754                           ;main.c: 121:     INTCONbits.PEIE = 1;
   755     00B2  170B               	bsf	11,6	;volatile
   756     00B3                     l1012:
   757                           
   758                           ;main.c: 122:     PIR1bits.SSPIF = 0;
   759     00B3  1283               	bcf	3,5	;RP0=0, select bank0
   760     00B4  1303               	bcf	3,6	;RP1=0, select bank0
   761     00B5  118C               	bcf	12,3	;volatile
   762     00B6                     l1014:
   763                           
   764                           ;main.c: 123:     PIE1bits.SSPIE = 1;
   765     00B6  1683               	bsf	3,5	;RP0=1, select bank1
   766     00B7  1303               	bcf	3,6	;RP1=0, select bank1
   767     00B8  158C               	bsf	12,3	;volatile
   768     00B9                     l1016:
   769                           
   770                           ;main.c: 124:     TRISAbits.TRISA5 = 1;
   771     00B9  1685               	bsf	5,5	;volatile
   772     00BA                     l1018:
   773                           
   774                           ;main.c: 125:     TRISAbits.TRISA0 = 1;
   775     00BA  1405               	bsf	5,0	;volatile
   776     00BB                     l1020:
   777                           
   778                           ;main.c: 126:     OPTION_REGbits.nRBPU = 0;
   779     00BB  1381               	bcf	1,7	;volatile
   780     00BC                     l1022:
   781                           
   782                           ;main.c: 127:     WPUBbits.WPUB0 = 1;
   783     00BC  1415               	bsf	21,0	;volatile
   784     00BD                     l1024:
   785                           
   786                           ;main.c: 128:     WPUBbits.WPUB1 = 1;
   787     00BD  1495               	bsf	21,1	;volatile
   788     00BE                     l1026:
   789                           
   790                           ;main.c: 131:     IOCB = 0b00000111;
   791     00BE  3007               	movlw	7
   792     00BF  0096               	movwf	22	;volatile
   793     00C0                     l1028:
   794                           
   795                           ;main.c: 134:     INTCONbits.RBIF = 0;
   796     00C0  100B               	bcf	11,0	;volatile
   797     00C1                     l1030:
   798                           
   799                           ;main.c: 135:     INTCONbits.RBIE = 1;
   800     00C1  158B               	bsf	11,3	;volatile
   801     00C2                     l1032:
   802                           
   803                           ;main.c: 136:     INTCONbits.GIE = 1;
   804     00C2  178B               	bsf	11,7	;volatile
   805     00C3                     l1034:
   806                           
   807                           ;main.c: 138:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   808     00C3  1283               	bcf	3,5	;RP0=0, select bank0
   809     00C4  1303               	bcf	3,6	;RP1=0, select bank0
   810     00C5  01A0               	clrf	spiInit@sDataSample
   811     00C6  01A1               	clrf	spiInit@sClockIdle
   812     00C7  01A2               	clrf	spiInit@sTransmitEdge
   813     00C8  3024               	movlw	36
   814     00C9  120A  118A  20CF  120A  118A  	fcall	_spiInit
   815     00CE                     l134:
   816     00CE  0008               	return
   817     00CF                     __end_of_setup:
   818                           
   819                           	psect	text3
   820     00CF                     __ptext3:	
   821 ;; *************** function _spiInit *****************
   822 ;; Defined at:
   823 ;;		line 12 in file "SPI.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  sType           1    wreg     enum E1292
   826 ;;  sDataSample     1    0[BANK0 ] enum E1300
   827 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   828 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  sType           1    3[BANK0 ] enum E1292
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       3       0       0       0
   841 ;;      Locals:         0       1       0       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         0       4       0       0       0
   844 ;;Total ram usage:        4 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; Hardware stack levels required when called: 3
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_setup
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854     00CF                     _spiInit:	
   855                           ;psect for function _spiInit
   856                           
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   860                           ;spiInit@sType stored from wreg
   861     00CF  1283               	bcf	3,5	;RP0=0, select bank0
   862     00D0  1303               	bcf	3,6	;RP1=0, select bank0
   863     00D1  00A3               	movwf	spiInit@sType
   864     00D2                     l982:
   865                           
   866                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   867     00D2  1683               	bsf	3,5	;RP0=1, select bank1
   868     00D3  1303               	bcf	3,6	;RP1=0, select bank1
   869     00D4  1287               	bcf	7,5	;volatile
   870                           
   871                           ;SPI.c: 15:     if(sType & 0b00000100)
   872     00D5  1283               	bcf	3,5	;RP0=0, select bank0
   873     00D6  1303               	bcf	3,6	;RP1=0, select bank0
   874     00D7  1D23               	btfss	spiInit@sType,2
   875     00D8  28DA               	goto	u181
   876     00D9  28DB               	goto	u180
   877     00DA                     u181:
   878     00DA  28E1               	goto	l988
   879     00DB                     u180:
   880     00DB                     l984:
   881                           
   882                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   883     00DB  0822               	movf	spiInit@sTransmitEdge,w
   884     00DC  1683               	bsf	3,5	;RP0=1, select bank1
   885     00DD  1303               	bcf	3,6	;RP1=0, select bank1
   886     00DE  0094               	movwf	20	;volatile
   887     00DF                     l986:
   888                           
   889                           ;SPI.c: 18:         TRISC3 = 1;
   890     00DF  1587               	bsf	7,3	;volatile
   891                           
   892                           ;SPI.c: 19:     }
   893     00E0  28E7               	goto	l37
   894     00E1                     l988:
   895                           
   896                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   897     00E1  0820               	movf	spiInit@sDataSample,w
   898     00E2  0422               	iorwf	spiInit@sTransmitEdge,w
   899     00E3  1683               	bsf	3,5	;RP0=1, select bank1
   900     00E4  1303               	bcf	3,6	;RP1=0, select bank1
   901     00E5  0094               	movwf	20	;volatile
   902     00E6                     l990:
   903                           
   904                           ;SPI.c: 23:         TRISC3 = 0;
   905     00E6  1187               	bcf	7,3	;volatile
   906     00E7                     l37:	
   907                           ;SPI.c: 24:     }
   908                           
   909                           
   910                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   911     00E7  1283               	bcf	3,5	;RP0=0, select bank0
   912     00E8  1303               	bcf	3,6	;RP1=0, select bank0
   913     00E9  0823               	movf	spiInit@sType,w
   914     00EA  0421               	iorwf	spiInit@sClockIdle,w
   915     00EB  0094               	movwf	20	;volatile
   916     00EC                     l38:
   917     00EC  0008               	return
   918     00ED                     __end_of_spiInit:
   919                           
   920                           	psect	text4
   921     0018                     __ptext4:	
   922 ;; *************** function _isr *****************
   923 ;; Defined at:
   924 ;;		line 56 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0
   940 ;;      Temps:          3       0       0       0       0
   941 ;;      Totals:         3       0       0       0       0
   942 ;;Total ram usage:        3 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; Hardware stack levels required when called: 2
   945 ;; This function calls:
   946 ;;		_ADC_Read
   947 ;;		_spiRead
   948 ;;		_spiWrite
   949 ;; This function is called by:
   950 ;;		Interrupt level 1
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954     0018                     _isr:	
   955                           ;psect for function _isr
   956                           
   957     0018                     i1l940:
   958                           
   959                           ;main.c: 57:    if(SSPIF == 1){
   960     0018  1283               	bcf	3,5	;RP0=0, select bank0
   961     0019  1303               	bcf	3,6	;RP1=0, select bank0
   962     001A  1D8C               	btfss	12,3	;volatile
   963     001B  281D               	goto	u12_21
   964     001C  281E               	goto	u12_20
   965     001D                     u12_21:
   966     001D  287E               	goto	i1l966
   967     001E                     u12_20:
   968     001E                     i1l942:
   969                           
   970                           ;main.c: 58:        if (flag == 0){
   971     001E  087B               	movf	_flag,w
   972     001F  1D03               	btfss	3,2
   973     0020  2822               	goto	u13_21
   974     0021  2823               	goto	u13_20
   975     0022                     u13_21:
   976     0022  2852               	goto	i1l952
   977     0023                     u13_20:
   978     0023                     i1l944:
   979                           
   980                           ;main.c: 59:         ADC = ADC_Read(0);
   981     0023  3000               	movlw	0
   982     0024  00F0               	movwf	ADC_Read@channel
   983     0025  00F1               	movwf	ADC_Read@channel+1
   984     0026  120A  118A  20ED  120A  118A  	fcall	_ADC_Read
   985     002B  0871               	movf	?_ADC_Read+1,w
   986     002C  00F8               	movwf	_ADC+1
   987     002D  0870               	movf	?_ADC_Read,w
   988     002E  00F7               	movwf	_ADC
   989                           
   990                           ;main.c: 60:         PORTD = spiRead();
   991     002F  120A  118A  2133  120A  118A  	fcall	_spiRead
   992     0034  1283               	bcf	3,5	;RP0=0, select bank0
   993     0035  1303               	bcf	3,6	;RP1=0, select bank0
   994     0036  0088               	movwf	8	;volatile
   995                           
   996                           ;main.c: 61:         spiWrite('s');
   997     0037  3073               	movlw	115
   998     0038  120A  118A  2143  120A  118A  	fcall	_spiWrite
   999     003D                     i1l946:
  1000                           
  1001                           ;main.c: 62:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1002     003D  30C7               	movlw	199
  1003     003E  00F4               	movwf	??_isr
  1004     003F                     u20_27:
  1005     003F  2840               	nop2
  1006     0040  0BF4               	decfsz	??_isr,f
  1007     0041  283F               	goto	u20_27
  1008     0042  2843               	nop2
  1009     0043  2844               	nop2
  1010     0044                     i1l948:
  1011                           
  1012                           ;main.c: 63:         PORTD = spiRead();
  1013     0044  120A  118A  2133  120A  118A  	fcall	_spiRead
  1014     0049  1283               	bcf	3,5	;RP0=0, select bank0
  1015     004A  1303               	bcf	3,6	;RP1=0, select bank0
  1016     004B  0088               	movwf	8	;volatile
  1017     004C                     i1l950:
  1018                           
  1019                           ;main.c: 64:         spiWrite(ADC);
  1020     004C  0877               	movf	_ADC,w
  1021     004D  120A  118A  2143  120A  118A  	fcall	_spiWrite
  1022     0052                     i1l952:
  1023                           
  1024                           ;main.c: 66:        if (flag == 1){
  1025     0052  037B               	decf	_flag,w
  1026     0053  1D03               	btfss	3,2
  1027     0054  2856               	goto	u14_21
  1028     0055  2857               	goto	u14_20
  1029     0056                     u14_21:
  1030     0056  287B               	goto	i1l964
  1031     0057                     u14_20:
  1032     0057                     i1l954:
  1033                           
  1034                           ;main.c: 67:            PORTD = spiRead();
  1035     0057  120A  118A  2133  120A  118A  	fcall	_spiRead
  1036     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1037     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1038     005E  0088               	movwf	8	;volatile
  1039                           
  1040                           ;main.c: 68:            spiWrite('n');
  1041     005F  306E               	movlw	110
  1042     0060  120A  118A  2143  120A  118A  	fcall	_spiWrite
  1043     0065                     i1l956:
  1044                           
  1045                           ;main.c: 69:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1046     0065  30C7               	movlw	199
  1047     0066  00F4               	movwf	??_isr
  1048     0067                     u21_27:
  1049     0067  2868               	nop2
  1050     0068  0BF4               	decfsz	??_isr,f
  1051     0069  2867               	goto	u21_27
  1052     006A  286B               	nop2
  1053     006B  286C               	nop2
  1054     006C                     i1l958:
  1055                           
  1056                           ;main.c: 70:            PORTD = spiRead();
  1057     006C  120A  118A  2133  120A  118A  	fcall	_spiRead
  1058     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1059     0072  1303               	bcf	3,6	;RP1=0, select bank0
  1060     0073  0088               	movwf	8	;volatile
  1061     0074                     i1l960:
  1062                           
  1063                           ;main.c: 71:            spiWrite(contador);
  1064     0074  087A               	movf	_contador,w
  1065     0075  120A  118A  2143  120A  118A  	fcall	_spiWrite
  1066     007A                     i1l962:
  1067                           
  1068                           ;main.c: 72:            flag = 0;
  1069     007A  01FB               	clrf	_flag
  1070     007B                     i1l964:
  1071                           
  1072                           ;main.c: 74:        SSPIF = 0;
  1073     007B  1283               	bcf	3,5	;RP0=0, select bank0
  1074     007C  1303               	bcf	3,6	;RP1=0, select bank0
  1075     007D  118C               	bcf	12,3	;volatile
  1076     007E                     i1l966:
  1077                           
  1078                           ;main.c: 76:    if (INTCONbits.RBIF){
  1079     007E  1C0B               	btfss	11,0	;volatile
  1080     007F  2881               	goto	u15_21
  1081     0080  2882               	goto	u15_20
  1082     0081                     u15_21:
  1083     0081  2895               	goto	i1l123
  1084     0082                     u15_20:
  1085     0082                     i1l968:
  1086                           
  1087                           ;main.c: 77:         if (PORTBbits.RB0 == 0){
  1088     0082  1806               	btfsc	6,0	;volatile
  1089     0083  2885               	goto	u16_21
  1090     0084  2886               	goto	u16_20
  1091     0085                     u16_21:
  1092     0085  288D               	goto	i1l120
  1093     0086                     u16_20:
  1094     0086                     i1l970:
  1095                           
  1096                           ;main.c: 78:             contador++;
  1097     0086  3001               	movlw	1
  1098     0087  00F4               	movwf	??_isr
  1099     0088  0874               	movf	??_isr,w
  1100     0089  07FA               	addwf	_contador,f
  1101     008A                     i1l972:
  1102                           
  1103                           ;main.c: 79:             flag = 1;
  1104     008A  01FB               	clrf	_flag
  1105     008B  0AFB               	incf	_flag,f
  1106                           
  1107                           ;main.c: 81:         }
  1108     008C  2894               	goto	i1l978
  1109     008D                     i1l120:	
  1110                           ;main.c: 83:    else if (PORTBbits.RB1 == 0){
  1111                           
  1112     008D  1886               	btfsc	6,1	;volatile
  1113     008E  2890               	goto	u17_21
  1114     008F  2891               	goto	u17_20
  1115     0090                     u17_21:
  1116     0090  2894               	goto	i1l978
  1117     0091                     u17_20:
  1118     0091                     i1l974:
  1119                           
  1120                           ;main.c: 84:             contador--;
  1121     0091  3001               	movlw	1
  1122     0092  02FA               	subwf	_contador,f
  1123     0093  288A               	goto	i1l972
  1124     0094                     i1l978:
  1125                           
  1126                           ;main.c: 87:     INTCONbits.RBIF = 0;
  1127     0094  100B               	bcf	11,0	;volatile
  1128     0095                     i1l123:
  1129     0095  0876               	movf	??_isr+2,w
  1130     0096  008A               	movwf	10
  1131     0097  0E75               	swapf	??_isr+1,w
  1132     0098  0083               	movwf	3
  1133     0099  0EFE               	swapf	btemp,f
  1134     009A  0E7E               	swapf	btemp,w
  1135     009B  0009               	retfie
  1136     009C                     __end_of_isr:
  1137                           
  1138                           	psect	intentry
  1139     0004                     __pintentry:	
  1140                           ;incstack = 0
  1141                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1142                           
  1143     0004                     interrupt_function:
  1144     007E                     saved_w	set	btemp
  1145     0004  00FE               	movwf	btemp
  1146     0005  0E03               	swapf	3,w
  1147     0006  00F5               	movwf	??_isr+1
  1148     0007  080A               	movf	10,w
  1149     0008  00F6               	movwf	??_isr+2
  1150     0009  120A  118A  2818   	ljmp	_isr
  1151                           
  1152                           	psect	text5
  1153     0143                     __ptext5:	
  1154 ;; *************** function _spiWrite *****************
  1155 ;; Defined at:
  1156 ;;		line 34 in file "SPI.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  dat             1    wreg     unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  dat             1    0[COMMON] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         1       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         1       0       0       0       0
  1174 ;;Total ram usage:        1 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_isr
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183     0143                     _spiWrite:	
  1184                           ;psect for function _spiWrite
  1185                           
  1186                           
  1187                           ;incstack = 0
  1188                           ; Regs used in _spiWrite: [wreg]
  1189                           ;spiWrite@dat stored from wreg
  1190     0143  00F0               	movwf	spiWrite@dat
  1191     0144                     i1l762:
  1192                           
  1193                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1194     0144  0870               	movf	spiWrite@dat,w
  1195     0145  1283               	bcf	3,5	;RP0=0, select bank0
  1196     0146  1303               	bcf	3,6	;RP1=0, select bank0
  1197     0147  0093               	movwf	19	;volatile
  1198     0148                     i1l47:
  1199     0148  0008               	return
  1200     0149                     __end_of_spiWrite:
  1201                           
  1202                           	psect	text6
  1203     0133                     __ptext6:	
  1204 ;; *************** function _spiRead *****************
  1205 ;; Defined at:
  1206 ;;		line 47 in file "SPI.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      unsigned char 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 1
  1227 ;; This function calls:
  1228 ;;		_spiReceiveWait
  1229 ;; This function is called by:
  1230 ;;		_isr
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234     0133                     _spiRead:	
  1235                           ;psect for function _spiRead
  1236                           
  1237     0133                     i1l764:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1240                           
  1241                           
  1242                           ;SPI.c: 49:     spiReceiveWait();
  1243     0133  120A  118A  213C  120A  118A  	fcall	_spiReceiveWait
  1244     0138                     i1l766:
  1245                           
  1246                           ;SPI.c: 50:     return(SSPBUF);
  1247     0138  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0139  1303               	bcf	3,6	;RP1=0, select bank0
  1249     013A  0813               	movf	19,w	;volatile
  1250     013B                     i1l55:
  1251     013B  0008               	return
  1252     013C                     __end_of_spiRead:
  1253                           
  1254                           	psect	text7
  1255     013C                     __ptext7:	
  1256 ;; *************** function _spiReceiveWait *****************
  1257 ;; Defined at:
  1258 ;;		line 29 in file "SPI.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		None
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_spiRead
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285     013C                     _spiReceiveWait:	
  1286                           ;psect for function _spiReceiveWait
  1287                           
  1288     013C                     i1l736:	
  1289                           ;incstack = 0
  1290                           ; Regs used in _spiReceiveWait: []
  1291                           
  1292     013C                     i1l41:	
  1293                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1294                           
  1295     013C  1683               	bsf	3,5	;RP0=1, select bank1
  1296     013D  1303               	bcf	3,6	;RP1=0, select bank1
  1297     013E  1C14               	btfss	20,0	;volatile
  1298     013F  2941               	goto	u2_21
  1299     0140  2942               	goto	u2_20
  1300     0141                     u2_21:
  1301     0141  293C               	goto	i1l41
  1302     0142                     u2_20:
  1303     0142                     i1l44:
  1304     0142  0008               	return
  1305     0143                     __end_of_spiReceiveWait:
  1306                           
  1307                           	psect	text8
  1308     00ED                     __ptext8:	
  1309 ;; *************** function _ADC_Read *****************
  1310 ;; Defined at:
  1311 ;;		line 5 in file "ADC.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  channel         2    0[COMMON] unsigned int 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  2    0[COMMON] unsigned int 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         2       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          2       0       0       0       0
  1328 ;;      Totals:         4       0       0       0       0
  1329 ;;Total ram usage:        4 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_isr
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338     00ED                     _ADC_Read:	
  1339                           ;psect for function _ADC_Read
  1340                           
  1341     00ED                     i1l872:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  1344                           
  1345                           
  1346                           ;ADC.c: 6:     ADCON0bits.CHS = channel;
  1347     00ED  0870               	movf	ADC_Read@channel,w
  1348     00EE  00F2               	movwf	??_ADC_Read
  1349     00EF  0DF2               	rlf	??_ADC_Read,f
  1350     00F0  0DF2               	rlf	??_ADC_Read,f
  1351     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1352     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1353     00F3  081F               	movf	31,w	;volatile
  1354     00F4  0672               	xorwf	??_ADC_Read,w
  1355     00F5  39C3               	andlw	-61
  1356     00F6  0672               	xorwf	??_ADC_Read,w
  1357     00F7  009F               	movwf	31	;volatile
  1358     00F8                     i1l874:
  1359                           
  1360                           ;ADC.c: 7:     ADCON0bits.GO = 1;
  1361     00F8  149F               	bsf	31,1	;volatile
  1362     00F9                     i1l15:	
  1363                           ;ADC.c: 8:     while(ADCON0bits.GO);
  1364                           
  1365     00F9  189F               	btfsc	31,1	;volatile
  1366     00FA  28FC               	goto	u11_21
  1367     00FB  28FD               	goto	u11_20
  1368     00FC                     u11_21:
  1369     00FC  28F9               	goto	i1l15
  1370     00FD                     u11_20:
  1371     00FD                     i1l876:
  1372                           
  1373                           ;ADC.c: 9:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1374     00FD  3021               	movlw	33
  1375     00FE  00F2               	movwf	??_ADC_Read
  1376     00FF                     u22_27:
  1377     00FF  0BF2               	decfsz	??_ADC_Read,f
  1378     0100  28FF               	goto	u22_27
  1379                           
  1380                           ;ADC.c: 10:     return (ADRESH);
  1381     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1382     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1383     0103  081E               	movf	30,w	;volatile
  1384     0104  00F2               	movwf	??_ADC_Read
  1385     0105  01F3               	clrf	??_ADC_Read+1
  1386     0106  0872               	movf	??_ADC_Read,w
  1387     0107  00F0               	movwf	?_ADC_Read
  1388     0108  0873               	movf	??_ADC_Read+1,w
  1389     0109  00F1               	movwf	?_ADC_Read+1
  1390     010A                     i1l18:
  1391     010A  0008               	return
  1392     010B                     __end_of_ADC_Read:
  1393     007E                     btemp	set	126	;btemp
  1394     007E                     wtemp0	set	126
  1395                           
  1396                           	psect	idloc
  1397                           
  1398                           ;Config register IDLOC0 @ 0x2000
  1399                           ;	unspecified, using default values
  1400     2000                     	org	8192
  1401     2000  3FFF               	dw	16383
  1402                           
  1403                           ;Config register IDLOC1 @ 0x2001
  1404                           ;	unspecified, using default values
  1405     2001                     	org	8193
  1406     2001  3FFF               	dw	16383
  1407                           
  1408                           ;Config register IDLOC2 @ 0x2002
  1409                           ;	unspecified, using default values
  1410     2002                     	org	8194
  1411     2002  3FFF               	dw	16383
  1412                           
  1413                           ;Config register IDLOC3 @ 0x2003
  1414                           ;	unspecified, using default values
  1415     2003                     	org	8195
  1416     2003  3FFF               	dw	16383
  1417                           
  1418                           	psect	config
  1419                           
  1420                           ;Config register CONFIG1 @ 0x2007
  1421                           ;	Oscillator Selection bits
  1422                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1423                           ;	Watchdog Timer Enable bit
  1424                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1425                           ;	Power-up Timer Enable bit
  1426                           ;	PWRTE = OFF, PWRT disabled
  1427                           ;	RE3/MCLR pin function select bit
  1428                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1429                           ;	Code Protection bit
  1430                           ;	CP = OFF, Program memory code protection is disabled
  1431                           ;	Data Code Protection bit
  1432                           ;	CPD = OFF, Data memory code protection is disabled
  1433                           ;	Brown Out Reset Selection bits
  1434                           ;	BOREN = OFF, BOR disabled
  1435                           ;	Internal External Switchover bit
  1436                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1437                           ;	Fail-Safe Clock Monitor Enabled bit
  1438                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1439                           ;	Low Voltage Programming Enable bit
  1440                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1441                           ;	In-Circuit Debugger Mode bit
  1442                           ;	DEBUG = 0x1, unprogrammed default
  1443     2007                     	org	8199
  1444     2007  20D6               	dw	8406
  1445                           
  1446                           ;Config register CONFIG2 @ 0x2008
  1447                           ;	Brown-out Reset Selection bit
  1448                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1449                           ;	Flash Program Memory Self Write Enable bits
  1450                           ;	WRT = OFF, Write protection off
  1451     2008                     	org	8200
  1452     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC_Read

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     113
                                              4 COMMON     3     3      0
                           _ADC_Read
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_Read                                             4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _setupADC

 _isr (ROOT)
   _ADC_Read
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 23:10:03 2023

            _SSPSTATbits 0094                       l21 0124                       l37 00E7  
                     l38 00EC                      l134 00CE                      l128 012F  
                    l129 012F                      _ADC 0077                      l880 010B  
                    l890 0118                      l882 0110                      l892 0119  
                    l884 0113                      l990 00E6                      l982 00D2  
                    l894 011A                      l886 0114                      l984 00DB  
                    l992 009C                      l888 0115                      l986 00DF  
                    l994 00A0                      l988 00E1                      l996 00A4  
                    l998 00A5                      u180 00DB                      u181 00DA  
                    u197 0121                      _isr 0018                     l1000 00A8  
                   l1010 00B2                     l1002 00A9                     l1020 00BB  
                   l1012 00B3                     l1004 00AA                     l1030 00C1  
                   l1022 00BC                     l1014 00B6                     l1006 00B0  
                   l1032 00C2                     l1024 00BD                     l1016 00B9  
                   l1008 00B1                     l1034 00C3                     l1026 00BE  
                   l1018 00BA                     l1028 00C0                     l1036 0125  
                   ?_isr 0070                     _IOCB 0096                     i1l15 00F9  
                   i1l41 013C                     i1l18 010A                     i1l44 0142  
                   i1l55 013B                     i1l47 0148                     u2_20 0142  
                   u2_21 0141                     _flag 007B                     _main 0125  
                   btemp 007E         __end_of_ADC_Read 010B                     start 000C  
                  ??_isr 0074                    ?_main 0070                    _ANSEL 0188  
                  i1l120 008D                    i1l123 0095                    i1l736 013C  
                  i1l762 0144                    i1l764 0133                    i1l940 0018  
                  i1l766 0138                    i1l950 004C                    i1l942 001E  
                  i1l872 00ED                    i1l960 0074                    i1l944 0023  
                  i1l952 0052                    i1l874 00F8                    i1l970 0086  
                  i1l962 007A                    i1l954 0057                    i1l946 003D  
                  i1l876 00FD                    i1l972 008A                    i1l956 0065  
                  i1l964 007B                    i1l948 0044                    i1l974 0091  
                  i1l958 006C                    i1l966 007E                    i1l968 0082  
                  i1l978 0094                    u11_20 00FD                    u11_21 00FC  
                  u12_20 001E                    u12_21 001D                    u20_27 003F  
                  u13_20 0023                    u13_21 0022                    u21_27 0067  
                  u14_20 0057                    u14_21 0056                    u22_27 00FF  
                  u15_20 0082                    u15_21 0081                    u16_20 0086  
                  u16_21 0085                    u17_20 0091                    u17_21 0090  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 009C                    pclath 000A          __end_of_spiInit 00ED  
        __end_of_spiRead 013C                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0133                   ??_main 0024  
                 _ADCON0 001F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013          ADC_Read@channel 0070  
       __end_of_setupADC 0125                ?_ADC_Read 0070                   saved_w 007E  
       __end_of_spiWrite 0149                ??_spiInit 0023                ??_spiRead 0070  
__end_of__initialization 0014           __pcstackCOMMON 0070            __end_of_setup 00CF  
         _OPTION_REGbits 0081               ??_ADC_Read 0072                  ??_setup 0024  
             __pmaintext 0125               __pintentry 0004                  _SSPSTAT 0094  
              ?_setupADC 0070                ?_spiWrite 0070                  _bandera 0079  
                __ptext1 010B                  __ptext2 009C                  __ptext3 00CF  
                __ptext4 0018                  __ptext5 0143                  __ptext6 0133  
                __ptext7 013C                  __ptext8 00ED                  _spiInit 00CF  
                _spiRead 0133     end_of_initialization 0014               ??_setupADC 0020  
             ??_spiWrite 0070                _PORTBbits 0006                _TRISAbits 0085  
            spiWrite@dat 0070           _spiReceiveWait 013C      start_initialization 000F  
            __end_of_isr 009C   __end_of_spiReceiveWait 0143              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
               _ADC_Read 00ED                 ?_spiInit 0020                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _WPUBbits 0095                 _contador 007A  
               _setupADC 010B                 _spiWrite 0143             spiInit@sType 0023  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F  
